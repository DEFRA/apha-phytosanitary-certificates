<Activity mc:Ignorable="sap sap2010" x:Class="Data_validation" this:Data_validation.in_strCountryOfOrigin="Netherlands" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:str="clr-namespace:System.Text.RegularExpressions;assembly=System.Text.RegularExpressions" xmlns:this="clr-namespace:" xmlns:uasa="clr-namespace:UiPath.Activities.System.Arrays;assembly=UiPath.System.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="io_dtCommodityLines" Type="InArgument(sd:DataTable)" />
    <x:Property Name="in_strCountryOfOrigin" Type="InArgument(x:String)" />
    <x:Property Name="in_strSec11AD" Type="InArgument(x:String)" />
    <x:Property Name="in_dtAdvancedDeclarations" Type="InArgument(sd:DataTable)" />
  </x:Members>
  <this:Data_validation.in_strSec11AD>
    <InArgument x:TypeArguments="x:String" />
  </this:Data_validation.in_strSec11AD>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>Data_validation_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>System.Numerics</x:String>
      <x:String>UiPath.CSV</x:String>
      <x:String>UiPath.CSV.Activities</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>Microsoft.Win32.SafeHandles</x:String>
      <x:String>System.Net</x:String>
      <x:String>System.Globalization</x:String>
      <x:String>System.Configuration.Assemblies</x:String>
      <x:String>System.CodeDom.Compiler</x:String>
      <x:String>System.Buffers</x:String>
      <x:String>System.Buffers.Text</x:String>
      <x:String>System.Buffers.Binary</x:String>
      <x:String>System.Threading</x:String>
      <x:String>System.Threading.Tasks</x:String>
      <x:String>System.Threading.Tasks.Sources</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Text.Unicode</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Security.Principal</x:String>
      <x:String>System.Security.Permissions</x:String>
      <x:String>System.Security.Cryptography</x:String>
      <x:String>System.Runtime</x:String>
      <x:String>System.Runtime.Remoting</x:String>
      <x:String>System.Runtime.ExceptionServices</x:String>
      <x:String>System.Runtime.ConstrainedExecution</x:String>
      <x:String>System.Runtime.Versioning</x:String>
      <x:String>System.Runtime.Loader</x:String>
      <x:String>System.Runtime.Intrinsics</x:String>
      <x:String>System.Runtime.Intrinsics.Wasm</x:String>
      <x:String>System.Runtime.Intrinsics.Arm</x:String>
      <x:String>System.Runtime.Intrinsics.X86</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Runtime.InteropServices.ObjectiveC</x:String>
      <x:String>System.Runtime.InteropServices.Marshalling</x:String>
      <x:String>System.Runtime.InteropServices.ComTypes</x:String>
      <x:String>System.Runtime.CompilerServices</x:String>
      <x:String>System.Resources</x:String>
      <x:String>System.Reflection.Metadata</x:String>
      <x:String>System.Reflection.Emit</x:String>
      <x:String>System.IO.Enumeration</x:String>
      <x:String>System.Diagnostics.SymbolStore</x:String>
      <x:String>System.Diagnostics.Contracts</x:String>
      <x:String>System.Diagnostics.CodeAnalysis</x:String>
      <x:String>System.Diagnostics.Tracing</x:String>
      <x:String>System.Collections.Concurrent</x:String>
      <x:String>Internal</x:String>
      <x:String>System.CodeDom</x:String>
      <x:String>Microsoft.CSharp</x:String>
      <x:String>System.Linq.Expressions.Interpreter</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>UiPath.Workflow.Runtime</x:String>
      <x:String>System.Activities.Tracking</x:String>
      <x:String>System.Activities.Statements.Tracking</x:String>
      <x:String>System.Activities.Runtime</x:String>
      <x:String>System.Activities.Runtime.DurableInstancing</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>System.Activities.ParallelTracking</x:String>
      <x:String>System.Activities.Hosting</x:String>
      <x:String>System.Activities.Persistence</x:String>
      <x:String>System.Activities.DurableInstancing</x:String>
      <x:String>System.ComponentModel.Design.Serialization</x:String>
      <x:String>System.Security.Authentication.ExtendedProtection</x:String>
      <x:String>System.Timers</x:String>
      <x:String>System.ComponentModel.Design</x:String>
      <x:String>System.Xml.Schema</x:String>
      <x:String>System.Xml.Xsl</x:String>
      <x:String>System.Xml.Xsl.Runtime</x:String>
      <x:String>System.Xml.XPath</x:String>
      <x:String>System.Xml.Resolvers</x:String>
      <x:String>Microsoft.CodeAnalysis</x:String>
      <x:String>Microsoft.CodeAnalysis.FlowAnalysis</x:String>
      <x:String>Microsoft.CodeAnalysis.Text</x:String>
      <x:String>Microsoft.CodeAnalysis.Diagnostics</x:String>
      <x:String>Microsoft.CodeAnalysis.Diagnostics.Telemetry</x:String>
      <x:String>Microsoft.CodeAnalysis.Operations</x:String>
      <x:String>Microsoft.CodeAnalysis.Emit</x:String>
      <x:String>Microsoft.CodeAnalysis.VisualBasic</x:String>
      <x:String>Microsoft.CodeAnalysis.VisualBasic.Syntax</x:String>
      <x:String>Microsoft.VisualBasic.FileIO</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Activities.System.Collections</x:String>
      <x:String>UiPath.Activities.System.Arrays</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Text.RegularExpressions</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>System.CodeDom</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Linq.Async.Queryable</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>System.IO.Pipes</AssemblyReference>
      <AssemblyReference>System.Security.Cryptography</AssemblyReference>
      <AssemblyReference>System.Security.Principal.Windows</AssemblyReference>
      <AssemblyReference>System.Diagnostics.Process</AssemblyReference>
      <AssemblyReference>System.IO.MemoryMappedFiles</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Registry</AssemblyReference>
      <AssemblyReference>System.Net.Primitives</AssemblyReference>
      <AssemblyReference>System.Net.HttpListener</AssemblyReference>
      <AssemblyReference>System.Net.WebProxy</AssemblyReference>
      <AssemblyReference>System.Net.NameResolution</AssemblyReference>
      <AssemblyReference>System.Net.WebClient</AssemblyReference>
      <AssemblyReference>System.Net.Requests</AssemblyReference>
      <AssemblyReference>System.Net.ServicePoint</AssemblyReference>
      <AssemblyReference>System.Net.WebHeaderCollection</AssemblyReference>
      <AssemblyReference>System.Threading.AccessControl</AssemblyReference>
      <AssemblyReference>System.Threading</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Core</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>System.Threading.Tasks.Parallel</AssemblyReference>
      <AssemblyReference>System.Text.Encoding.CodePages</AssemblyReference>
      <AssemblyReference>System.Text.Encodings.Web</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>System.Security.Claims</AssemblyReference>
      <AssemblyReference>System.Security.Cryptography.Pkcs</AssemblyReference>
      <AssemblyReference>System.Security.Cryptography.ProtectedData</AssemblyReference>
      <AssemblyReference>System.Windows.Forms.Design</AssemblyReference>
      <AssemblyReference>System.Runtime.CompilerServices.VisualC</AssemblyReference>
      <AssemblyReference>System.Windows.Forms</AssemblyReference>
      <AssemblyReference>System.Resources.Writer</AssemblyReference>
      <AssemblyReference>System.Reflection.MetadataLoadContext</AssemblyReference>
      <AssemblyReference>Microsoft.PowerShell.Commands.Diagnostics</AssemblyReference>
      <AssemblyReference>System.Diagnostics.FileVersionInfo</AssemblyReference>
      <AssemblyReference>System.Diagnostics.DiagnosticSource</AssemblyReference>
      <AssemblyReference>System.Diagnostics.TraceSource</AssemblyReference>
      <AssemblyReference>System.Diagnostics.EventLog</AssemblyReference>
      <AssemblyReference>System.Diagnostics.PerformanceCounter</AssemblyReference>
      <AssemblyReference>System.Diagnostics.TextWriterTraceListener</AssemblyReference>
      <AssemblyReference>System.Diagnostics.StackTrace</AssemblyReference>
      <AssemblyReference>System.Collections.Concurrent</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>System.Net.Security</AssemblyReference>
      <AssemblyReference>System.Private.Xml.Linq</AssemblyReference>
      <AssemblyReference>System.Xml.XPath.XDocument</AssemblyReference>
      <AssemblyReference>Microsoft.CodeAnalysis.CSharp</AssemblyReference>
      <AssemblyReference>Microsoft.CodeAnalysis</AssemblyReference>
      <AssemblyReference>Microsoft.CodeAnalysis.VisualBasic</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Database.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Form.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Persistence.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Flowchart DisplayName="Data_validation" sap:VirtualizedContainerService.HintSize="774,658.84" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="x:Int32" Name="intCommodityIndex" />
      <Variable x:TypeArguments="x:String" Name="strAD_AllApplied" />
      <Variable x:TypeArguments="x:Boolean" Name="booMultipleCountries" />
      <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="listExtractedAD" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtPopUp" />
    </Flowchart.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Size x:Key="ShapeSize">50,50</av:Size>
        <av:Point x:Key="ShapeLocation">345,35</av:Point>
        <av:PointCollection x:Key="ConnectorLocation">370,85 370,115</av:PointCollection>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID34</x:Reference>
    </Flowchart.StartNode>
    <FlowStep x:Name="__ReferenceID32" sap2010:WorkflowViewState.IdRef="FlowStep_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">315,335</av:Point>
          <av:Size x:Key="ShapeSize">110,70</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">370,405 370,455</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="[intCommodityIndex]" DataTable="[io_dtCommodityLines]" DisplayName="For Each commodity Row in Data Table" sap:VirtualizedContainerService.HintSize="736,4555.2" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
        <ui:ForEachRow.Body>
          <ActivityAction x:TypeArguments="sd:DataRow">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="Commodity" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Body - Commodity" sap:VirtualizedContainerService.HintSize="702,4388.8" sap2010:WorkflowViewState.IdRef="Sequence_1">
              <Sequence.Variables>
                <Variable x:TypeArguments="sd:DataTable" Name="dtRegulations" />
                <Variable x:TypeArguments="x:String" Name="strHold" />
                <Variable x:TypeArguments="sd:DataTable" Name="dtMiniPopUp" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Sequence DisplayName="format row values" sap:VirtualizedContainerService.HintSize="668,332" sap2010:WorkflowViewState.IdRef="Sequence_34">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If Condition="[booMultipleCountries]" DisplayName="Handle country of origin based on multiple countries flag" sap:VirtualizedContainerService.HintSize="434,56.8" sap2010:WorkflowViewState.IdRef="If_6">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="468,165.6" sap2010:WorkflowViewState.IdRef="Sequence_20">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign DisplayName="Assign - remove brackets" sap:VirtualizedContainerService.HintSize="434,105.6" sap2010:WorkflowViewState.IdRef="Assign_25">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Object">[io_dtCommodityLines(intCommodityIndex)("country")]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Object">[regex.Replace(io_dtCommodityLines(intCommodityIndex)("country").tostring,"\(|\)","")]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="468,165.6" sap2010:WorkflowViewState.IdRef="Sequence_21">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign DisplayName="Assign country of origin" sap:VirtualizedContainerService.HintSize="434,105.6" sap2010:WorkflowViewState.IdRef="Assign_26">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Object">[io_dtCommodityLines(intCommodityIndex)("country")]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Object">[in_strCountryOfOrigin]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </If.Else>
                </If>
                <Assign sap2010:Annotation.AnnotationText="CHECK WITH RICHARD IF ID HAS ZEROS STRIPPED?&#xD;&#xA;POTENTIALLY BECAUSE OF EXCEL FORMATTING&#xD;&#xA;YES ZEROES EXIST NO NEED TO PAD - REMOVE AFTER TESTING OR ADD TO CSV" DisplayName="Assign - IS THIS REQUIRED? " sap:VirtualizedContainerService.HintSize="434,183.2" sap2010:WorkflowViewState.IdRef="Assign_47">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Object">[io_dtCommodityLines(intCommodityIndex)("ID")]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Object">[Commodity("ID").ToString.Trim.PadLeft(4, "0"c)]</InArgument>
                  </Assign.Value>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Assign>
              </Sequence>
              <Sequence DisplayName="Initialise &amp; populate mini pop up table" sap:VirtualizedContainerService.HintSize="668,1685.2" sap2010:WorkflowViewState.IdRef="Sequence_22">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:String" Name="strRegexPattern" />
                  <Variable x:TypeArguments="x:Int32" Name="intIndexPosition" />
                  <Variable x:TypeArguments="x:String" Name="strAD_CommodityText" />
                  <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="listSplitAD_Text" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:BuildDataTable DataTable="[dtMiniPopUp]" DisplayName="Build Data Table - initialise dtMiniPopUp" sap:VirtualizedContainerService.HintSize="502,92" sap2010:WorkflowViewState.IdRef="BuildDataTable_2" TableInfo="&lt;NewDataSet&gt;&#xD;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xD;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xD;&#xA;      &lt;xs:complexType&gt;&#xD;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xD;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xD;&#xA;            &lt;xs:complexType&gt;&#xD;&#xA;              &lt;xs:sequence&gt;&#xD;&#xA;                &lt;xs:element name=&quot;ID&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xD;&#xA;                  &lt;xs:simpleType&gt;&#xD;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xD;&#xA;                      &lt;xs:maxLength value=&quot;5&quot; /&gt;&#xD;&#xA;                    &lt;/xs:restriction&gt;&#xD;&#xA;                  &lt;/xs:simpleType&gt;&#xD;&#xA;                &lt;/xs:element&gt;&#xD;&#xA;                &lt;xs:element name=&quot;Part&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xD;&#xA;                  &lt;xs:simpleType&gt;&#xD;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xD;&#xA;                      &lt;xs:maxLength value=&quot;1&quot; /&gt;&#xD;&#xA;                    &lt;/xs:restriction&gt;&#xD;&#xA;                  &lt;/xs:simpleType&gt;&#xD;&#xA;                &lt;/xs:element&gt;&#xD;&#xA;                &lt;xs:element name=&quot;Item&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xD;&#xA;                  &lt;xs:simpleType&gt;&#xD;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xD;&#xA;                      &lt;xs:maxLength value=&quot;20&quot; /&gt;&#xD;&#xA;                    &lt;/xs:restriction&gt;&#xD;&#xA;                  &lt;/xs:simpleType&gt;&#xD;&#xA;                &lt;/xs:element&gt;&#xD;&#xA;                &lt;xs:element name=&quot;AD_x0020_Text&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xD;&#xA;                &lt;xs:element name=&quot;Compliant&quot; msdata:Caption=&quot;&quot; type=&quot;xs:boolean&quot; default=&quot;false&quot; minOccurs=&quot;0&quot; /&gt;&#xD;&#xA;                &lt;xs:element name=&quot;Annex&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xD;&#xA;                  &lt;xs:simpleType&gt;&#xD;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xD;&#xA;                      &lt;xs:maxLength value=&quot;2&quot; /&gt;&#xD;&#xA;                    &lt;/xs:restriction&gt;&#xD;&#xA;                  &lt;/xs:simpleType&gt;&#xD;&#xA;                &lt;/xs:element&gt;&#xD;&#xA;              &lt;/xs:sequence&gt;&#xD;&#xA;            &lt;/xs:complexType&gt;&#xD;&#xA;          &lt;/xs:element&gt;&#xD;&#xA;        &lt;/xs:choice&gt;&#xD;&#xA;      &lt;/xs:complexType&gt;&#xD;&#xA;    &lt;/xs:element&gt;&#xD;&#xA;  &lt;/xs:schema&gt;&#xD;&#xA;&lt;/NewDataSet&gt;" />
                <Assign DisplayName="Assign - create regex pattern" sap:VirtualizedContainerService.HintSize="502,114.4" sap2010:WorkflowViewState.IdRef="Assign_28">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[strRegexPattern]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">["\("+ Commodity("ID").ToString.Trim + "\)"]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap2010:Annotation.AnnotationText="look for (ID)" DisplayName="Assign - Get index position" sap:VirtualizedContainerService.HintSize="502,145.6" sap2010:WorkflowViewState.IdRef="Assign_29">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Int32">[intIndexPosition]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Int32">[listExtractedAD.select(function (x) x.Groups("Plant").Value).ToList.FindIndex(Function(s) regex.ismatch(s,strRegexPattern))]</InArgument>
                  </Assign.Value>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Assign>
                <If sap2010:Annotation.AnnotationText="what happens with just 1 plant?" Condition="[intIndexPosition = -1]" DisplayName="If - Get applicable AD text for commodity" sap:VirtualizedContainerService.HintSize="502,533.6" sap2010:WorkflowViewState.IdRef="If_7">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="468,165.6" sap2010:WorkflowViewState.IdRef="Sequence_27">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign DisplayName="Assign - add AD text" sap:VirtualizedContainerService.HintSize="434,105.6" sap2010:WorkflowViewState.IdRef="Assign_35">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strAD_CommodityText]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[strAD_AllApplied]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="468,165.6" sap2010:WorkflowViewState.IdRef="Sequence_24">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:String" Name="strCleanAD" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign DisplayName="Assign - remove multiple spaces" sap:VirtualizedContainerService.HintSize="434,105.6" sap2010:WorkflowViewState.IdRef="Assign_36">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strAD_CommodityText]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[(strAD_AllApplied + vbCr + regex.Replace(listExtractedAD(intIndexPosition).groups("AD").tostring,"\s+"," ")).trim]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </If.Else>
                </If>
                <ui:Matches FirstMatch="{x:Null}" sap2010:Annotation.AnnotationText="This will split the Ad text to individual part/item text aka consigment text" DisplayName="Find Matching Patterns - split AD text" sap:VirtualizedContainerService.HintSize="502,136.8" sap2010:WorkflowViewState.IdRef="Matches_2" Input="[strAD_CommodityText]" IsBuilderTabModified="False" Pattern="(?is)The consignment.*?(?=The consignment|\Z)" RegexOption="IgnoreCase, Compiled" Result="[listSplitAD_Text]">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:Matches>
                <ui:ForEach x:TypeArguments="str:Match" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="builds a portion of the mini popup table that will be evaluated and merged into main popup table" DisplayName="For Each consigment text" sap:VirtualizedContainerService.HintSize="502,570.8" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[listSplitAD_Text]">
                  <ui:ForEach.Body>
                    <ActivityAction x:TypeArguments="str:Match">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="str:Match" Name="consigmentMatch" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="468,387.6" sap2010:WorkflowViewState.IdRef="Sequence_23">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="str:Match" Name="rgxPart_Item" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="434,114.4" sap2010:WorkflowViewState.IdRef="Assign_38">
                          <Assign.To>
                            <OutArgument x:TypeArguments="str:Match">[rgxPart_Item]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="str:Match">[Regex.Match(consigmentMatch.Value,"(?i)(?:Annex )(?'annex'\d+)(?:.*part\s)(?'part'.)(?:\sitem\s)(?'item'.*?):")]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{Commodity(&quot;ID&quot;), rgxPart_Item.Groups(&quot;part&quot;).Value, rgxPart_Item.Groups(&quot;item&quot;).Value, consigmentMatch.Value, FALSE, rgxPart_Item.Groups(&quot;annex&quot;).Value}]" DataTable="[dtMiniPopUp]" DisplayName="Add Data Row - add part item row" sap:VirtualizedContainerService.HintSize="434,213.2" sap2010:WorkflowViewState.IdRef="AddDataRow_1" />
                      </Sequence>
                    </ActivityAction>
                  </ui:ForEach.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ForEach>
              </Sequence>
              <ui:Comment sap:VirtualizedContainerService.HintSize="668,147.2" sap2010:WorkflowViewState.IdRef="Comment_1" Text="PAss row into davids module&#xA;output - dtRegulation&#xA;&#xA;2 inputs - plant and country" />
              <WriteLine DisplayName="Write Line - input1" sap:VirtualizedContainerService.HintSize="668,123.2" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="[Commodity(&quot;Commodities&quot;).tostring]" />
              <WriteLine DisplayName="Write Line - input2" sap:VirtualizedContainerService.HintSize="668,123.2" sap2010:WorkflowViewState.IdRef="WriteLine_2" Text="[Commodity(&quot;Country&quot;).tostring]" />
              <ui:ReadCsvFile DataTable="[dtRegulations]" Delimitator="Comma" DisplayName="Read CSV" FilePath="matcheditems 1.csv" sap:VirtualizedContainerService.HintSize="668,190.8" sap2010:WorkflowViewState.IdRef="ReadCsvFile_1" />
              <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dtRegulations]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="668,1066" sap2010:WorkflowViewState.IdRef="ForEachRow_3">
                <ui:ForEachRow.Body>
                  <ActivityAction x:TypeArguments="sd:DataRow">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="sd:DataRow" Name="Regulation" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="634,867.6" sap2010:WorkflowViewState.IdRef="Sequence_14">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Flowchart sap2010:Annotation.AnnotationText="prohibited = red&#xA;no statement required = green&#xA;host is conditional = orange&#xA;origin is conditional = yellow&#xA;&#xA;from the Special Requirements column?&#xA;&#xA;found this as kay on the top of the self made azure app the team uses - is that correct?&#xA;David to output priority order" DisplayName="Flowchart - for each regulation" sap:VirtualizedContainerService.HintSize="774,658.84" sap2010:WorkflowViewState.IdRef="Flowchart_5">
                        <Flowchart.Variables>
                          <Variable x:TypeArguments="x:Boolean" Name="booPartItemMatch" />
                          <Variable x:TypeArguments="x:Int32" Name="intMiniRowIndex" />
                          <Variable x:TypeArguments="x:String" Name="strSpecial_Tag" />
                          <Variable x:TypeArguments="x:Boolean" Name="booStatementMismatch" />
                          <Variable x:TypeArguments="x:Boolean" Name="booAdvancedDeclaration" />
                          <Variable x:TypeArguments="x:Int32" Name="intAdvDecIndex" />
                          <Variable x:TypeArguments="x:Boolean" Name="booNurseryInfoBlank" />
                          <Variable x:TypeArguments="x:Boolean" Name="booADCountryOrigin" />
                        </Flowchart.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            <av:Point x:Key="ShapeLocation">275,35</av:Point>
                            <av:Size x:Key="ShapeSize">50,50</av:Size>
                            <av:PointCollection x:Key="ConnectorLocation">300,85 300,140</av:PointCollection>
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Flowchart.StartNode>
                          <x:Reference>__ReferenceID30</x:Reference>
                        </Flowchart.StartNode>
                        <FlowDecision x:Name="__ReferenceID3" DisplayName="Part Item found" sap:VirtualizedContainerService.HintSize="60,60" sap2010:WorkflowViewState.IdRef="FlowDecision_12">
                          <FlowDecision.Condition>
                            <VisualBasicValue x:TypeArguments="x:Boolean" DisplayName="Visual basic value" ExpressionText="booPartItemMatch" />
                          </FlowDecision.Condition>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <av:Point x:Key="ShapeLocation">270,360</av:Point>
                              <av:Size x:Key="ShapeSize">60,60</av:Size>
                              <av:PointCollection x:Key="TrueConnector">270,390 180,390 180,415</av:PointCollection>
                              <x:String x:Key="TrueLabel">Found</x:String>
                              <av:PointCollection x:Key="FalseConnector">330,390 480,390</av:PointCollection>
                              <x:String x:Key="FalseLabel">Not Found</x:String>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <FlowDecision.True>
                            <FlowStep x:Name="__ReferenceID7" sap2010:WorkflowViewState.IdRef="FlowStep_5">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <av:Point x:Key="ShapeLocation">125,415</av:Point>
                                  <av:PointCollection x:Key="ConnectorLocation">180,485 180,540</av:PointCollection>
                                  <av:Size x:Key="ShapeSize">110,70</av:Size>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Sequence DisplayName="Text matching Statement Header check" sap:VirtualizedContainerService.HintSize="110,70" sap2010:WorkflowViewState.IdRef="Sequence_12">
                                <Sequence.Variables>
                                  <Variable x:TypeArguments="x:String" Name="strRgx" />
                                  <Variable x:TypeArguments="x:String" Name="strStatements" />
                                  <Variable x:TypeArguments="scg:IList(x:String)" Name="listStatementTexts" />
                                </Sequence.Variables>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="[intMiniRowIndex]" DataTable="[dtMiniPopUp]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="502,355.2" sap2010:WorkflowViewState.IdRef="ForEachRow_5">
                                  <ui:ForEachRow.Body>
                                    <ActivityAction x:TypeArguments="sd:DataRow">
                                      <ActivityAction.Argument>
                                        <DelegateInArgument x:TypeArguments="sd:DataRow" Name="MiniRow" />
                                      </ActivityAction.Argument>
                                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="468,165.6" sap2010:WorkflowViewState.IdRef="Sequence_43">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Assign DisplayName="Assign - cross reference part/item/option" sap:VirtualizedContainerService.HintSize="434,105.6" sap2010:WorkflowViewState.IdRef="Assign_74">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:Boolean">[booPartItemMatch]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:Boolean" xml:space="preserve">[MiniRow("Part").tostring.Trim =  Regulation("Part").ToString.trim ANDalso regex.IsMatch(Regulation("Phytosanitary Text").ToString, "(?m)^\s*" +(MiniRow("item").ToString) + "\s*$")]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </Sequence>
                                    </ActivityAction>
                                  </ui:ForEachRow.Body>
                                  <ui:ForEachRow.Condition>
                                    <VisualBasicValue x:TypeArguments="x:Boolean" DisplayName="Visual basic value" ExpressionText="not(booPartItemMatch)" />
                                  </ui:ForEachRow.Condition>
                                </ui:ForEachRow>
                              </Sequence>
                              <FlowStep.Next>
                                <FlowDecision x:Name="__ReferenceID12" Condition="[booPartItemMatch]" DisplayName="Ref Conditions" sap:VirtualizedContainerService.HintSize="60,60" sap2010:WorkflowViewState.IdRef="FlowDecision_13">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <av:Point x:Key="ShapeLocation">150,540</av:Point>
                                      <av:Size x:Key="ShapeSize">60,60</av:Size>
                                      <av:PointCollection x:Key="TrueConnector">180,600 180,645</av:PointCollection>
                                      <x:String x:Key="TrueLabel">Part Item Found</x:String>
                                      <av:PointCollection x:Key="FalseConnector">210,570 415,570</av:PointCollection>
                                      <x:String x:Key="FalseLabel">Incorrect Reference</x:String>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <FlowDecision.True>
                                    <FlowStep x:Name="__ReferenceID13">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <av:Point x:Key="ShapeLocation">125,645</av:Point>
                                          <av:PointCollection x:Key="ConnectorLocation">180,715 180,750</av:PointCollection>
                                          <av:Size x:Key="ShapeSize">110,70</av:Size>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Sequence DisplayName="Text matching Statement Text check" sap:VirtualizedContainerService.HintSize="110,70" sap2010:WorkflowViewState.IdRef="Sequence_45">
                                        <Sequence.Variables>
                                          <Variable x:TypeArguments="x:String" Name="strRgx" />
                                          <Variable x:TypeArguments="x:String" Name="strStatements" />
                                          <Variable x:TypeArguments="scg:IList(x:String)" Name="listStatementTexts" />
                                        </Sequence.Variables>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Assign DisplayName="Assign - create regex to get statements headers" sap:VirtualizedContainerService.HintSize="570,114.4" sap2010:WorkflowViewState.IdRef="Assign_67">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[strRgx]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">["(?s)(?:" + Regex.Escape(dtMiniPopUp(intMiniRowIndex)("Item").ToString) + "(?=\s*(\||\n)).*?\n)(?'statements'.*?)(?=\---|\Z)"]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign DisplayName="Assign - extract statements headers" sap:VirtualizedContainerService.HintSize="570,114.4" sap2010:WorkflowViewState.IdRef="Assign_68">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[strStatements]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">[regex.Match(Regulation("Statement Breakdown").tostring,strRgx).Groups("statements").Value]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign DisplayName="Assign - initalise list" sap:VirtualizedContainerService.HintSize="570,114.4" sap2010:WorkflowViewState.IdRef="Assign_69">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="scg:IList(x:String)">[listStatementTexts]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="scg:IList(x:String)">[new list (of string)]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign sap2010:Annotation.AnnotationText="Helps avoid null object errors" DisplayName="Assign - blank variable" sap:VirtualizedContainerService.HintSize="570,145.6" sap2010:WorkflowViewState.IdRef="Assign_80">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[strSpecial_Tag]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">
                                              <Literal x:TypeArguments="x:String" Value="" />
                                            </InArgument>
                                          </Assign.Value>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </Assign>
                                        <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each StatementSegment" sap:VirtualizedContainerService.HintSize="570,983.2" sap2010:WorkflowViewState.IdRef="ForEach`1_6" Values="[strStatements.split({&quot;&amp;&quot;},nothing)]">
                                          <ui:ForEach.Body>
                                            <ActivityAction x:TypeArguments="x:String">
                                              <ActivityAction.Argument>
                                                <DelegateInArgument x:TypeArguments="x:String" Name="StatementSegment" />
                                              </ActivityAction.Argument>
                                              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="536,836" sap2010:WorkflowViewState.IdRef="Sequence_49">
                                                <Sequence.Variables>
                                                  <Variable x:TypeArguments="str:Match" Name="rgxTextSegmentCheck" />
                                                </Sequence.Variables>
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <Assign DisplayName="Assign look for pfpp pfa and treatments special header tags" sap:VirtualizedContainerService.HintSize="502,114.4" sap2010:WorkflowViewState.IdRef="Assign_75">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="str:Match">[rgxTextSegmentCheck]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="str:Match">[regex.Match(StatementSegment,"(?i)PFA|PFPP|Treatment")]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <If Condition="[rgxTextSegmentCheck.Success]" DisplayName="If - special tag?" sap:VirtualizedContainerService.HintSize="502,661.6" sap2010:WorkflowViewState.IdRef="If_12">
                                                  <If.Then>
                                                    <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="468,165.6" sap2010:WorkflowViewState.IdRef="Sequence_53">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <Assign DisplayName="Collect Special header tags" sap:VirtualizedContainerService.HintSize="434,105.6" sap2010:WorkflowViewState.IdRef="Assign_76">
                                                        <Assign.To>
                                                          <OutArgument x:TypeArguments="x:String">[strSpecial_Tag]</OutArgument>
                                                        </Assign.To>
                                                        <Assign.Value>
                                                          <InArgument x:TypeArguments="x:String">[strSpecial_Tag + rgxTextSegmentCheck.Value + vbCr]</InArgument>
                                                        </Assign.Value>
                                                      </Assign>
                                                    </Sequence>
                                                  </If.Then>
                                                  <If.Else>
                                                    <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="468,333.6" sap2010:WorkflowViewState.IdRef="Sequence_54">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <Assign DisplayName="Assign - create regex to get statement" sap:VirtualizedContainerService.HintSize="434,114.4" sap2010:WorkflowViewState.IdRef="Assign_70">
                                                        <Assign.To>
                                                          <OutArgument x:TypeArguments="x:String">[strRgx]</OutArgument>
                                                        </Assign.To>
                                                        <Assign.Value>
                                                          <InArgument x:TypeArguments="x:String">["(?s)(?:" + StatementSegment.Trim + "\s*\n)(?'statementText'.*?)(?=\---|\Z)"]</InArgument>
                                                        </Assign.Value>
                                                      </Assign>
                                                      <uasa:AppendItemToList x:TypeArguments="x:String" ItemIndex="{x:Null}" DisplayName="Append Item to List" sap:VirtualizedContainerService.HintSize="434,159.2" sap2010:WorkflowViewState.IdRef="AppendItemToList`1_2" ItemToAppend="[regex.Match(Regulation(&quot;Statement Text&quot;).ToString,strRgx).Groups(&quot;statementText&quot;).Value.Trim]" List="[listStatementTexts]" />
                                                    </Sequence>
                                                  </If.Else>
                                                </If>
                                              </Sequence>
                                            </ActivityAction>
                                          </ui:ForEach.Body>
                                        </ui:ForEach>
                                        <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each Text Segment" sap:VirtualizedContainerService.HintSize="570,952" sap2010:WorkflowViewState.IdRef="ForEach`1_7" Values="[listStatementTexts]">
                                          <ui:ForEach.Body>
                                            <ActivityAction x:TypeArguments="x:String">
                                              <ActivityAction.Argument>
                                                <DelegateInArgument x:TypeArguments="x:String" Name="TextSegment" />
                                              </ActivityAction.Argument>
                                              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="536,813.6" sap2010:WorkflowViewState.IdRef="Sequence_52">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <If Condition="[regex.IsMatch(dtMiniPopUp(intMiniRowIndex)(&quot;AD Text&quot;).tostring, TextSegment)]" sap:VirtualizedContainerService.HintSize="502,753.6" sap2010:WorkflowViewState.IdRef="If_11">
                                                  <If.Then>
                                                    <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="468,165.6" sap2010:WorkflowViewState.IdRef="Sequence_50">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <Assign sap:VirtualizedContainerService.HintSize="434,105.6" sap2010:WorkflowViewState.IdRef="Assign_71">
                                                        <Assign.To>
                                                          <OutArgument x:TypeArguments="x:Object">[dtMiniPopUp(intMiniRowIndex)("Compliant")]</OutArgument>
                                                        </Assign.To>
                                                        <Assign.Value>
                                                          <InArgument x:TypeArguments="x:Object">[True]</InArgument>
                                                        </Assign.Value>
                                                      </Assign>
                                                    </Sequence>
                                                  </If.Then>
                                                  <If.Else>
                                                    <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="468,425.6" sap2010:WorkflowViewState.IdRef="Sequence_51">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <Assign sap:VirtualizedContainerService.HintSize="434,114.4" sap2010:WorkflowViewState.IdRef="Assign_72">
                                                        <Assign.To>
                                                          <OutArgument x:TypeArguments="x:Object">[dtMiniPopUp(intMiniRowIndex)("Compliant")]</OutArgument>
                                                        </Assign.To>
                                                        <Assign.Value>
                                                          <InArgument x:TypeArguments="x:Object">[false]</InArgument>
                                                        </Assign.Value>
                                                      </Assign>
                                                      <Assign sap:VirtualizedContainerService.HintSize="434,114.4" sap2010:WorkflowViewState.IdRef="Assign_77">
                                                        <Assign.To>
                                                          <OutArgument x:TypeArguments="x:Boolean">[booStatementMismatch]</OutArgument>
                                                        </Assign.To>
                                                        <Assign.Value>
                                                          <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                        </Assign.Value>
                                                      </Assign>
                                                      <Assign sap2010:Annotation.AnnotationText="WHAT IS ON HOLD TEXT?" DisplayName="Assign- Add text mismatch OnHOLD" sap:VirtualizedContainerService.HintSize="434,136.8" sap2010:WorkflowViewState.IdRef="Assign_73">
                                                        <Assign.To>
                                                          <OutArgument x:TypeArguments="x:String">[strHold]</OutArgument>
                                                        </Assign.To>
                                                        <Assign.Value>
                                                          <InArgument x:TypeArguments="x:String">[strHold + "text mismatch" + vbCr]</InArgument>
                                                        </Assign.Value>
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                          </scg:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                      </Assign>
                                                    </Sequence>
                                                  </If.Else>
                                                </If>
                                              </Sequence>
                                            </ActivityAction>
                                          </ui:ForEach.Body>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ui:ForEach>
                                      </Sequence>
                                      <FlowStep.Next>
                                        <FlowDecision x:Name="__ReferenceID5" DisplayName="Ref Conditions" sap:VirtualizedContainerService.HintSize="60,60" sap2010:WorkflowViewState.IdRef="FlowDecision_10">
                                          <FlowDecision.Condition>
                                            <VisualBasicValue x:TypeArguments="x:Boolean" DisplayName="Visual basic value" ExpressionText="booStatementMismatch" />
                                          </FlowDecision.Condition>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <av:Point x:Key="ShapeLocation">150,750</av:Point>
                                              <av:Size x:Key="ShapeSize">60,60</av:Size>
                                              <av:PointCollection x:Key="FalseConnector">180,810 180,935</av:PointCollection>
                                              <x:String x:Key="TrueLabel">mismatch</x:String>
                                              <av:PointCollection x:Key="TrueConnector">210,780 415,780</av:PointCollection>
                                              <x:String x:Key="FalseLabel">matched</x:String>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <FlowDecision.True>
                                            <FlowStep x:Name="__ReferenceID6" sap2010:WorkflowViewState.IdRef="FlowStep_11">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <av:Point x:Key="ShapeLocation">415,745</av:Point>
                                                  <av:Size x:Key="ShapeSize">110,70</av:Size>
                                                  <av:PointCollection x:Key="ConnectorLocation">470,815 470,970 235,970</av:PointCollection>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign DisplayName="Assign - OHR 2" sap:VirtualizedContainerService.HintSize="110,70" sap2010:WorkflowViewState.IdRef="Assign_20">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[strHold]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[strHold + "OHR 0002" +vbCr]</InArgument>
                                                </Assign.Value>
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </Assign>
                                              <FlowStep.Next>
                                                <FlowStep x:Name="__ReferenceID1">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <av:Point x:Key="ShapeLocation">125,935</av:Point>
                                                      <av:Size x:Key="ShapeSize">110,70</av:Size>
                                                      <av:PointCollection x:Key="ConnectorLocation">180,1005 180,1120</av:PointCollection>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <Sequence DisplayName="Advanced Declarations" sap:VirtualizedContainerService.HintSize="485.6,269.6" sap2010:WorkflowViewState.IdRef="Sequence_55">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="451.6,209.6" sap2010:WorkflowViewState.IdRef="CommentOut_1">
                                                      <ui:CommentOut.Body>
                                                        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="416,108" sap2010:WorkflowViewState.IdRef="Sequence_63">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="[intAdvDecIndex]" DataTable="[in_dtAdvancedDeclarations]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="382,48" sap2010:WorkflowViewState.IdRef="ForEachRow_8">
                                                            <ui:ForEachRow.Body>
                                                              <ActivityAction x:TypeArguments="sd:DataRow">
                                                                <ActivityAction.Argument>
                                                                  <DelegateInArgument x:TypeArguments="sd:DataRow" Name="AdvDecRow" />
                                                                </ActivityAction.Argument>
                                                                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="468,165.6" sap2010:WorkflowViewState.IdRef="Sequence_56">
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                  <Assign sap:VirtualizedContainerService.HintSize="434,105.6" sap2010:WorkflowViewState.IdRef="Assign_82">
                                                                    <Assign.To>
                                                                      <OutArgument x:TypeArguments="x:Boolean">[booAdvancedDeclaration]</OutArgument>
                                                                    </Assign.To>
                                                                    <Assign.Value>
                                                                      <InArgument x:TypeArguments="x:Boolean">[AdvDecRow("Part").ToString = dtMiniPopUp(intMiniRowIndex)("Part").tostring AndAlso dtMiniPopUp(intMiniRowIndex)("Item").ToString.contains(AdvDecRow("AD number").ToString)]</InArgument>
                                                                    </Assign.Value>
                                                                  </Assign>
                                                                </Sequence>
                                                              </ActivityAction>
                                                            </ui:ForEachRow.Body>
                                                            <ui:ForEachRow.Condition>
                                                              <VisualBasicValue x:TypeArguments="x:Boolean" DisplayName="Visual basic value" ExpressionText="not(booAdvancedDeclaration)" />
                                                            </ui:ForEachRow.Condition>
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                          </ui:ForEachRow>
                                                        </Sequence>
                                                      </ui:CommentOut.Body>
                                                    </ui:CommentOut>
                                                  </Sequence>
                                                  <FlowStep.Next>
                                                    <FlowDecision x:Name="__ReferenceID16" DisplayName="Advanced Declaration" sap:VirtualizedContainerService.HintSize="60,60" sap2010:WorkflowViewState.IdRef="FlowDecision_15">
                                                      <FlowDecision.Condition>
                                                        <VisualBasicValue x:TypeArguments="x:Boolean" DisplayName="Visual basic value" ExpressionText="booAdvancedDeclaration" />
                                                      </FlowDecision.Condition>
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                          <av:Point x:Key="ShapeLocation">150,1120</av:Point>
                                                          <av:Size x:Key="ShapeSize">60,60</av:Size>
                                                          <av:PointCollection x:Key="FalseConnector">210,1150 340,1150</av:PointCollection>
                                                          <av:PointCollection x:Key="TrueConnector">180,1180 180,1290</av:PointCollection>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <FlowDecision.True>
                                                        <FlowDecision x:Name="__ReferenceID17" DisplayName="PFPP/Treatment" sap:VirtualizedContainerService.HintSize="60,60" sap2010:WorkflowViewState.IdRef="FlowDecision_16">
                                                          <FlowDecision.Condition>
                                                            <VisualBasicValue x:TypeArguments="x:Boolean" DisplayName="Visual basic value" ExpressionText="regex.IsMatch(strSpecial_Tag,&quot;(?i)PFPP|TREATMENT&quot;)" />
                                                          </FlowDecision.Condition>
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                              <av:Point x:Key="ShapeLocation">150,1290</av:Point>
                                                              <av:Size x:Key="ShapeSize">60,60</av:Size>
                                                              <av:PointCollection x:Key="TrueConnector">210,1320 275,1320</av:PointCollection>
                                                              <av:PointCollection x:Key="FalseConnector">180,1350 180,1405</av:PointCollection>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <FlowDecision.True>
                                                            <FlowStep x:Name="__ReferenceID18">
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <av:Point x:Key="ShapeLocation">275,1285</av:Point>
                                                                  <av:Size x:Key="ShapeSize">110,70</av:Size>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                              <Assign sap:VirtualizedContainerService.HintSize="110,70" sap2010:WorkflowViewState.IdRef="Assign_83">
                                                                <Assign.To>
                                                                  <OutArgument x:TypeArguments="x:String">[strHold]</OutArgument>
                                                                </Assign.To>
                                                                <Assign.Value>
                                                                  <InArgument x:TypeArguments="x:String">[""]</InArgument>
                                                                </Assign.Value>
                                                                <sap:WorkflowViewStateService.ViewState>
                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                  </scg:Dictionary>
                                                                </sap:WorkflowViewStateService.ViewState>
                                                              </Assign>
                                                            </FlowStep>
                                                          </FlowDecision.True>
                                                          <FlowDecision.False>
                                                            <FlowStep x:Name="__ReferenceID19">
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <av:Point x:Key="ShapeLocation">125,1405</av:Point>
                                                                  <av:Size x:Key="ShapeSize">110,70</av:Size>
                                                                  <av:PointCollection x:Key="ConnectorLocation">303.8,1476.710845921453 303.8,1591.710845921453</av:PointCollection>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                              <Sequence DisplayName="Advanced Declarations2" sap:VirtualizedContainerService.HintSize="110,70" sap2010:WorkflowViewState.IdRef="Sequence_58">
                                                                <sap:WorkflowViewStateService.ViewState>
                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                  </scg:Dictionary>
                                                                </sap:WorkflowViewStateService.ViewState>
                                                                <ui:ForEachRow ColumnNames="{x:Null}" Condition="[not(booAdvancedDeclaration)]" CurrentIndex="[intAdvDecIndex]" DataTable="[in_dtAdvancedDeclarations]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="502,469.6" sap2010:WorkflowViewState.IdRef="ForEachRow_9">
                                                                  <ui:ForEachRow.Body>
                                                                    <ActivityAction x:TypeArguments="sd:DataRow">
                                                                      <ActivityAction.Argument>
                                                                        <DelegateInArgument x:TypeArguments="sd:DataRow" Name="AdvDecRow" />
                                                                      </ActivityAction.Argument>
                                                                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="468,280" sap2010:WorkflowViewState.IdRef="Sequence_59">
                                                                        <Sequence.Variables>
                                                                          <Variable x:TypeArguments="x:String" Name="strKey" />
                                                                        </Sequence.Variables>
                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                          </scg:Dictionary>
                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                        <Assign sap:VirtualizedContainerService.HintSize="434,114.4" sap2010:WorkflowViewState.IdRef="Assign_85">
                                                                          <Assign.To>
                                                                            <OutArgument x:TypeArguments="x:String">[strKey]</OutArgument>
                                                                          </Assign.To>
                                                                          <Assign.Value>
                                                                            <InArgument x:TypeArguments="x:String">[regex.Replace(AdvDecRow("Option").ToString,"n\/a","")]</InArgument>
                                                                          </Assign.Value>
                                                                        </Assign>
                                                                        <Assign sap:VirtualizedContainerService.HintSize="434,105.6" sap2010:WorkflowViewState.IdRef="Assign_84">
                                                                          <Assign.To>
                                                                            <OutArgument x:TypeArguments="x:Boolean">[booAdvancedDeclaration]</OutArgument>
                                                                          </Assign.To>
                                                                          <Assign.Value>
                                                                            <InArgument x:TypeArguments="x:Boolean">[AdvDecRow("Country").ToString = Commodity("Country").tostring AndAlso dtMiniPopUp(intMiniRowIndex)("Item").ToString.contains(strKey)]</InArgument>
                                                                          </Assign.Value>
                                                                        </Assign>
                                                                      </Sequence>
                                                                    </ActivityAction>
                                                                  </ui:ForEachRow.Body>
                                                                </ui:ForEachRow>
                                                              </Sequence>
                                                            </FlowStep>
                                                          </FlowDecision.False>
                                                        </FlowDecision>
                                                      </FlowDecision.True>
                                                      <FlowDecision.False>
                                                        <FlowSwitch x:TypeArguments="x:String" x:Name="__ReferenceID14" DisplayName="Special Req" sap:VirtualizedContainerService.HintSize="60,60" sap2010:WorkflowViewState.IdRef="FlowSwitch`1_5">
                                                          <FlowSwitch.Default>
                                                            <FlowStep x:Name="__ReferenceID20">
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <av:Point x:Key="ShapeLocation">535,1115</av:Point>
                                                                  <av:Size x:Key="ShapeSize">110,70</av:Size>
                                                                  <av:PointCollection x:Key="ConnectorLocation">645,1150 730,1150</av:PointCollection>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                              <Sequence DisplayName="Review nursery/location info" sap:VirtualizedContainerService.HintSize="110,70" sap2010:WorkflowViewState.IdRef="Sequence_60">
                                                                <Sequence.Variables>
                                                                  <Variable x:TypeArguments="x:String" Name="strNurseryInfo" />
                                                                </Sequence.Variables>
                                                                <sap:WorkflowViewStateService.ViewState>
                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                  </scg:Dictionary>
                                                                </sap:WorkflowViewStateService.ViewState>
                                                                <Assign sap:VirtualizedContainerService.HintSize="434,114.4" sap2010:WorkflowViewState.IdRef="Assign_86">
                                                                  <Assign.To>
                                                                    <OutArgument x:TypeArguments="x:String">[strNurseryInfo]</OutArgument>
                                                                  </Assign.To>
                                                                  <Assign.Value>
                                                                    <InArgument x:TypeArguments="x:String" xml:space="preserve">[Commodity("Additional Info").ToString  + regex.Match(Commodity("Country").tostring,"-.*\)?").Value]</InArgument>
                                                                  </Assign.Value>
                                                                </Assign>
                                                                <Assign sap:VirtualizedContainerService.HintSize="434,105.6" sap2010:WorkflowViewState.IdRef="Assign_87">
                                                                  <Assign.To>
                                                                    <OutArgument x:TypeArguments="x:Boolean">[booNurseryInfoBlank]</OutArgument>
                                                                  </Assign.To>
                                                                  <Assign.Value>
                                                                    <InArgument x:TypeArguments="x:Boolean">[string.IsNullOrWhiteSpace(strNurseryInfo)]</InArgument>
                                                                  </Assign.Value>
                                                                </Assign>
                                                              </Sequence>
                                                              <FlowStep.Next>
                                                                <FlowSwitch x:TypeArguments="x:String" x:Name="__ReferenceID21" DisplayName="Special Req" Expression="[strSpecial_Tag.Trim.ToUpper]" sap:VirtualizedContainerService.HintSize="60,60" sap2010:WorkflowViewState.IdRef="FlowSwitch`1_7">
                                                                  <FlowSwitch.Default>
                                                                    <FlowDecision x:Name="__ReferenceID28" DisplayName="PFPP &amp; TREATMENT" sap:VirtualizedContainerService.HintSize="60,60" sap2010:WorkflowViewState.IdRef="FlowDecision_20">
                                                                      <FlowDecision.Condition>
                                                                        <VisualBasicValue x:TypeArguments="x:Boolean" DisplayName="Visual basic value" ExpressionText="booNurseryInfoBlank" />
                                                                      </FlowDecision.Condition>
                                                                      <sap:WorkflowViewStateService.ViewState>
                                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                          <av:Point x:Key="ShapeLocation">730,990</av:Point>
                                                                          <av:Size x:Key="ShapeSize">60,60</av:Size>
                                                                          <av:PointCollection x:Key="TrueConnector">760,990 760,900 645,900</av:PointCollection>
                                                                          <av:PointCollection x:Key="FalseConnector">730,1020 645,1020</av:PointCollection>
                                                                        </scg:Dictionary>
                                                                      </sap:WorkflowViewStateService.ViewState>
                                                                      <FlowDecision.True>
                                                                        <FlowStep x:Name="__ReferenceID29">
                                                                          <sap:WorkflowViewStateService.ViewState>
                                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                              <av:Point x:Key="ShapeLocation">535,865</av:Point>
                                                                              <av:Size x:Key="ShapeSize">110,70</av:Size>
                                                                              <av:PointCollection x:Key="ConnectorLocation">590,935 590,985</av:PointCollection>
                                                                            </scg:Dictionary>
                                                                          </sap:WorkflowViewStateService.ViewState>
                                                                          <Assign DisplayName="Assign - PFPP OH" sap:VirtualizedContainerService.HintSize="110,70" sap2010:WorkflowViewState.IdRef="Assign_95">
                                                                            <Assign.To>
                                                                              <OutArgument x:TypeArguments="x:String">[strHold]</OutArgument>
                                                                            </Assign.To>
                                                                            <Assign.Value>
                                                                              <InArgument x:TypeArguments="x:String">[strHold + "" + vbCr]</InArgument>
                                                                            </Assign.Value>
                                                                            <sap:WorkflowViewStateService.ViewState>
                                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                              </scg:Dictionary>
                                                                            </sap:WorkflowViewStateService.ViewState>
                                                                          </Assign>
                                                                          <FlowStep.Next>
                                                                            <x:Reference>__ReferenceID0</x:Reference>
                                                                          </FlowStep.Next>
                                                                        </FlowStep>
                                                                      </FlowDecision.True>
                                                                      <FlowDecision.False>
                                                                        <x:Reference>__ReferenceID0</x:Reference>
                                                                      </FlowDecision.False>
                                                                    </FlowDecision>
                                                                  </FlowSwitch.Default>
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <av:Point x:Key="ShapeLocation">730,1120</av:Point>
                                                                      <av:Size x:Key="ShapeSize">60,60</av:Size>
                                                                      <av:PointCollection x:Key="Default">760,1120 760,1050</av:PointCollection>
                                                                      <av:PointCollection x:Key="TREATMENTConnector">671.0202657807279,1290.865226586103 671.0202657807279,1190.865226586103 836.0202657807279,1190.865226586103</av:PointCollection>
                                                                      <av:PointCollection x:Key="(empty)Connector">671.0202657807279,1350.865226586103 671.0202657807279,1440.865226586103 836.0202657807279,1440.865226586103</av:PointCollection>
                                                                      <av:PointCollection x:Key="PFPPConnector">760,1180 760,1250</av:PointCollection>
                                                                      <av:PointCollection x:Key="PFAConnector">790,1150 910,1150 910,1250</av:PointCollection>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                  <FlowDecision x:Key="PFPP" x:Name="__ReferenceID22" DisplayName="PFPP" sap:VirtualizedContainerService.HintSize="60,60" sap2010:WorkflowViewState.IdRef="FlowDecision_17">
                                                                    <FlowDecision.Condition>
                                                                      <VisualBasicValue x:TypeArguments="x:Boolean" DisplayName="Visual basic value" ExpressionText="booNurseryInfoBlank" />
                                                                    </FlowDecision.Condition>
                                                                    <sap:WorkflowViewStateService.ViewState>
                                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                        <av:Point x:Key="ShapeLocation">730,1250</av:Point>
                                                                        <av:Size x:Key="ShapeSize">60,60</av:Size>
                                                                        <av:PointCollection x:Key="TrueConnector">760,1310 760,1355</av:PointCollection>
                                                                      </scg:Dictionary>
                                                                    </sap:WorkflowViewStateService.ViewState>
                                                                    <FlowDecision.True>
                                                                      <FlowStep x:Name="__ReferenceID23">
                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                            <av:Point x:Key="ShapeLocation">705,1355</av:Point>
                                                                            <av:Size x:Key="ShapeSize">110,70</av:Size>
                                                                          </scg:Dictionary>
                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                        <Assign DisplayName="Assign - PFPP PH" sap:VirtualizedContainerService.HintSize="110,70" sap2010:WorkflowViewState.IdRef="Assign_88">
                                                                          <Assign.To>
                                                                            <OutArgument x:TypeArguments="x:String">[strHold]</OutArgument>
                                                                          </Assign.To>
                                                                          <Assign.Value>
                                                                            <InArgument x:TypeArguments="x:String">[strHold + "" + vbCr]</InArgument>
                                                                          </Assign.Value>
                                                                          <sap:WorkflowViewStateService.ViewState>
                                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                            </scg:Dictionary>
                                                                          </sap:WorkflowViewStateService.ViewState>
                                                                        </Assign>
                                                                      </FlowStep>
                                                                    </FlowDecision.True>
                                                                  </FlowDecision>
                                                                  <FlowDecision x:Key="PFA" x:Name="__ReferenceID24" DisplayName="PFA" sap:VirtualizedContainerService.HintSize="60,60" sap2010:WorkflowViewState.IdRef="FlowDecision_18">
                                                                    <FlowDecision.Condition>
                                                                      <VisualBasicValue x:TypeArguments="x:Boolean" DisplayName="Visual basic value" ExpressionText="booNurseryInfoBlank" />
                                                                    </FlowDecision.Condition>
                                                                    <sap:WorkflowViewStateService.ViewState>
                                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                        <av:Point x:Key="ShapeLocation">880,1250</av:Point>
                                                                        <av:Size x:Key="ShapeSize">60,60</av:Size>
                                                                        <av:PointCollection x:Key="TrueConnector">910,1310 910,1355</av:PointCollection>
                                                                      </scg:Dictionary>
                                                                    </sap:WorkflowViewStateService.ViewState>
                                                                    <FlowDecision.True>
                                                                      <FlowStep x:Name="__ReferenceID26">
                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                            <av:Point x:Key="ShapeLocation">855,1355</av:Point>
                                                                            <av:Size x:Key="ShapeSize">110,70</av:Size>
                                                                            <av:PointCollection x:Key="ConnectorLocation">910,1425 910,1490</av:PointCollection>
                                                                          </scg:Dictionary>
                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                        <Sequence DisplayName="Evaluate country of origin" sap:VirtualizedContainerService.HintSize="110,70" sap2010:WorkflowViewState.IdRef="Sequence_62">
                                                                          <Sequence.Variables>
                                                                            <Variable x:TypeArguments="x:String" Name="strCountry" />
                                                                          </Sequence.Variables>
                                                                          <sap:WorkflowViewStateService.ViewState>
                                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                            </scg:Dictionary>
                                                                          </sap:WorkflowViewStateService.ViewState>
                                                                          <Assign DisplayName="Assign - extract country" sap:VirtualizedContainerService.HintSize="434,114.4" sap2010:WorkflowViewState.IdRef="Assign_89">
                                                                            <Assign.To>
                                                                              <OutArgument x:TypeArguments="x:String">[strCountry]</OutArgument>
                                                                            </Assign.To>
                                                                            <Assign.Value>
                                                                              <InArgument x:TypeArguments="x:String">[Commodity("Country").tostring.Split({"-"},nothing)(0)]</InArgument>
                                                                            </Assign.Value>
                                                                          </Assign>
                                                                          <Assign sap:VirtualizedContainerService.HintSize="434,105.6" sap2010:WorkflowViewState.IdRef="Assign_91">
                                                                            <Assign.To>
                                                                              <OutArgument x:TypeArguments="x:Boolean">[booADCountryOrigin]</OutArgument>
                                                                            </Assign.To>
                                                                            <Assign.Value>
                                                                              <InArgument x:TypeArguments="x:Boolean">[dtMiniPopUp(intMiniRowIndex)("AD Text").tostring.contains(strCountry)]</InArgument>
                                                                            </Assign.Value>
                                                                          </Assign>
                                                                        </Sequence>
                                                                        <FlowStep.Next>
                                                                          <FlowDecision x:Name="__ReferenceID25" DisplayName="Originating Country" sap:VirtualizedContainerService.HintSize="60,60" sap2010:WorkflowViewState.IdRef="FlowDecision_19">
                                                                            <FlowDecision.Condition>
                                                                              <VisualBasicValue x:TypeArguments="x:Boolean" DisplayName="Visual basic value" ExpressionText="booADCountryOrigin" />
                                                                            </FlowDecision.Condition>
                                                                            <sap:WorkflowViewStateService.ViewState>
                                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                <av:Point x:Key="ShapeLocation">880,1490</av:Point>
                                                                                <av:Size x:Key="ShapeSize">60,60</av:Size>
                                                                                <av:PointCollection x:Key="FalseConnector">940,1520 1025,1520</av:PointCollection>
                                                                              </scg:Dictionary>
                                                                            </sap:WorkflowViewStateService.ViewState>
                                                                            <FlowDecision.False>
                                                                              <FlowStep x:Name="__ReferenceID27">
                                                                                <sap:WorkflowViewStateService.ViewState>
                                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                    <av:Point x:Key="ShapeLocation">1025,1485</av:Point>
                                                                                    <av:Size x:Key="ShapeSize">110,70</av:Size>
                                                                                  </scg:Dictionary>
                                                                                </sap:WorkflowViewStateService.ViewState>
                                                                                <Assign DisplayName="Assign - PFA OH" sap:VirtualizedContainerService.HintSize="110,70" sap2010:WorkflowViewState.IdRef="Assign_94">
                                                                                  <Assign.To>
                                                                                    <OutArgument x:TypeArguments="x:String">[strHold]</OutArgument>
                                                                                  </Assign.To>
                                                                                  <Assign.Value>
                                                                                    <InArgument x:TypeArguments="x:String">[strHold + "" + vbCr]</InArgument>
                                                                                  </Assign.Value>
                                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                    </scg:Dictionary>
                                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                                </Assign>
                                                                              </FlowStep>
                                                                            </FlowDecision.False>
                                                                          </FlowDecision>
                                                                        </FlowStep.Next>
                                                                      </FlowStep>
                                                                    </FlowDecision.True>
                                                                  </FlowDecision>
                                                                </FlowSwitch>
                                                              </FlowStep.Next>
                                                            </FlowStep>
                                                          </FlowSwitch.Default>
                                                          <FlowSwitch.Expression>
                                                            <VisualBasicValue x:TypeArguments="x:String" ExpressionText="strSpecial_Tag.Trim.ToUpper" />
                                                          </FlowSwitch.Expression>
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <av:Point x:Key="ShapeLocation">340,1120</av:Point>
                                                              <av:Size x:Key="ShapeSize">60,60</av:Size>
                                                              <av:PointCollection x:Key="Default">400,1150 535,1150</av:PointCollection>
                                                              <av:PointCollection x:Key="TREATMENTConnector">370,1120 370,1020 535,1020</av:PointCollection>
                                                              <av:PointCollection x:Key="(empty)Connector">370,1180 370,1270 535,1270</av:PointCollection>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <FlowStep x:Key="" x:Name="__ReferenceID15">
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <av:Point x:Key="ShapeLocation">535,1235</av:Point>
                                                                <av:Size x:Key="ShapeSize">110,70</av:Size>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                            <ui:Comment DisplayName="Next Regulation" sap:VirtualizedContainerService.HintSize="110,70" sap2010:WorkflowViewState.IdRef="Comment_22" Text="// Write your comments in the Text property">
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                            </ui:Comment>
                                                          </FlowStep>
                                                          <FlowStep x:Key="TREATMENT" x:Name="__ReferenceID0">
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <av:Point x:Key="ShapeLocation">535,985</av:Point>
                                                                <av:Size x:Key="ShapeSize">110,70</av:Size>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                            <Assign DisplayName="Assign - Treatment OH" sap:VirtualizedContainerService.HintSize="110,70" sap2010:WorkflowViewState.IdRef="Assign_78">
                                                              <Assign.To>
                                                                <OutArgument x:TypeArguments="x:String">[strHold]</OutArgument>
                                                              </Assign.To>
                                                              <Assign.Value>
                                                                <InArgument x:TypeArguments="x:String">[strHold + "" + vbCr]</InArgument>
                                                              </Assign.Value>
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                            </Assign>
                                                          </FlowStep>
                                                        </FlowSwitch>
                                                      </FlowDecision.False>
                                                    </FlowDecision>
                                                  </FlowStep.Next>
                                                </FlowStep>
                                              </FlowStep.Next>
                                            </FlowStep>
                                          </FlowDecision.True>
                                          <FlowDecision.False>
                                            <x:Reference>__ReferenceID1</x:Reference>
                                          </FlowDecision.False>
                                        </FlowDecision>
                                      </FlowStep.Next>
                                    </FlowStep>
                                  </FlowDecision.True>
                                  <FlowDecision.False>
                                    <FlowStep x:Name="__ReferenceID11">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <av:Point x:Key="ShapeLocation">415,535</av:Point>
                                          <av:Size x:Key="ShapeSize">110,70</av:Size>
                                          <av:PointCollection x:Key="ConnectorLocation">662,688.8372332015774 662,763.8372332015774 427,763.8372332015774</av:PointCollection>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Assign DisplayName="Assign - OHR 2" sap:VirtualizedContainerService.HintSize="110,70" sap2010:WorkflowViewState.IdRef="Assign_64">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[strHold]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[strHold + "OHR 0002" +vbCr]</InArgument>
                                        </Assign.Value>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </Assign>
                                    </FlowStep>
                                  </FlowDecision.False>
                                </FlowDecision>
                              </FlowStep.Next>
                            </FlowStep>
                          </FlowDecision.True>
                          <FlowDecision.False>
                            <FlowDecision x:Name="__ReferenceID4" Condition="[Regulation(&quot;SpecialRequirements&quot;).ToString.ToLower.Contains(&quot;conditional&quot;)]" DisplayName="Category" sap:VirtualizedContainerService.HintSize="60,60" sap2010:WorkflowViewState.IdRef="FlowDecision_11">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <av:Point x:Key="ShapeLocation">480,360</av:Point>
                                  <av:Size x:Key="ShapeSize">60,60</av:Size>
                                  <av:PointCollection x:Key="TrueConnector">540,390 670,390 670,205</av:PointCollection>
                                  <x:String x:Key="TrueLabel">Yellow/Orange</x:String>
                                  <x:String x:Key="FalseLabel">White</x:String>
                                  <av:PointCollection x:Key="FalseConnector">510,360 510,205</av:PointCollection>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <FlowDecision.True>
                                <FlowStep x:Name="__ReferenceID10">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <av:Point x:Key="ShapeLocation">615,135</av:Point>
                                      <av:Size x:Key="ShapeSize">110,70</av:Size>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:Comment DisplayName="skip regulation" sap:VirtualizedContainerService.HintSize="110,70" sap2010:WorkflowViewState.IdRef="Comment_19" Text="// Write your comments in the Text property">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:Comment>
                                </FlowStep>
                              </FlowDecision.True>
                              <FlowDecision.False>
                                <FlowStep x:Name="__ReferenceID2" sap2010:WorkflowViewState.IdRef="FlowStep_2">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <av:Point x:Key="ShapeLocation">455,135</av:Point>
                                      <av:Size x:Key="ShapeSize">110,70</av:Size>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign DisplayName="Assign - OHR 1 &amp; 20" sap:VirtualizedContainerService.HintSize="110,70" sap2010:WorkflowViewState.IdRef="Assign_21">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[strHold]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[strhold + "OHR 0001" + vbCr + "OHR 0020" +vbCr]</InArgument>
                                    </Assign.Value>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </Assign>
                                </FlowStep>
                              </FlowDecision.False>
                            </FlowDecision>
                          </FlowDecision.False>
                        </FlowDecision>
                        <FlowSwitch x:TypeArguments="x:String" x:Name="__ReferenceID30" DisplayName="Regulation colour" Expression="[Regulation(&quot;Condition&quot;).ToString.ToLower]" sap:VirtualizedContainerService.HintSize="60,60" sap2010:WorkflowViewState.IdRef="FlowSwitch`1_3">
                          <FlowSwitch.Default>
                            <FlowStep x:Name="__ReferenceID9">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <av:Point x:Key="ShapeLocation">245,245</av:Point>
                                  <av:PointCollection x:Key="ConnectorLocation">300,315 300,360</av:PointCollection>
                                  <av:Size x:Key="ShapeSize">110,70</av:Size>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Sequence DisplayName="orange white regulation check" sap:VirtualizedContainerService.HintSize="110,70" sap2010:WorkflowViewState.IdRef="Sequence_35">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dtMiniPopUp]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="502,355.2" sap2010:WorkflowViewState.IdRef="ForEachRow_6">
                                  <ui:ForEachRow.Body>
                                    <ActivityAction x:TypeArguments="sd:DataRow">
                                      <ActivityAction.Argument>
                                        <DelegateInArgument x:TypeArguments="sd:DataRow" Name="PartItemRow" />
                                      </ActivityAction.Argument>
                                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="468,165.6" sap2010:WorkflowViewState.IdRef="Sequence_44">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Assign DisplayName="Assign - check part/item present" sap:VirtualizedContainerService.HintSize="434,105.6" sap2010:WorkflowViewState.IdRef="Assign_63">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:Boolean">[booPartItemMatch]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:Boolean" xml:space="preserve">[PartItemRow("Part").tostring.Trim =  Regulation("Part").ToString.trim ANDalso  regex.Match(PartItemRow("Item").tostring.Trim, "^" + Regulation("Item").ToString.Trim).Success]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </Sequence>
                                    </ActivityAction>
                                  </ui:ForEachRow.Body>
                                  <ui:ForEachRow.Condition>
                                    <VisualBasicValue x:TypeArguments="x:Boolean" DisplayName="Visual basic value" ExpressionText="not(booPartItemMatch)" />
                                  </ui:ForEachRow.Condition>
                                </ui:ForEachRow>
                              </Sequence>
                              <FlowStep.Next>
                                <x:Reference>__ReferenceID3</x:Reference>
                              </FlowStep.Next>
                            </FlowStep>
                          </FlowSwitch.Default>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <av:Point x:Key="ShapeLocation">270,140</av:Point>
                              <av:Size x:Key="ShapeSize">60,60</av:Size>
                              <av:PointCollection x:Key="Default">300,200 300,245</av:PointCollection>
                              <av:PointCollection x:Key="no statement requiredConnector">270,170 145,170</av:PointCollection>
                              <av:PointCollection x:Key="prohibitedConnector">330,170 455,170</av:PointCollection>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <x:Reference>__ReferenceID2<x:Key>prohibited</x:Key></x:Reference>
                          <FlowStep x:Key="no statement required" x:Name="__ReferenceID8" sap2010:WorkflowViewState.IdRef="FlowStep_8">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <av:Point x:Key="ShapeLocation">35,135</av:Point>
                                <av:Size x:Key="ShapeSize">110,70</av:Size>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:Comment DisplayName="Green" sap:VirtualizedContainerService.HintSize="110,70" sap2010:WorkflowViewState.IdRef="Comment_13" Text="// Write your comments in the Text property">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:Comment>
                          </FlowStep>
                        </FlowSwitch>
                        <x:Reference>__ReferenceID2</x:Reference>
                        <x:Reference>__ReferenceID4</x:Reference>
                        <x:Reference>__ReferenceID5</x:Reference>
                        <x:Reference>__ReferenceID6</x:Reference>
                        <x:Reference>__ReferenceID7</x:Reference>
                        <FlowStep sap2010:WorkflowViewState.IdRef="FlowStep_7">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <av:Point x:Key="ShapeLocation">105,35</av:Point>
                              <av:Size x:Key="ShapeSize">110,70</av:Size>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:Comment DisplayName="QUESTION" sap:VirtualizedContainerService.HintSize="110,70" sap2010:WorkflowViewState.IdRef="Comment_14" Text="Colour of the row as per process map not in output of the table from david! - originally speculated was in special requirements but its not&#xA;&#xA;action - david needs an additional column with row colour">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:Comment>
                        </FlowStep>
                        <x:Reference>__ReferenceID8</x:Reference>
                        <x:Reference>__ReferenceID9</x:Reference>
                        <x:Reference>__ReferenceID10</x:Reference>
                        <x:Reference>__ReferenceID11</x:Reference>
                        <x:Reference>__ReferenceID12</x:Reference>
                        <x:Reference>__ReferenceID13</x:Reference>
                        <x:Reference>__ReferenceID0</x:Reference>
                        <x:Reference>__ReferenceID14</x:Reference>
                        <x:Reference>__ReferenceID15</x:Reference>
                        <x:Reference>__ReferenceID1</x:Reference>
                        <x:Reference>__ReferenceID16</x:Reference>
                        <x:Reference>__ReferenceID17</x:Reference>
                        <x:Reference>__ReferenceID18</x:Reference>
                        <x:Reference>__ReferenceID19</x:Reference>
                        <x:Reference>__ReferenceID20</x:Reference>
                        <x:Reference>__ReferenceID21</x:Reference>
                        <x:Reference>__ReferenceID22</x:Reference>
                        <x:Reference>__ReferenceID23</x:Reference>
                        <x:Reference>__ReferenceID24</x:Reference>
                        <x:Reference>__ReferenceID25</x:Reference>
                        <x:Reference>__ReferenceID26</x:Reference>
                        <x:Reference>__ReferenceID27</x:Reference>
                        <x:Reference>__ReferenceID28</x:Reference>
                        <x:Reference>__ReferenceID29</x:Reference>
                      </Flowchart>
                    </Sequence>
                  </ActivityAction>
                </ui:ForEachRow.Body>
              </ui:ForEachRow>
              <ui:MergeDataTable Destination="[dtPopUp]" DisplayName="Merge dtminipopup into dtpopup" sap:VirtualizedContainerService.HintSize="668,167.6" sap2010:WorkflowViewState.IdRef="MergeDataTable_1" MissingSchemaAction="Add" Source="[dtMiniPopUp]" />
              <If Condition="[string.IsNullOrWhiteSpace(strHold)]" DisplayName="If - Hold string blank?" sap:VirtualizedContainerService.HintSize="668,493.6" sap2010:WorkflowViewState.IdRef="If_2">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="468,165.6" sap2010:WorkflowViewState.IdRef="Sequence_3">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Assign - Status Compliant" sap:VirtualizedContainerService.HintSize="434,105.6" sap2010:WorkflowViewState.IdRef="Assign_2">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[io_dtCommodityLines(intCommodityIndex)("Status")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">["COMPLIANT"]</InArgument>
                      </Assign.Value>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Assign>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="468,165.6" sap2010:WorkflowViewState.IdRef="Sequence_4">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Assign - Status On Hold" sap:VirtualizedContainerService.HintSize="434,105.6" sap2010:WorkflowViewState.IdRef="Assign_3">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[io_dtCommodityLines(intCommodityIndex)("Status")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">[strHold.Trim]</InArgument>
                      </Assign.Value>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Assign>
                  </Sequence>
                </If.Else>
              </If>
            </Sequence>
          </ActivityAction>
        </ui:ForEachRow.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ForEachRow>
      <FlowStep.Next>
        <FlowStep x:Name="__ReferenceID31" sap2010:WorkflowViewState.IdRef="FlowStep_10">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">315,455</av:Point>
              <av:Size x:Key="ShapeSize">110,70</av:Size>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:WriteCsvFile AddHeaders="True" DataTable="[io_dtCommodityLines]" Delimitator="Comma" DisplayName="Write CSV" FilePath="OUTPUT.csv" sap:VirtualizedContainerService.HintSize="110,70" sap2010:WorkflowViewState.IdRef="WriteCsvFile_1" ShouldQuote="True">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:WriteCsvFile>
        </FlowStep>
      </FlowStep.Next>
    </FlowStep>
    <x:Reference>__ReferenceID31</x:Reference>
    <FlowStep x:Name="__ReferenceID33" sap2010:WorkflowViewState.IdRef="FlowStep_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">315,215</av:Point>
          <av:PointCollection x:Key="ConnectorLocation">370,285 370,335</av:PointCollection>
          <av:Size x:Key="ShapeSize">110,70</av:Size>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence DisplayName="prepare variables" sap:VirtualizedContainerService.HintSize="110,70" sap2010:WorkflowViewState.IdRef="Sequence_15">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:Replace sap2010:Annotation.AnnotationText="remove text such as&#xA;, nursery: Woudenberg van tuinplanten Zevenhuizen NL755920902,&#xA;&#xA;and trims the text" DisplayName="Replace Matching Patterns" sap:VirtualizedContainerService.HintSize="434,186" sap2010:WorkflowViewState.IdRef="Replace_1" Input="[in_strSec11AD]" IsBuilderTabModified="False" Pattern="(?s), nursery:.*?," RegexOption="IgnoreCase, Multiline, Compiled" Result="[in_strSec11AD]">
          <ui:Replace.Replacement>
            <InArgument x:TypeArguments="x:String">
              <Literal x:TypeArguments="x:String" Value="" />
            </InArgument>
          </ui:Replace.Replacement>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:Replace>
        <ui:Replace sap2010:Annotation.AnnotationText="remove strarting tag if any&#xA;11 Additional declaration" DisplayName="Replace Matching Patterns" sap:VirtualizedContainerService.HintSize="434,136.8" sap2010:WorkflowViewState.IdRef="Replace_2" Input="[in_strSec11AD]" IsBuilderTabModified="False" Pattern="\s*11\s*Additional declaration\s*" RegexOption="Multiline, Compiled" Result="[in_strSec11AD]">
          <ui:Replace.Replacement>
            <InArgument x:TypeArguments="x:String">
              <Literal x:TypeArguments="x:String" Value="" />
            </InArgument>
          </ui:Replace.Replacement>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:Replace>
        <ui:Replace sap2010:Annotation.AnnotationText="remove strarting tag if any&#xA;(number of pages:\d+)" DisplayName="Replace Matching Patterns" sap:VirtualizedContainerService.HintSize="434,136.8" sap2010:WorkflowViewState.IdRef="Replace_5" Input="[in_strSec11AD]" IsBuilderTabModified="False" Pattern="\s*See annex \(number of pages:\d+\)\s*" RegexOption="Multiline, Compiled" Result="[in_strSec11AD]">
          <ui:Replace.Replacement>
            <InArgument x:TypeArguments="x:String">
              <Literal x:TypeArguments="x:String" Value="" />
            </InArgument>
          </ui:Replace.Replacement>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:Replace>
        <ui:Replace sap2010:Annotation.AnnotationText="remove &lt; TEXT END &gt; tags" DisplayName="Replace Matching Patterns" sap:VirtualizedContainerService.HintSize="434,123.2" sap2010:WorkflowViewState.IdRef="Replace_3" Input="[in_strSec11AD]" IsBuilderTabModified="False" Pattern="[-\s]+&lt; TEXT END &gt;[-\s]+" RegexOption="IgnoreCase, Multiline, Compiled" Result="[in_strSec11AD]">
          <ui:Replace.Replacement>
            <InArgument x:TypeArguments="x:String">
              <Literal x:TypeArguments="x:String" Value="" />
            </InArgument>
          </ui:Replace.Replacement>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:Replace>
        <Assign DisplayName="Assign - does apply all AD exist?" sap:VirtualizedContainerService.HintSize="434,114.4" sap2010:WorkflowViewState.IdRef="Assign_23">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[strAD_AllApplied]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[regex.Match(in_strSec11AD.Trim,"(?s)(?'AD'\AThe consignment complies.*?)(?=\s{3,}([\w\.]+\s)+\(\d{4}\)|\Z)").Value]</InArgument>
          </Assign.Value>
        </Assign>
        <ui:Replace sap2010:Annotation.AnnotationText="format strAD_AllApplied" DisplayName="Replace Matching Patterns" sap:VirtualizedContainerService.HintSize="434,123.2" sap2010:WorkflowViewState.IdRef="Replace_4" Input="[strAD_AllApplied]" IsBuilderTabModified="False" Pattern="\s+" RegexOption="IgnoreCase, Compiled" Replacement=" " Result="[strAD_AllApplied]">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:Replace>
        <Assign DisplayName="Assign - multiple countries" sap:VirtualizedContainerService.HintSize="434,114.4" sap2010:WorkflowViewState.IdRef="Assign_22">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Boolean">[booMultipleCountries]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Boolean">[regex.IsMatch(in_strCountryOfOrigin,"(?si)Several\s*countries")]</InArgument>
          </Assign.Value>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </Assign>
        <ui:Matches FirstMatch="{x:Null}" sap2010:Annotation.AnnotationText="This Extracts the plant ID codes and the AD consigment text.&#xA;this will ignore the consigment text that applies to all plants" DisplayName="Extract Section 11" sap:VirtualizedContainerService.HintSize="434,92" sap2010:WorkflowViewState.IdRef="Matches_1" Input="[in_strSec11AD]" IsBuilderTabModified="False" Pattern="(?is)(?'Plant'\(\d{4}\).*?)(?'AD'The consignment.*?)(?=\s{3,}([\w\.]+\s)+\(\d{4}\)|\Z)" RegexOption="IgnoreCase, Compiled" Result="[listExtractedAD]">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:Matches>
        <ui:BuildDataTable DataTable="[dtPopUp]" DisplayName="Build Data Table - initialise dtPopUp" sap:VirtualizedContainerService.HintSize="434,83.2" sap2010:WorkflowViewState.IdRef="BuildDataTable_1" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;ID&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;5&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Part&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;1&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Item&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;20&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;AD_x0020_Text&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Compliant&quot; msdata:Caption=&quot;&quot; type=&quot;xs:boolean&quot; default=&quot;false&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
      </Sequence>
      <FlowStep.Next>
        <x:Reference>__ReferenceID32</x:Reference>
      </FlowStep.Next>
    </FlowStep>
    <FlowStep x:Name="__ReferenceID34">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">315,115</av:Point>
          <av:PointCollection x:Key="ConnectorLocation">370,185 370,215</av:PointCollection>
          <av:Size x:Key="ShapeSize">110,70</av:Size>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence DisplayName="Test Data" sap:VirtualizedContainerService.HintSize="110,70" sap2010:WorkflowViewState.IdRef="Sequence_28">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Switch x:TypeArguments="x:String" DisplayName="Switch" Expression="CHEDPP.GB.2024.4081760" sap:VirtualizedContainerService.HintSize="508,764" sap2010:WorkflowViewState.IdRef="Switch`1_1">
          <Sequence x:Key="CHEDPP.GB.2024.4081760" sap:VirtualizedContainerService.HintSize="468,472" sap2010:WorkflowViewState.IdRef="Sequence_29">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="434,114.4" sap2010:WorkflowViewState.IdRef="Assign_39">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[in_strCountryOfOrigin]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">Several countries</InArgument>
              </Assign.Value>
            </Assign>
            <ui:ReadCsvFile DataTable="[io_dtCommodityLines]" Delimitator="Comma" DisplayName="Read CSV" FilePath="C:\Users\ma000091\OneDrive - Defra\CURRENT RESEARCH\Phyto\richard\Complete\(7) Supporting Docs CHEDPP.GB.2024.4081760.pdf P4P (2).xlsx" sap:VirtualizedContainerService.HintSize="434,190.8" sap2010:WorkflowViewState.IdRef="ReadCsvFile_2" />
            <Assign sap:VirtualizedContainerService.HintSize="434,106.8" sap2010:WorkflowViewState.IdRef="Assign_40">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[in_strSec11AD]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String" xml:space="preserve">
11  Additional declaration
See annex (number of pages:7)
     - - - - - - - - - - - - - - - - - - - - -   &lt; TEXT END &gt;   - - - - - - - - - - - - - - - - - - - -

     11  Additional declaration
    Acanthus hungaricus (0001); Actaea hybrid (0004); Alcea rosea (0006); Andromeda hybride
    (0007); Antennaria dioica (0008); Arenaria montana (0009); Armeria maritima (0012);
    Asplenium scolopendrium (0013); Astelia nervosa (0014); Athyrium nipponicum (0016); Blechnum
    spicant (0017); Buxus sempervirens (0018); Calamagrostis acutiflora (0019); Calycanthus
    raulstonii (0021); Canna hybrid (0025); Carex hybrid (0026), (0027); Ceanothus hybrid
    (0028); Ceanothus thyrsiflorus (0029); Clerodendrum trichotomum (0031); Cordyline australis
    (0032); Cortaderia selloana (0033); Cyrtomium fortunei (0035); Delosperma cooperi (0037);
    Deutzia hybrid (0038); Dryopteris affinis (0041); Dryopteris atrata (0042); Dryopteris
    austriaca (0043); Dryopteris championii (0044); Dryopteris erythrosora (0045); Dryopteris
    hybrid (0040); Escallonia hybrid (0049); Escallonia laevis (0050); Euonymus fortunei (0051),
    (0052); Euonymus japonicus (0054), (0055); Fargesia nitida (0057); Fargesia robusta (0058);
    Fascicularia bicolor (0059); Fatsia polycarpa (0061); Festuca glauca (0063); Geranium
    cantabrigiense (0066); Geranium hybrid (0065); Geranium sanguineum (0067); Geum hybrid
    (0068); Heuchera americana (0073); Hosta hybrid (0076); Hydrangea anomala (0077), (0078);
    Hydrangea anomala subsp. petiolaris (0079); Hydrangea macrophylla (0080); Hydrangea
    petiolaris (0081), (0082); Ilex crenata (0083); Imperata cylindrica (0084); Kalmia
    angustifolia (0087); Kalmia polifolia (0088); Leucophyta brownii (0096); Levisticum
    officinale (0097); Ligularia dentata (0098); Lithodora diffusa (0099); Lonicera hybrid
    (0100); Loropetalum chinense (0101); Mahonia eurybracteata (0104); Miscanthus sinensis
    (0106); Molinia caerulea (0107); Ornithogalum dubium (0109); Parthenocissus tricuspidata
    (0111); Photinia fraseri (0120), (0121); Photinia serratifolia (0122); Pieris japonica
    (0125); Polypodium vulgare (0126); Polystichum munitum (0127); Polystichum neolobatum
    (0128); Polystichum polyblepharum (0129); Polystichum setiferum (0130); Ribes hybrid (0132);
    Rudbeckia fulgida (0135); Schizophragma fauriei (0138); Schizophragma hydrangeoides (0139);
    Sedum hybrid (0140); Sempervivum hybrid (0141), (0142); Syringa meyeri (0146); Taxus baccata
    (0147); Thalictrum delavayi (0148); Trachelospermum jasminoides (0149); Uncinia rubra
    (0150); Veronica spicata (0151); Wisteria frutescens (0155); Zantedeschia aethiopica (0157);
    Zantedeschia hybrid (0156)
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part A
    item 6ai: The plants originate in The Netherlands as an area established by the national plant
    protection organisation in accordance with ISPM4 as an area that is free from Thrips palmi.
    Acer conspicuum (0002); Acer palmatum (0003); Cytisus scoparius (0036); Euryops pectinatus
    (0056); Fatsia japonica (0060); Hebe hybrid (0069), (0070); Magnolia grandiflora (0103);
    Rubus hybrid (0134); Strelitzia reginae (0145), (0158)
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part A
    item 6ai: The plants originate in The Netherlands as an area established by the national plant
    protection organisation in accordance with ISPM4 as an area that is free from Thrips palmi.
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part B
    item 2b: The plants have been grown during a period of at least three years before export, or in the
    case of plants which are younger than three years have been grown throughout their life, in the
    Netherlands established by the national plant protection organization in accordance with ISPM4 as an
    area that is free from Xylella fastidiosa.
    Agapanthus africanus (0005); Euonymus japonicus (0053); Hosta hybrid (0075); Iris sibirica
    (0085); Paeonia lactiflora (0110); Photinia fraseri (0119); Pieris japonica (0123), (0124)
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part A
    item 6ai: The plants originate in Belgium as an area established by the national plant protection
    organisation in accordance with ISPM4 as an area that is free from Thrips palmi.
    Argyranthemum frutescens (0010)
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part A
    item 40e: Immediately prior to their export, the plants have been officially inspected and found free
    from Liriomyza huidobrensis and Liriomyza trifolii.
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part A
    item 6ai: The plants originate in Italy as an area established by the national plant protection
    organisation in accordance with ISPM4 as an area that is free from Thrips palmi.
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part A
    item 8a + 8bi: No symptoms of the relevant pests (Begomo viruses, Cucumber vein yellowing virus,
    Cucurbit yellow stunting disorder virus, Lettuce infectious yellow virus, Melon yellowing-associated
    virus, Squash vein yellowing virus, Sweet potato chlorotic stunt virus, Sweet potato mild mottle virus,5031
    Tomato mild mottle virus, Tomato leaf curl New Delhi virus) have been observed on the plants during
    their complete cycle of vegetation, and the plants originate in areas which, in accordance with the
    measures specified in ISPM4, are known to be free from Bemisia tabaci and other vectors of the relevant
    pests.
    Argyranthemum frutescens (0011); Astrantia major (0015); Campanula hybrid (0022); Campanula
    persicifolia (0023); Campanula portenschlagiana (0024); Clematis hybrid (0030); Cyclamen
    hybrid (0034); Echinacea purpurea (0046), (0047); Felicia amelloides (0062); Fuchsia hybrid
    (0064); Jasminum polyanthum (0086); Leucanthemum maximum (0095); Nepeta faassenii (0108);
    Passiflora caerulea (0113); Passiflora hybrid (0112); Phlox paniculata (0118); Salvia
    greggii (0136); Salvia nemorosa (0137); Senecio hybrid (0143); Stachys officinalis (0144)
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part A
    item 40e: Immediately prior to their export, the plants have been officially inspected and found free
    from Liriomyza huidobrensis and Liriomyza trifolii.
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part A
    item 6ai: The plants originate in The Netherlands as an area established by the national plant
    protection organisation in accordance with ISPM4 as an area that is free from Thrips palmi.
    Calibrachoa hybrid (0020); Petunia hybrid (0117)
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part A
    item 28a: The plants originate in an area established by the national plant protection organisation in
    accordance with ISPM4 as an area that is free from Candidiatus Phytoplasma 'solani'.
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part A
    item 40e: Immediately prior to their export, the plants have been officially inspected and found free
    from Liriomyza huidobrensis and Liriomyza trifolii.
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part A
    item 6ai: The plants originate in The Netherlands as an area established by the national plant
    protection organisation in accordance with ISPM4 as an area that is free from Thrips palmi.
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part A
    item 9ai + 9bii: The plants originate in areas which, in accordance with the measures specified in
    ISPM4, are known to be free from Tomato leaf curl New Delhi Virus, and The plants have been subjected to
    an effective treatment ensuring the eradication of Bemisia tabaci and other vectors of Tomato leaf curl
    New Delhi Virus.
    Dianthus hybrid (0039)
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part A
    item 36a: The plants originate in the area The Netherlands, established by the national plant protection
    organisation in accordance with ISPM4 as an area that is free from Spodoptera eridania, Spodoptera
    frugiperda and Spodoptera litura.
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part A
    item 38b: No signs of Helicoverpa armigera or Spodoptera littoralis have been observed at the place of
    production since the beginning of the last complete cycle of vegetation.
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part A
    item 40e: Immediately prior to their export, the plants have been officially inspected and found free
    from Liriomyza huidobrensis and Liriomyza trifolii.
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part A
    item 6ai: The plants originate in The Netherlands as an area established by the national plant
    protection organisation in accordance with ISPM4 as an area that is free from Thrips palmi.
    Erysimum hybrid (0048); Helianthus hybrid (0071); Lupinus hybrid (0102)
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part A
    item 40e: Immediately prior to their export, the plants have been officially inspected and found free
    from Liriomyza huidobrensis and Liriomyza trifolii.
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part A
    item 6ai: The plants originate in The Netherlands as an area established by the national plant
    protection organisation in accordance with ISPM4 as an area that is free from Thrips palmi.
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part B
    item 2b: The plants have been grown during a period of at least three years before export, or in the
    case of plants which are younger than three years have been grown throughout their life, in the
    Netherlands established by the national plant protection organization in accordance with ISPM4 as an
    area that is free from Xylella fastidiosa.
    Hemerocallis hybrid (0072)
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part A
    item 6ai: The plants originate in Belgium as an area established by the national plant protection
    organisation in accordance with ISPM4 as an area that is free from Thrips palmi.
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part B
    item 2b: The plants have been grown during a period of at least three years before export, or in the
    case of plants which are younger than three years have been grown throughout their life, in an area
    which has been established by the national plant protection organisation in accordance with ISPM4 as an
    area that is free from Xylella fastidiosa.
    Hibiscus syriacus (0074)
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part A
    item 12d: The plants have been officially inspected and found free from Bemisia tabaci immediately prior
    to their movement.
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part A5031
    item 40e: Immediately prior to their export, the plants have been officially inspected and found free
    from Liriomyza huidobrensis and Liriomyza trifolii.
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part A
    item 6ai: The plants originate in The Netherlands as an area established by the national plant
    protection organisation in accordance with ISPM4 as an area that is free from Thrips palmi.
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part B
    item 2b: The plants have been grown during a period of at least three years before export, or in the
    case of plants which are younger than three years have been grown throughout their life, in the
    Netherlands established by the national plant protection organization in accordance with ISPM4 as an
    area that is free from Xylella fastidiosa.
    Lavandula angustifolia (0089); Lavandula stoechas (0092)
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part A
    item 28a: The plants originate in an area established by the national plant protection organisation in
    accordance with ISPM4 as an area that is free from Candidiatus Phytoplasma 'solani'.
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part A
    item 6ai: The plants originate in Italy as an area established by the national plant protection
    organisation in accordance with ISPM4 as an area that is free from Thrips palmi.
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part A
    item 8a + 8bi: No symptoms of the relevant pests (Begomo viruses, Cucumber vein yellowing virus,
    Cucurbit yellow stunting disorder virus, Lettuce infectious yellow virus, Melon yellowing-associated
    virus, Squash vein yellowing virus, Sweet potato chlorotic stunt virus, Sweet potato mild mottle virus,
    Tomato mild mottle virus, Tomato leaf curl New Delhi virus) have been observed on the plants during
    their complete cycle of vegetation, and the plants originate in areas which, in accordance with the
    measures specified in ISPM4, are known to be free from Bemisia tabaci and other vectors of the relevant
    pests.
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part B
    item 4b: (i) The plants have been grown in a place of production which has been registered and
    supervised by the national plant protection organisation for a period of at least one year before the
    export of the plants, and (ii) the place of production, together with a 200m zone surrounding the place
    of production, is known to be free from Xylella fastidiosa on the basis of official inspections, which
    included testing where appropriate, that was carried out at appropriate times; and (iii) the plants have
    been subjected to an annual official inspection at an appropriate time, which included sampling and
    testing, that confirmed the absence of Xylella fastidiosa and was carried out in accordance with
    international standards using a sampling scheme able to identify with 99% reliability a level of
    presence of infected plants of 5%, and (iv) immediately before their export, the plants were subjected
    to an official visual inspection for the presence of Xylella fastidiosa and, where any symptoms giving
    rise to a suspicion of its presence were observed, were tested in line with international standards for
    its presence, confirming its absence, and (v) where there has been any evidence of the presence of the
    vector of Xylella fastidiosa at the place of production, chemical and cultural controls have been used
    to suppress the vector, and (vi) the plants have been grown throughout their life under complete
    physical protection, and appropriate hygiene measures have been implemented at the place of production
    to ensure that Xylella fastidiosa is not transmitted by tools or equipment.
    Lavandula angustifolia (0090), (0091); Lavandula stoechas (0093), (0094)
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part A
    item 28a: The plants originate in an area established by the national plant protection organisation in
    accordance with ISPM4 as an area that is free from Candidiatus Phytoplasma 'solani'.
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part A
    item 6ai: The plants originate in The Netherlands as an area established by the national plant
    protection organisation in accordance with ISPM4 as an area that is free from Thrips palmi.
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part B
    item 4a: The plants have been grown: (i) during a period of at least three years before export, or in
    the case of plants which are younger than three years, have been grown throughout their life, in a
    country which, in accordance with the measures specified in ISPM4, is known to be free from Xylella
    fastidiosa, and (ii) in a site that is subject to annual official inspection, with sampling and testing
    carried out at the appropriate times on those plants for the presence of Xylella fastidiosa and in
    accordance with international standards, using a sampling scheme able to identify with 99% reliability a
    level of presence of infected plants of 5%, in which the absence of Xylella fastidiosa was confirmed.
    Mesembryanthemum sp. (0105)
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part A
    item 6ai: The plants originate in Italy as an area established by the national plant protection
    organisation in accordance with ISPM4 as an area that is free from Thrips palmi.
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part A
    item 8a + 8bi: No symptoms of the relevant pests (Begomo viruses, Cucumber vein yellowing virus,
    Cucurbit yellow stunting disorder virus, Lettuce infectious yellow virus, Melon yellowing-associated
    virus, Squash vein yellowing virus, Sweet potato chlorotic stunt virus, Sweet potato mild mottle virus,
    Tomato mild mottle virus, Tomato leaf curl New Delhi virus) have been observed on the plants during
    their complete cycle of vegetation, and the plants originate in areas which, in accordance with the
    measures specified in ISPM4, are known to be free from Bemisia tabaci and other vectors of the relevant
    pests.
    Pelargonium grandiflorum (0115); Pelargonium hybrid (0114); Pelargonium zonale (0116)
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part A5031
    item 36a: The plants originate in the area The Netherlands, established by the national plant protection
    organisation in accordance with ISPM4 as an area that is free from Spodoptera eridania, Spodoptera
    frugiperda and Spodoptera litura.
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part A
    item 38b: No signs of Helicoverpa armigera or Spodoptera littoralis have been observed at the place of
    production since the beginning of the last complete cycle of vegetation.
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part A
    item 40e: Immediately prior to their export, the plants have been officially inspected and found free
    from Liriomyza huidobrensis and Liriomyza trifolii.
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part A
    item 6ai: The plants originate in The Netherlands as an area established by the national plant
    protection organisation in accordance with ISPM4 as an area that is free from Thrips palmi.
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part B
    item 2b: The plants have been grown during a period of at least three years before export, or in the
    case of plants which are younger than three years have been grown throughout their life, in the
    Netherlands established by the national plant protection organization in accordance with ISPM4 as an
    area that is free from Xylella fastidiosa.
    Rhododendron japonicum (0131)
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part A
    item 6ai: The plants originate in Belgium as an area established by the national plant protection
    organisation in accordance with ISPM4 as an area that is free from Thrips palmi.
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part B
    item 1c: Where signs of Phytophthora ramorum, have been found on the plants at the place of production,
    an official statement that appropriate procedures have been implemented for the purpose of eradicating
    that pest and the plants have been found free from the pest following those procedures, which consisted
    of at least: (i) destruction of the infected plants and all susceptible plants within a 2 m radius of
    the infected plants, including associated growing media and plant debris, (ii) in the case of plants
    (Viburnum spp., Camellia spp. of Rhododendron spp., other than Rhododendron simsii) of this entry within
    a 10 m radius of the infected plants and any remaining plants from the infected lot: (aa)they have been
    retained at the place of production, (bb)additional official inspections have been carried out at least
    twice in the three months after the eradication measures have been taken when the plants are in active
    growth, (cc)no treatments that may suppress symptoms of the plant pest have been carried out in that
    three month period, and (dd)the plants have been found free from the pest on these official inspections,
    (iii) in the case of all other plants (Viburnum spp., Camellia spp. of Rhododendron spp., m.u.v.
    Rhododendron simsii) of this entry at the place of production, the plants have been subjected to
    intensive official re-inspection and have been found free from the pest on those inspections, and (iv)
    appropriate phytosanitary measures have been taken on the growing surface within a 2 m radius of
    infected plants.
    Salvia rosmarinus (0133)
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part A
    item 40e: Immediately prior to their export, the plants have been officially inspected and found free
    from Liriomyza huidobrensis and Liriomyza trifolii.
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part A
    item 6ai: The plants originate in Italy as an area established by the national plant protection
    organisation in accordance with ISPM4 as an area that is free from Thrips palmi.
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part A
    item 8a + 8bi: No symptoms of the relevant pests (Begomo viruses, Cucumber vein yellowing virus,
    Cucurbit yellow stunting disorder virus, Lettuce infectious yellow virus, Melon yellowing-associated
    virus, Squash vein yellowing virus, Sweet potato chlorotic stunt virus, Sweet potato mild mottle virus,
    Tomato mild mottle virus, Tomato leaf curl New Delhi virus) have been observed on the plants during
    their complete cycle of vegetation, and the plants originate in areas which, in accordance with the
    measures specified in ISPM4, are known to be free from Bemisia tabaci and other vectors of the relevant
    pests.
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part B
    item 4b: (i) The plants have been grown in a place of production which has been registered and
    supervised by the national plant protection organisation for a period of at least one year before the
    export of the plants, and (ii) the place of production, together with a 200m zone surrounding the place
    of production, is known to be free from Xylella fastidiosa on the basis of official inspections, which
    included testing where appropriate, that was carried out at appropriate times; and (iii) the plants have
    been subjected to an annual official inspection at an appropriate time, which included sampling and
    testing, that confirmed the absence of Xylella fastidiosa and was carried out in accordance with
    international standards using a sampling scheme able to identify with 99% reliability a level of
    presence of infected plants of 5%, and (iv) immediately before their export, the plants were subjected
    to an official visual inspection for the presence of Xylella fastidiosa and, where any symptoms giving
    rise to a suspicion of its presence were observed, were tested in line with international standards for
    its presence, confirming its absence, and (v) where there has been any evidence of the presence of the
    vector of Xylella fastidiosa at the place of production, chemical and cultural controls have been used
    to suppress the vector, and (vi) the plants have been grown throughout their life under complete
    physical protection, and appropriate hygiene measures have been implemented at the place of production
    to ensure that Xylella fastidiosa is not transmitted by tools or equipment.
    Viburnum davidii (0152); Viburnum plicatum (0153); Viburnum tinus (0154)
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part A5031
    item 6ai: The plants originate in The Netherlands as an area established by the national plant
    protection organisation in accordance with ISPM4 as an area that is free from Thrips palmi.
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part B
    item 1c: Where signs of Phytophthora ramorum, have been found on the plants at the place of production,
    an official statement that appropriate procedures have been implemented for the purpose of eradicating
    that pest and the plants have been found free from the pest following those procedures, which consisted
    of at least: (i) destruction of the infected plants and all susceptible plants within a 2 m radius of
    the infected plants, including associated growing media and plant debris, (ii) in the case of plants
    (Viburnum spp., Camellia spp. of Rhododendron spp., other than Rhododendron simsii) of this entry within
    a 10 m radius of the infected plants and any remaining plants from the infected lot: (aa)they have been
    retained at the place of production, (bb)additional official inspections have been carried out at least
    twice in the three months after the eradication measures have been taken when the plants are in active
    growth, (cc)no treatments that may suppress symptoms of the plant pest have been carried out in that
    three month period, and (dd)the plants have been found free from the pest on these official inspections,
    (iii) in the case of all other plants (Viburnum spp., Camellia spp. of Rhododendron spp., m.u.v.
    Rhododendron simsii) of this entry at the place of production, the plants have been subjected to
    intensive official re-inspection and have been found free from the pest on those inspections, and (iv)
    appropriate phytosanitary measures have been taken on the growing surface within a 2 m radius of
    infected plants.


</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
          <Sequence x:Key="335580221 Pot plants" sap:VirtualizedContainerService.HintSize="468,472" sap2010:WorkflowViewState.IdRef="Sequence_30">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="434,114.4" sap2010:WorkflowViewState.IdRef="Assign_42">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[in_strCountryOfOrigin]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">Neatherlands</InArgument>
              </Assign.Value>
            </Assign>
            <ui:ReadCsvFile DataTable="[io_dtCommodityLines]" Delimitator="Comma" DisplayName="Read CSV" FilePath="C:\Users\ma000091\OneDrive - Defra\CURRENT RESEARCH\Phyto\richard\Complete\335580221 Pot plants.xlsx" sap:VirtualizedContainerService.HintSize="434,190.8" sap2010:WorkflowViewState.IdRef="ReadCsvFile_3" />
            <Assign sap:VirtualizedContainerService.HintSize="434,106.8" sap2010:WorkflowViewState.IdRef="Assign_41">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[in_strSec11AD]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String" xml:space="preserve">
11  Additional declaration

     See annex (number of pages:1)
     - - - - - - - - - - - - - - - - - - - - -   &lt; TEXT END &gt;   - - - - - - - - - - - - - - - - - - - -

     11  Additional declaration
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part A
    item 6ai: The plants originate in The Netherlands as an area established by the national plant
    protection organisation in accordance with ISPM4 as an area that is free from Thrips palmi.
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part A
    item 8A a: the plants originate in the Netherlands established by the national plant protection
    organisation in accordance with ISPM4 as an area that is free from Popillia japonica
    Rosa hybrid (0793)
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part B
    item 2b: The plants have been grown during a period of at least three years before export, or in the
    case of plants which are younger than three years have been grown throughout their life, in the
    Netherlands established by the national plant protection organization in accordance with ISPM4 as an
    area that is free from Xylella fastidiosa.


</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
          <Sequence x:Key="335726741 with PFA or PFPP next to botanical name" sap:VirtualizedContainerService.HintSize="468,472" sap2010:WorkflowViewState.IdRef="Sequence_31">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="434,114.4" sap2010:WorkflowViewState.IdRef="Assign_44">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[in_strCountryOfOrigin]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">Neatherlands</InArgument>
              </Assign.Value>
            </Assign>
            <ui:ReadCsvFile DataTable="[io_dtCommodityLines]" Delimitator="Comma" DisplayName="Read CSV" FilePath="C:\Users\ma000091\OneDrive - Defra\CURRENT RESEARCH\Phyto\richard\Complete\335726741 with PFA or PFPP next to botanical name.xlsx" sap:VirtualizedContainerService.HintSize="434,190.8" sap2010:WorkflowViewState.IdRef="ReadCsvFile_4" />
            <Assign sap:VirtualizedContainerService.HintSize="434,106.8" sap2010:WorkflowViewState.IdRef="Assign_43">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[in_strSec11AD]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String" xml:space="preserve">
11  Additional declaration

     See annex (number of pages:2)
     - - - - - - - - - - - - - - - - - - - - -   &lt; TEXT END &gt;   - - - - - - - - - - - - - - - - - - - -

     11  Additional declaration
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part A
    item 8A a: the plants originate in the Netherlands established by the national plant protection
    organisation in accordance with ISPM4 as an area that is free from Popillia japonica
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part A
    item 6ai: The plants originate in The Netherlands as an area established by the national plant
    protection organisation in accordance with ISPM4 as an area that is free from Thrips palmi.
    Aster hybrid (0001); Celosia hybrid (0005); Centaurea hybrid (0006); Echinacea hybrid
    (0013); Gladiolus hybrid (0019)
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part A
    item 40e: Immediately prior to their export, the plants have been officially inspected and found free
    from Liriomyza huidobrensis and Liriomyza trifolii.
    Chrysanthemum sp. (0008)
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part A
    item 36a: The plants originate in the area The Netherlands, established by the national plant protection
    organisation in accordance with ISPM4 as an area that is free from Spodoptera eridania, Spodoptera
    frugiperda and Spodoptera litura.
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part A
    item 37a: The plants have been grown throughout their life in a country which, in accordance with the
    measures specified in ISPM4, is known to be free from Chrysanthemum stem necrosis virus.
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part A
    item 38b: No signs of Helicoverpa armigera or Spodoptera littoralis have been observed at the place of
    production since the beginning of the last complete cycle of vegetation.
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part A
    item 40e: Immediately prior to their export, the plants have been officially inspected and found free
    from Liriomyza huidobrensis and Liriomyza trifolii.
    Dianthus hybrid (0012)
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part A
    item 36a: The plants originate in the area The Netherlands, established by the national plant protection
    organisation in accordance with ISPM4 as an area that is free from Spodoptera eridania, Spodoptera
    frugiperda and Spodoptera litura.
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part A
    item 38b: No signs of Helicoverpa armigera or Spodoptera littoralis have been observed at the place of
    production since the beginning of the last complete cycle of vegetation.
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part A
    item 40e: Immediately prior to their export, the plants have been officially inspected and found free
    from Liriomyza huidobrensis and Liriomyza trifolii.
    Fatsia japonica (0014); Hebe hybrid (0020); Jacobaea maritima (0022); Leucophyta brownii
    (0024)
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part B
    item 2b: The plants have been grown during a period of at least three years before export, or in the
    case of plants which are younger than three years have been grown throughout their life, in the
    Netherlands established by the national plant protection organization in accordance with ISPM4 as an
    area that is free from Xylella fastidiosa.
    Ficus benjamina (0016); Ficus elastica (0017)
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part A
    item 12d: The plants have been officially inspected and found free from Bemisia tabaci immediately prior
    to their movement.
    Lavandula stoechas (0023)
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part A
    item 28a: The plants originate in an area established by the national plant protection organisation in
    accordance with ISPM4 as an area that is free from Candidiatus Phytoplasma 'solani'.7243
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part B
    item 4a: The plants have been grown: (i) during a period of at least three years before export, or in
    the case of plants which are younger than three years, have been grown throughout their life, in a
    country which, in accordance with the measures specified in ISPM4, is known to be free from Xylella
    fastidiosa, and (ii) in a site that is subject to annual official inspection, with sampling and testing
    carried out at the appropriate times on those plants for the presence of Xylella fastidiosa and in
    accordance with international standards, using a sampling scheme able to identify with 99% reliability a
    level of presence of infected plants of 5%, in which the absence of Xylella fastidiosa was confirmed.


</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
          <Sequence x:Key="336561170 - mixed commodity groups" sap:VirtualizedContainerService.HintSize="468,472" sap2010:WorkflowViewState.IdRef="Sequence_32">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="434,114.4" sap2010:WorkflowViewState.IdRef="Assign_46">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[in_strCountryOfOrigin]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">Neatherlands</InArgument>
              </Assign.Value>
            </Assign>
            <ui:ReadCsvFile DataTable="[io_dtCommodityLines]" Delimitator="Comma" DisplayName="Read CSV" FilePath="C:\Users\ma000091\OneDrive - Defra\CURRENT RESEARCH\Phyto\richard\Complete\336561170 - mixed commodity groups.xlsx" sap:VirtualizedContainerService.HintSize="434,190.8" sap2010:WorkflowViewState.IdRef="ReadCsvFile_5" />
            <Assign sap:VirtualizedContainerService.HintSize="434,106.8" sap2010:WorkflowViewState.IdRef="Assign_45">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[in_strSec11AD]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String" xml:space="preserve">
11  Additional declaration

     See annex (number of pages:4)
     - - - - - - - - - - - - - - - - - - - - -   &lt; TEXT END &gt;   - - - - - - - - - - - - - - - - - - - -

     11  Additional declaration
    Alocasia hybrid (0001); Anthurium hybrid (0004); Ceropegia sp. (0011); Coreopsis sp. (0014);
    Curcuma sp. (0015); Dracaena hybrid (0022); Guzmania hybrid (0028); Hedera sp. (0032); Howea
    forsteriana (0034); Kalanchoe hybrid (0036); Kalanchoe sp. (0035); Lilium hybrid (0039);
    Maranta sp. (0040); Monstera sp. (0041); Nephrolepis hybrid (0023); Philodendron hybrid
    (0047); Phlebodium sp. (0048); Pilea sp. (0049); Radermachera sp. (0052); Sansevieria sp.
    (0054); Scindapsus sp. (0056); Sedum hybrid (0057); Sempervivum hybrid (0058); Spathiphyllum
    hybrid (0059); Stephanotis sp. (0060); Strelitzia nicolai (0061); Tillandsia cyanea (0063)
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part A
    item 6ai: The plants originate in The Netherlands as an area established by the national plant
    protection organisation in accordance with ISPM4 as an area that is free from Thrips palmi.
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part A
    item 8A a: the plants originate in the Netherlands established by the national plant protection
    organisation in accordance with ISPM4 as an area that is free from Popillia japonica
    Callistephus hybrid (0007); Cyclamen persicum (0016); Peperomia sp. (0042); Viola hybrid
    (0064)
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part A
    item 40e: Immediately prior to their export, the plants have been officially inspected and found free
    from Liriomyza huidobrensis and Liriomyza trifolii.
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part A
    item 6ai: The plants originate in The Netherlands as an area established by the national plant
    protection organisation in accordance with ISPM4 as an area that is free from Thrips palmi.
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part A
    item 8A a: the plants originate in the Netherlands established by the national plant protection
    organisation in accordance with ISPM4 as an area that is free from Popillia japonica
    Calluna vulgaris (0008); Calocephalus brownii (0038); Hebe hybrid (0031); Rosa hybrid (0053)
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part A
    item 6ai: The plants originate in The Netherlands as an area established by the national plant
    protection organisation in accordance with ISPM4 as an area that is free from Thrips palmi.
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part A
    item 8A a: the plants originate in the Netherlands established by the national plant protection
    organisation in accordance with ISPM4 as an area that is free from Popillia japonica
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part B
    item 2b: The plants have been grown during a period of at least three years before export, or in the
    case of plants which are younger than three years have been grown throughout their life, in the
    Netherlands established by the national plant protection organization in accordance with ISPM4 as an
    area that is free from Xylella fastidiosa.
    Chrysanthemum hybrid (0013)
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part A
    item 36a: The plants originate in the area The Netherlands, established by the national plant protection
    organisation in accordance with ISPM4 as an area that is free from Spodoptera eridania, Spodoptera
    frugiperda and Spodoptera litura.
    The consignment complies with The Plant Health (Phytosanitary Conditions) (Amendment) (EU exit)
    Regulations 2020 No 1527, schedule 7, Part A item 39a: The plants originate in a country which, in
    accordance with the measures specified in ISPM4, is known to be free from Liriomyza sativae and
    Nemorimyza maculosa.
    Cymbidium hybrid (0021); Phalaenopsis hybrid (0043)
    The consignment complies with The Plant Health (Phytosanitary Conditions) (Amendment) (EU exit)0221
    Regulations 2020 No 1527, schedule 7, Part A item 41a: The plants originate in a country which, in
    accordance with the measures specified in ISPM4, is known to be free from Thrips palmi.
    Dionaea muscipula (0027)
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part A
    item 40e: Immediately prior to their export, the plants have been officially inspected and found free
    from Liriomyza huidobrensis and Liriomyza trifolii.
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part A
    item 6ai: The plants originate in The Netherlands as an area established by the national plant
    protection organisation in accordance with ISPM4 as an area that is free from Thrips palmi.
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part A
    item 8A a: the plants originate in the Netherlands established by the national plant protection
    organisation in accordance with ISPM4 as an area that is free from Popillia japonica
    The specimens are artificially propagated as defined by CITES
    Ficus benjamina (0024); Ficus elastica (0025); Ficus lyrata (0026)
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part A
    item 12d: The plants have been officially inspected and found free from Bemisia tabaci immediately prior
    to their movement.
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part A
    item 6ai: The plants originate in The Netherlands as an area established by the national plant
    protection organisation in accordance with ISPM4 as an area that is free from Thrips palmi.
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part A
    item 8A a: the plants originate in the Netherlands established by the national plant protection
    organisation in accordance with ISPM4 as an area that is free from Popillia japonica
    Gypsophila sp. (0029), (0030)
    The consignment complies with The Plant Health (Phytosanitary Conditions) (Amendment) (EU exit)
    Regulations 2020 No 1527, schedule 7, Part A item 39b: Immediately prior to their export, they have been
    officially inspected and found free from Liriomyza sativae and Nemorimyza maculosa.
    Hibiscus hybrid (0033)
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part A
    item 12d: The plants have been officially inspected and found free from Bemisia tabaci immediately prior
    to their movement.
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part A
    item 40e: Immediately prior to their export, the plants have been officially inspected and found free
    from Liriomyza huidobrensis and Liriomyza trifolii.
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part A
    item 6ai: The plants originate in The Netherlands as an area established by the national plant
    protection organisation in accordance with ISPM4 as an area that is free from Thrips palmi.
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part A
    item 8A a: the plants originate in the Netherlands established by the national plant protection
    organisation in accordance with ISPM4 as an area that is free from Popillia japonica
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part B
    item 2b: The plants have been grown during a period of at least three years before export, or in the
    case of plants which are younger than three years have been grown throughout their life, in the
    Netherlands established by the national plant protection organization in accordance with ISPM4 as an
    area that is free from Xylella fastidiosa.
    Kalanchoe hybrid (0006)
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part A
    item 6ai: The plants originate in Denmark as an area established by the national plant protection
    organisation in accordance with ISPM4 as an area that is free from Thrips palmi.
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part A
    item 8A a: the plants originate in Denmark established by the national plant protection organisation in
    accordance with ISPM4 as an area that is free from Popillia japonica
    Phalaenopsis hybrid (0044)
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part A
    item 6ai: The plants originate in The Netherlands as an area established by the national plant
    protection organisation in accordance with ISPM4 as an area that is free from Thrips palmi.
    The consignment complies with Annex 7 to Great Britain's Phytosanitary Regulation (2019/2072), part A
    item 8A a: the plants originate in the Netherlands established by the national plant protection
    organisation in accordance with ISPM4 as an area that is free from Popillia japonica
    The specimens are artificially propagated as defined by CITES


</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </Switch>
        <ui:ReadCsvFile DataTable="[in_dtAdvancedDeclarations]" Delimitator="Comma" DisplayName="Read CSV" FilePath="C:\Users\ma000091\OneDrive - Defra\CURRENT RESEARCH\Phyto\ED\Advanced declarations tracker for APHA.csv" sap:VirtualizedContainerService.HintSize="508,182" sap2010:WorkflowViewState.IdRef="ReadCsvFile_6" />
      </Sequence>
      <FlowStep.Next>
        <x:Reference>__ReferenceID33</x:Reference>
      </FlowStep.Next>
    </FlowStep>
  </Flowchart>
</Activity>