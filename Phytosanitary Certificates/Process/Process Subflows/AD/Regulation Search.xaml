<Activity mc:Ignorable="sap sap2010" x:Class="Regulation_Search" this:Regulation_Search.in_strGenus="Camellia" this:Regulation_Search.in_strCountryName="Spain" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:si="clr-namespace:System.IO;assembly=System.Private.CoreLib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_strGenus" Type="InArgument(x:String)" />
    <x:Property Name="in_strCountryName" Type="InArgument(x:String)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>Regulation_Search_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.CSV</x:String>
      <x:String>UiPath.CSV.Activities</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Numerics</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Linq.Async.Queryable</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Regulation_Search" sap:VirtualizedContainerService.HintSize="875.6,3826.4" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="strSpeciesPart" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence DisplayName="Main Sequence" sap:VirtualizedContainerService.HintSize="502,3803.2" sap2010:WorkflowViewState.IdRef="Sequence_3">
      <Sequence.Variables>
        <Variable x:TypeArguments="sd:DataTable" Name="dtSheet" />
        <Variable x:TypeArguments="sd:DataTable" Name="dtHost" />
        <Variable x:TypeArguments="sd:DataTable" Name="dtHerbGroup" />
        <Variable x:TypeArguments="sd:DataTable" Name="dtGenera" />
        <Variable x:TypeArguments="sd:DataTable" Name="dtCommodityRegulation" />
        <Variable x:TypeArguments="sd:DataTable" Name="dtCommodity" />
        <Variable x:TypeArguments="sd:DataTable" Name="dtCitesGroup" />
        <Variable x:TypeArguments="sd:DataTable" Name="dtXFGroup" />
        <Variable x:TypeArguments="sd:DataTable" Name="dtTaxonGroup" />
        <Variable x:TypeArguments="sd:DataTable" Name="dtRegulation" />
        <Variable x:TypeArguments="sd:DataTable" Name="dtOriginRegulation" />
        <Variable x:TypeArguments="sd:DataTable" Name="dtOrigin" />
        <Variable x:TypeArguments="sd:DataTable" Name="dtInvasiveGroup" />
        <Variable x:TypeArguments="sd:DataTable" Name="dtHostGroupRegulation" />
        <Variable x:TypeArguments="sd:DataTable" Name="dtHostRegulation" />
        <Variable x:TypeArguments="sd:DataTable" Name="dtMatchedItems" />
        <Variable x:TypeArguments="x:String" Name="strGenusPart" />
        <Variable x:TypeArguments="sd:DataTable" Name="dtTaxonSearch" />
        <Variable x:TypeArguments="sd:DataTable" Name="dtXFGroupSearch" />
        <Variable x:TypeArguments="sd:DataTable" Name="dtHerbGroupSearch" />
        <Variable x:TypeArguments="sd:DataTable" Name="dtInvasiveSearch" />
        <Variable x:TypeArguments="sd:DataTable" Name="dtCitesSearch" />
        <Variable x:TypeArguments="sd:DataTable" Name="dtValidationSearch" />
        <Variable x:TypeArguments="sd:DataTable" Name="dtGroupNames" />
        <Variable x:TypeArguments="sd:DataTable" Name="dtXFItems" />
        <Variable x:TypeArguments="sd:DataTable" Name="dtHerbItems" />
        <Variable x:TypeArguments="sd:DataTable" Name="dtHostRegulationJoin" />
        <Variable x:TypeArguments="sd:DataTable" Name="dtOrderRegulationItems" />
        <Variable x:TypeArguments="scg:List(x:String)" Name="lisAllGenusItems" />
        <Variable x:TypeArguments="sd:DataTable" Name="dtFamilyRegulationItems" />
        <Variable x:TypeArguments="s:String[]" Name="arrGenusParts" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="468,175.6" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Warn" Message="[&quot;Hard coded test data reading in - remove this&quot;]" />
      <ui:ForEachFileX DisplayName="Read all CSVs - For Each File in Folder" Filter="*.csv" Folder="C:\Users\da000087\Downloads\Phyto" sap:VirtualizedContainerService.HintSize="468,114" sap2010:WorkflowViewState.IdRef="ForEachFileX_2" IncludeSubDirectories="False" OrderBy="NameAscFirst" SkipFolderWithoutPermission="False">
        <ui:ForEachFileX.Body>
          <ActivityAction x:TypeArguments="si:FileInfo, x:Int32">
            <ActivityAction.Argument1>
              <DelegateInArgument x:TypeArguments="si:FileInfo" Name="CurrentFile" />
            </ActivityAction.Argument1>
            <ActivityAction.Argument2>
              <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
            </ActivityAction.Argument2>
            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="531.6,1130.8" sap2010:WorkflowViewState.IdRef="Sequence_4">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="strFileWithoutExtension" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="497.6,123.2" sap2010:WorkflowViewState.IdRef="WriteLine_4" Text="[&quot;Reading &quot; &amp; CurrentFile.Name &amp; &quot; &quot; &amp; Now]" />
              <ui:ReadCsvFile PathResource="{x:Null}" DataTable="[dtSheet]" Delimitator="Comma" DelimitatorForViewModel="Comma" DisplayName="Read CSV" FilePath="[CurrentFile.ToString]" sap:VirtualizedContainerService.HintSize="497.6,190.8" sap2010:WorkflowViewState.IdRef="ReadCsvFile_2" />
              <Assign DisplayName="Assign file name without extension" sap:VirtualizedContainerService.HintSize="497.6,114.4" sap2010:WorkflowViewState.IdRef="Assign_1">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[strFileWithoutExtension]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[CurrentFile.Name.replace(".csv","")]</InArgument>
                </Assign.Value>
              </Assign>
              <Switch x:TypeArguments="x:String" DisplayName="Switch file names" Expression="[strFileWithoutExtension]" sap:VirtualizedContainerService.HintSize="497.6,528" sap2010:WorkflowViewState.IdRef="Switch`1_1">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign x:Key="host" DisplayName="Assign to relevant DataTable" sap:VirtualizedContainerService.HintSize="457.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_2">
                  <Assign.To>
                    <OutArgument x:TypeArguments="sd:DataTable">[dtHost]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="sd:DataTable">[dtSheet]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:Comment x:Key="homepage_updates" sap:VirtualizedContainerService.HintSize="457.6,56.4" sap2010:WorkflowViewState.IdRef="Comment_1" Text="// This sheet is not required" />
                <Assign x:Key="herb_group" DisplayName="Assign to relevant DataTable" sap:VirtualizedContainerService.HintSize="457.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_3">
                  <Assign.To>
                    <OutArgument x:TypeArguments="sd:DataTable">[dtHerbGroup]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="sd:DataTable">[dtSheet]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign x:Key="group_names" DisplayName="Assign to relevant DataTable" sap:VirtualizedContainerService.HintSize="457.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_4">
                  <Assign.To>
                    <OutArgument x:TypeArguments="sd:DataTable">[dtGroupNames]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="sd:DataTable">[dtSheet]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign x:Key="genera_list" DisplayName="Assign to relevant DataTable" sap:VirtualizedContainerService.HintSize="457.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_5">
                  <Assign.To>
                    <OutArgument x:TypeArguments="sd:DataTable">[dtGenera]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="sd:DataTable">[dtSheet]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign x:Key="commodity_regulation" DisplayName="Assign to relevant DataTable" sap:VirtualizedContainerService.HintSize="457.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_6">
                  <Assign.To>
                    <OutArgument x:TypeArguments="sd:DataTable">[dtCommodityRegulation]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="sd:DataTable">[dtSheet]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign x:Key="commodity" DisplayName="Assign to relevant DataTable" sap:VirtualizedContainerService.HintSize="457.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_7">
                  <Assign.To>
                    <OutArgument x:TypeArguments="sd:DataTable">[dtCommodity]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="sd:DataTable">[dtSheet]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign x:Key="cites_group" DisplayName="Assign to relevant DataTable" sap:VirtualizedContainerService.HintSize="457.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_8">
                  <Assign.To>
                    <OutArgument x:TypeArguments="sd:DataTable">[dtCitesGroup]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="sd:DataTable">[dtSheet]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign x:Key="xf_group" DisplayName="Assign to relevant DataTable" sap:VirtualizedContainerService.HintSize="457.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_9">
                  <Assign.To>
                    <OutArgument x:TypeArguments="sd:DataTable">[dtXFGroup]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="sd:DataTable">[dtSheet]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign x:Key="taxon_group" DisplayName="Assign to relevant DataTable" sap:VirtualizedContainerService.HintSize="457.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_10">
                  <Assign.To>
                    <OutArgument x:TypeArguments="sd:DataTable">[dtTaxonGroup]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="sd:DataTable">[dtSheet]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign x:Key="regulation" DisplayName="Assign to relevant DataTable" sap:VirtualizedContainerService.HintSize="457.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_11">
                  <Assign.To>
                    <OutArgument x:TypeArguments="sd:DataTable">[dtRegulation]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="sd:DataTable">[dtSheet]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign x:Key="origin_regulation" DisplayName="Assign to relevant DataTable" sap:VirtualizedContainerService.HintSize="457.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_12">
                  <Assign.To>
                    <OutArgument x:TypeArguments="sd:DataTable">[dtOriginRegulation]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="sd:DataTable">[dtSheet]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign x:Key="origin" DisplayName="Assign to relevant DataTable" sap:VirtualizedContainerService.HintSize="457.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_13">
                  <Assign.To>
                    <OutArgument x:TypeArguments="sd:DataTable">[dtOrigin]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="sd:DataTable">[dtSheet]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign x:Key="invasive_group" DisplayName="Assign to relevant DataTable" sap:VirtualizedContainerService.HintSize="457.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_14">
                  <Assign.To>
                    <OutArgument x:TypeArguments="sd:DataTable">[dtInvasiveGroup]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="sd:DataTable">[dtSheet]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign x:Key="hostgroup_regulation" DisplayName="Assign to relevant DataTable" sap:VirtualizedContainerService.HintSize="457.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_15">
                  <Assign.To>
                    <OutArgument x:TypeArguments="sd:DataTable">[dtHostGroupRegulation]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="sd:DataTable">[dtSheet]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign x:Key="host_regulation" DisplayName="Assign to relevant DataTable" sap:VirtualizedContainerService.HintSize="457.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_16">
                  <Assign.To>
                    <OutArgument x:TypeArguments="sd:DataTable">[dtHostRegulation]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="sd:DataTable">[dtSheet]</InArgument>
                  </Assign.Value>
                </Assign>
              </Switch>
              <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="497.6,114.4" sap2010:WorkflowViewState.IdRef="WriteLine_6" Text="[&quot;Finished Reading &quot; &amp; CurrentFile.Name &amp; &quot; &quot; &amp; Now]" />
            </Sequence>
          </ActivityAction>
        </ui:ForEachFileX.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ForEachFileX>
      <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="468,123.2" sap2010:WorkflowViewState.IdRef="WriteLine_2" Text="CSVs read in" />
      <Assign DisplayName="Split genus into parts" sap:VirtualizedContainerService.HintSize="468,114.4" sap2010:WorkflowViewState.IdRef="Assign_49">
        <Assign.To>
          <OutArgument x:TypeArguments="s:String[]">[arrGenusParts]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="s:String[]">[in_strGenus.Split(" "c)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Split out the genus name" sap:VirtualizedContainerService.HintSize="468,114.4" sap2010:WorkflowViewState.IdRef="Assign_17">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[strGenusPart]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[in_strGenus.Split(" "c)(0).ToString]</InArgument>
        </Assign.Value>
      </Assign>
      <If Condition="[arrGenusParts.length &gt;= 2]" DisplayName="If there is more than 2 results in the array" sap:VirtualizedContainerService.HintSize="468,85.2" sap2010:WorkflowViewState.IdRef="If_8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="468,165.6" sap2010:WorkflowViewState.IdRef="Sequence_57">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign DisplayName="Assign species" sap:VirtualizedContainerService.HintSize="434,105.6" sap2010:WorkflowViewState.IdRef="Assign_50">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[strSpeciesPart]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[arrGenusParts(1)]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </If.Then>
        <If.Else>
          <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="468,165.6" sap2010:WorkflowViewState.IdRef="Sequence_58">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign DisplayName="Assign spp. (species plural)" sap:VirtualizedContainerService.HintSize="434,105.6" sap2010:WorkflowViewState.IdRef="Assign_51">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[strSpeciesPart]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">spp.</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </If.Else>
      </If>
      <ui:BuildDataTable sap2010:Annotation.AnnotationText="Any matched term ID wills be added here, and then filtered down to only relevant matches during the Intersection sequence" DataTable="[dtMatchedItems]" DisplayName="Create Matched Items DT" sap:VirtualizedContainerService.HintSize="468,153.2" sap2010:WorkflowViewState.IdRef="BuildDataTable_1" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;ItemID&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;ItemCategory&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Genus&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Annex&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Part&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Item&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Cites&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Invasive&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Description&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Origin&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;SpecialRequirements&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Notes&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Conditions&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:BuildDataTable>
      <ui:JoinDataTables DataTable1="[dtHostRegulation]" DataTable2="[dtHost]" DisplayName="Join Host DTs" sap:VirtualizedContainerService.HintSize="468,92" sap2010:WorkflowViewState.IdRef="JoinDataTables_1" JoinType="Inner" OutputDataTable="[dtHostRegulationJoin]">
        <ui:JoinDataTables.Arguments>
          <scg:List x:TypeArguments="ui:JoinOperationArgument" Capacity="4">
            <ui:JoinOperationArgument Operand="{x:Null}" BooleanOperator="And" Operator="EQ">
              <ui:JoinOperationArgument.Column1>
                <InArgument x:TypeArguments="x:String">["hostid"]</InArgument>
              </ui:JoinOperationArgument.Column1>
              <ui:JoinOperationArgument.Column2>
                <InArgument x:TypeArguments="x:String">["hostid"]</InArgument>
              </ui:JoinOperationArgument.Column2>
            </ui:JoinOperationArgument>
          </scg:List>
        </ui:JoinDataTables.Arguments>
      </ui:JoinDataTables>
      <Sequence sap2010:Annotation.AnnotationText="Prepare filtered data for querying later, fetching only the rows relevant for this genus" DisplayName="Consolidated queries for taxon_search, check_xf, check_herb, check_invasive, and cites_search" sap:VirtualizedContainerService.HintSize="468,146.4" sap2010:WorkflowViewState.IdRef="Sequence_5">
        <Sequence.Variables>
          <Variable x:TypeArguments="sd:DataTable" Name="dtHostGroupAndNames" />
          <Variable x:TypeArguments="sd:DataTable" Name="dtValidationSearch" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:FilterDataTable DataTable="[dtTaxonGroup]" DisplayName="Filter TaxonSearch Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="470,196" sap2010:WorkflowViewState.IdRef="FilterDataTable_1" OutputDataTable="[dtTaxonSearch]" SelectColumnsMode="Remove">
          <ui:FilterDataTable.Filters>
            <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
              <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                <ui:FilterOperationArgument.Column>
                  <InArgument x:TypeArguments="x:String">["genus"]</InArgument>
                </ui:FilterOperationArgument.Column>
                <ui:FilterOperationArgument.Operand>
                  <InArgument x:TypeArguments="x:String">[strGenusPart]</InArgument>
                </ui:FilterOperationArgument.Operand>
              </ui:FilterOperationArgument>
            </scg:List>
          </ui:FilterDataTable.Filters>
          <ui:FilterDataTable.SelectColumns>
            <scg:List x:TypeArguments="InArgument" Capacity="4">
              <x:Null />
            </scg:List>
          </ui:FilterDataTable.SelectColumns>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:FilterDataTable>
        <ui:FilterDataTable DataTable="[dtXFGroup]" DisplayName="Filter XF Group Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="470,196" sap2010:WorkflowViewState.IdRef="FilterDataTable_2" OutputDataTable="[dtXFGroupSearch]" SelectColumnsMode="Remove">
          <ui:FilterDataTable.Filters>
            <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
              <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                <ui:FilterOperationArgument.Column>
                  <InArgument x:TypeArguments="x:String">["genus"]</InArgument>
                </ui:FilterOperationArgument.Column>
                <ui:FilterOperationArgument.Operand>
                  <InArgument x:TypeArguments="x:String">[strGenusPart]</InArgument>
                </ui:FilterOperationArgument.Operand>
              </ui:FilterOperationArgument>
            </scg:List>
          </ui:FilterDataTable.Filters>
          <ui:FilterDataTable.SelectColumns>
            <scg:List x:TypeArguments="InArgument" Capacity="4">
              <x:Null />
            </scg:List>
          </ui:FilterDataTable.SelectColumns>
        </ui:FilterDataTable>
        <ui:FilterDataTable DataTable="[dtHerbGroup]" DisplayName="Filter Herb Group Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="470,196" sap2010:WorkflowViewState.IdRef="FilterDataTable_3" OutputDataTable="[dtHerbGroupSearch]" SelectColumnsMode="Remove">
          <ui:FilterDataTable.Filters>
            <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
              <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                <ui:FilterOperationArgument.Column>
                  <InArgument x:TypeArguments="x:String">["genus"]</InArgument>
                </ui:FilterOperationArgument.Column>
                <ui:FilterOperationArgument.Operand>
                  <InArgument x:TypeArguments="x:String">[strGenusPart]</InArgument>
                </ui:FilterOperationArgument.Operand>
              </ui:FilterOperationArgument>
            </scg:List>
          </ui:FilterDataTable.Filters>
          <ui:FilterDataTable.SelectColumns>
            <scg:List x:TypeArguments="InArgument" Capacity="4">
              <x:Null />
            </scg:List>
          </ui:FilterDataTable.SelectColumns>
        </ui:FilterDataTable>
        <ui:FilterDataTable DataTable="[dtInvasiveGroup]" DisplayName="Filter Invasive Group Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="470,196" sap2010:WorkflowViewState.IdRef="FilterDataTable_4" OutputDataTable="[dtInvasiveSearch]" SelectColumnsMode="Remove">
          <ui:FilterDataTable.Filters>
            <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
              <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                <ui:FilterOperationArgument.Column>
                  <InArgument x:TypeArguments="x:String">["genus"]</InArgument>
                </ui:FilterOperationArgument.Column>
                <ui:FilterOperationArgument.Operand>
                  <InArgument x:TypeArguments="x:String">[strGenusPart]</InArgument>
                </ui:FilterOperationArgument.Operand>
              </ui:FilterOperationArgument>
            </scg:List>
          </ui:FilterDataTable.Filters>
          <ui:FilterDataTable.SelectColumns>
            <scg:List x:TypeArguments="InArgument" Capacity="4">
              <x:Null />
            </scg:List>
          </ui:FilterDataTable.SelectColumns>
        </ui:FilterDataTable>
        <ui:FilterDataTable DataTable="[dtCitesGroup]" DisplayName="Filter Cites Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="470,196" sap2010:WorkflowViewState.IdRef="FilterDataTable_5" OutputDataTable="[dtCitesSearch]" SelectColumnsMode="Remove">
          <ui:FilterDataTable.Filters>
            <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
              <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                <ui:FilterOperationArgument.Column>
                  <InArgument x:TypeArguments="x:String">["genus"]</InArgument>
                </ui:FilterOperationArgument.Column>
                <ui:FilterOperationArgument.Operand>
                  <InArgument x:TypeArguments="x:String">[strGenusPart]</InArgument>
                </ui:FilterOperationArgument.Operand>
              </ui:FilterOperationArgument>
            </scg:List>
          </ui:FilterDataTable.Filters>
          <ui:FilterDataTable.SelectColumns>
            <scg:List x:TypeArguments="InArgument" Capacity="4">
              <x:Null />
            </scg:List>
          </ui:FilterDataTable.SelectColumns>
        </ui:FilterDataTable>
        <ui:FilterDataTable DataTable="[dtGenera]" DisplayName="Filter Validation Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="470,196" sap2010:WorkflowViewState.IdRef="FilterDataTable_6" OutputDataTable="[dtValidationSearch]" SelectColumnsMode="Remove">
          <ui:FilterDataTable.Filters>
            <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
              <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                <ui:FilterOperationArgument.Column>
                  <InArgument x:TypeArguments="x:String">["genera"]</InArgument>
                </ui:FilterOperationArgument.Column>
                <ui:FilterOperationArgument.Operand>
                  <InArgument x:TypeArguments="x:String">[strGenusPart]</InArgument>
                </ui:FilterOperationArgument.Operand>
              </ui:FilterOperationArgument>
            </scg:List>
          </ui:FilterDataTable.Filters>
          <ui:FilterDataTable.SelectColumns>
            <scg:List x:TypeArguments="InArgument" Capacity="4">
              <x:Null />
            </scg:List>
          </ui:FilterDataTable.SelectColumns>
        </ui:FilterDataTable>
        <Sequence sap2010:Annotation.AnnotationText="Join tables and then query the joined DT for any rows with Xylella fastidiosa (XF - a plant-pathogenic bacterium that causes devastating diseases in crops)" DisplayName="Host group and group names" sap:VirtualizedContainerService.HintSize="470,432.4" sap2010:WorkflowViewState.IdRef="Sequence_24">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:JoinDataTables DataTable1="[dtHostGroupRegulation]" DataTable2="[dtGroupNames]" DisplayName="Join hostgroup and group names Data Tables" sap:VirtualizedContainerService.HintSize="416,92" sap2010:WorkflowViewState.IdRef="JoinDataTables_2" JoinType="Inner" OutputDataTable="[dtHostGroupAndNames]">
            <ui:JoinDataTables.Arguments>
              <scg:List x:TypeArguments="ui:JoinOperationArgument" Capacity="4">
                <ui:JoinOperationArgument Operand="{x:Null}" BooleanOperator="And" Operator="EQ">
                  <ui:JoinOperationArgument.Column1>
                    <InArgument x:TypeArguments="x:String">["groupid"]</InArgument>
                  </ui:JoinOperationArgument.Column1>
                  <ui:JoinOperationArgument.Column2>
                    <InArgument x:TypeArguments="x:String">["groupid"]</InArgument>
                  </ui:JoinOperationArgument.Column2>
                </ui:JoinOperationArgument>
              </scg:List>
            </ui:JoinDataTables.Arguments>
          </ui:JoinDataTables>
          <ui:FilterDataTable DataTable="[dtHostGroupAndNames]" DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="416,187.2" sap2010:WorkflowViewState.IdRef="FilterDataTable_7" OutputDataTable="[dtXFItems]" SelectColumnsMode="Remove">
            <ui:FilterDataTable.Filters>
              <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                  <ui:FilterOperationArgument.Column>
                    <InArgument x:TypeArguments="x:String">["groupname"]</InArgument>
                  </ui:FilterOperationArgument.Column>
                  <ui:FilterOperationArgument.Operand>
                    <InArgument x:TypeArguments="x:String">["xf_group"]</InArgument>
                  </ui:FilterOperationArgument.Operand>
                </ui:FilterOperationArgument>
              </scg:List>
            </ui:FilterDataTable.Filters>
            <ui:FilterDataTable.SelectColumns>
              <scg:List x:TypeArguments="InArgument" Capacity="4">
                <x:Null />
              </scg:List>
            </ui:FilterDataTable.SelectColumns>
          </ui:FilterDataTable>
        </Sequence>
        <Sequence sap2010:Annotation.AnnotationText="Join tables and then query the joined DT for any rows with Herbs" DisplayName="Herb Items" sap:VirtualizedContainerService.HintSize="470,402.4" sap2010:WorkflowViewState.IdRef="Sequence_25">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:JoinDataTables DataTable1="[dtHostGroupRegulation]" DataTable2="[dtGroupNames]" DisplayName="Join hostgroup and group names Data Tables" sap:VirtualizedContainerService.HintSize="416,92" sap2010:WorkflowViewState.IdRef="JoinDataTables_3" JoinType="Inner" OutputDataTable="[dtHostGroupAndNames]">
            <ui:JoinDataTables.Arguments>
              <scg:List x:TypeArguments="ui:JoinOperationArgument" Capacity="4">
                <ui:JoinOperationArgument Operand="{x:Null}" BooleanOperator="And" Operator="EQ">
                  <ui:JoinOperationArgument.Column1>
                    <InArgument x:TypeArguments="x:String">["groupid"]</InArgument>
                  </ui:JoinOperationArgument.Column1>
                  <ui:JoinOperationArgument.Column2>
                    <InArgument x:TypeArguments="x:String">["groupid"]</InArgument>
                  </ui:JoinOperationArgument.Column2>
                </ui:JoinOperationArgument>
              </scg:List>
            </ui:JoinDataTables.Arguments>
          </ui:JoinDataTables>
          <ui:FilterDataTable DataTable="[dtHostGroupAndNames]" DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="416,187.2" sap2010:WorkflowViewState.IdRef="FilterDataTable_8" OutputDataTable="[dtHerbItems]" SelectColumnsMode="Remove">
            <ui:FilterDataTable.Filters>
              <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                  <ui:FilterOperationArgument.Column>
                    <InArgument x:TypeArguments="x:String">["groupname"]</InArgument>
                  </ui:FilterOperationArgument.Column>
                  <ui:FilterOperationArgument.Operand>
                    <InArgument x:TypeArguments="x:String">["herb_group"]</InArgument>
                  </ui:FilterOperationArgument.Operand>
                </ui:FilterOperationArgument>
              </scg:List>
            </ui:FilterDataTable.Filters>
            <ui:FilterDataTable.SelectColumns>
              <scg:List x:TypeArguments="InArgument" Capacity="4">
                <x:Null />
              </scg:List>
            </ui:FilterDataTable.SelectColumns>
          </ui:FilterDataTable>
        </Sequence>
        <Sequence sap2010:Annotation.AnnotationText="Filters dtHostRegulationJoin to include only rows where the &quot;order_tax&quot; column&#xA;matches any &quot;order_tax&quot; value in dtDistinctOrders. Returns a new DataTable with the filtered rows or an empty DataTable with the same schema if no matches are found.&#xD;&#xA;&#xD;&#xA;Parameters:&#xA;dtHostRegulationJoin: Source DataTable containing plant data with a &quot;order_tax&quot; column.&#xA;dtDistinctOrders: Reference DataTable containing unique &quot;order_tax&quot; values to match against.&#xA;Returns: A DataTable containing matching rows or an empty clone of dtHostRegulationJoin." DisplayName="Order regulation Items" sap:VirtualizedContainerService.HintSize="470,716.8" sap2010:WorkflowViewState.IdRef="Sequence_6">
          <Sequence.Variables>
            <Variable x:TypeArguments="sd:DataTable" Name="dtDistinctOrders" />
            <Variable x:TypeArguments="sd:DataTable" Name="dtFilteredTaxonGroup" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:FilterDataTable DataTable="[dtTaxonGroup]" DisplayName="Filter specific column Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="434,196" sap2010:WorkflowViewState.IdRef="FilterDataTable_9" OutputDataTable="[dtFilteredTaxonGroup]" SelectColumnsMode="Keep">
            <ui:FilterDataTable.Filters>
              <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                  <ui:FilterOperationArgument.Column>
                    <InArgument x:TypeArguments="x:String">["genus"]</InArgument>
                  </ui:FilterOperationArgument.Column>
                  <ui:FilterOperationArgument.Operand>
                    <InArgument x:TypeArguments="x:String">[strGenusPart]</InArgument>
                  </ui:FilterOperationArgument.Operand>
                </ui:FilterOperationArgument>
              </scg:List>
            </ui:FilterDataTable.Filters>
            <ui:FilterDataTable.SelectColumns>
              <scg:List x:TypeArguments="InArgument" Capacity="4">
                <InArgument x:TypeArguments="x:String">["order_tax"]</InArgument>
              </scg:List>
            </ui:FilterDataTable.SelectColumns>
          </ui:FilterDataTable>
          <ui:RemoveDuplicateRows DataTable="[dtFilteredTaxonGroup]" DisplayName="Remove Duplicate Rows to give distinct orders" sap:VirtualizedContainerService.HintSize="434,113.2" sap2010:WorkflowViewState.IdRef="RemoveDuplicateRows_1" OutputDataTable="[dtDistinctOrders]" />
          <Assign DisplayName="Get Order Items" sap:VirtualizedContainerService.HintSize="434,106.8" sap2010:WorkflowViewState.IdRef="Assign_18">
            <Assign.To>
              <OutArgument x:TypeArguments="sd:DataTable">[dtOrderRegulationItems]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="sd:DataTable" xml:space="preserve">[If((From row In dtHostRegulationJoin.AsEnumerable()
     Where dtDistinctOrders.AsEnumerable().
           Any(Function(r) r("order_tax").ToString = row("order_tax").ToString)
     Select row).Any(),     
    (From row In dtHostRegulationJoin.AsEnumerable()
     Where dtDistinctOrders.AsEnumerable().
           Any(Function(r) r("order_tax").ToString = row("order_tax").ToString)
     Select row).CopyToDataTable(),
    dtHostRegulationJoin.Clone())]</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
        <Sequence sap2010:Annotation.AnnotationText="Filters Taxonomic results for this genus.&#xD;&#xA;Filters dtHostRegulationJoin to include only rows where the &quot;family&quot; column matches any &quot;family&quot; value in dtDistinctFamilies. Returns a new DataTable with the filtered rows or an empty DataTable with the same schema if no matches are found.&#xD;&#xA;&#xA;Parameters:&#xA;dtHostRegulationJoin: Source DataTable containing plant data with a &quot;family&quot; column.&#xA;dtDistinctFamilies: Reference DataTable containing unique &quot;family&quot; values to match against.&#xA;Returns: A DataTable containing matching rows or an empty clone of dtHostRegulationJoin." DisplayName="Family Recognition Items" sap:VirtualizedContainerService.HintSize="470,724.4" sap2010:WorkflowViewState.IdRef="Sequence_7">
          <Sequence.Variables>
            <Variable x:TypeArguments="sd:DataTable" Name="dtFilteredTaxonGroup" />
            <Variable x:TypeArguments="sd:DataTable" Name="dtDistinctFamilies" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:FilterDataTable DataTable="[dtTaxonGroup]" DisplayName="Filter specific column Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="434,196" sap2010:WorkflowViewState.IdRef="FilterDataTable_10" OutputDataTable="[dtFilteredTaxonGroup]" SelectColumnsMode="Keep">
            <ui:FilterDataTable.Filters>
              <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                  <ui:FilterOperationArgument.Column>
                    <InArgument x:TypeArguments="x:String">["genus"]</InArgument>
                  </ui:FilterOperationArgument.Column>
                  <ui:FilterOperationArgument.Operand>
                    <InArgument x:TypeArguments="x:String">[strGenusPart]</InArgument>
                  </ui:FilterOperationArgument.Operand>
                </ui:FilterOperationArgument>
              </scg:List>
            </ui:FilterDataTable.Filters>
            <ui:FilterDataTable.SelectColumns>
              <scg:List x:TypeArguments="InArgument" Capacity="4">
                <InArgument x:TypeArguments="x:String">["family"]</InArgument>
              </scg:List>
            </ui:FilterDataTable.SelectColumns>
          </ui:FilterDataTable>
          <ui:RemoveDuplicateRows DataTable="[dtFilteredTaxonGroup]" DisplayName="Remove Duplicate Rows to give distinct orders" sap:VirtualizedContainerService.HintSize="434,113.2" sap2010:WorkflowViewState.IdRef="RemoveDuplicateRows_2" OutputDataTable="[dtDistinctFamilies]" />
          <Assign DisplayName="Get Family Regulation Items" sap:VirtualizedContainerService.HintSize="434,106.8" sap2010:WorkflowViewState.IdRef="Assign_19">
            <Assign.To>
              <OutArgument x:TypeArguments="sd:DataTable">[dtFamilyRegulationItems]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="sd:DataTable" xml:space="preserve">[If((From row In dtHostRegulationJoin.AsEnumerable()
     Where dtDistinctFamilies.AsEnumerable().
           Any(Function(fam) fam("family").ToString = row("family").ToString)
     Select row).Any(),
    (From row In dtHostRegulationJoin.AsEnumerable()
     Where dtDistinctFamilies.AsEnumerable().
           Any(Function(fam) fam("family").ToString = row("family").ToString)
     Select row).CopyToDataTable(),
    dtHostRegulationJoin.Clone())]</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
      </Sequence>
      <Sequence sap2010:Annotation.AnnotationText="Get the ID for the country of origin, find regulations for the country of origin ID and add them to dtMatchedItems&#xD;&#xA;If a matching country of origin isn't found - throw business exception" DisplayName="Country check" sap:VirtualizedContainerService.HintSize="468,162.8" sap2010:WorkflowViewState.IdRef="Sequence_8">
        <Sequence.Variables>
          <Variable x:TypeArguments="sd:DataTable" Name="dtCountryID" />
          <Variable x:TypeArguments="x:Int32" Name="intCountriesFound" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:FilterDataTable DataTable="[dtOrigin]" DisplayName="Filter Country" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="518,196" sap2010:WorkflowViewState.IdRef="FilterDataTable_11" OutputDataTable="[dtCountryID]" SelectColumnsMode="Remove">
          <ui:FilterDataTable.Filters>
            <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
              <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                <ui:FilterOperationArgument.Column>
                  <InArgument x:TypeArguments="x:String">["country"]</InArgument>
                </ui:FilterOperationArgument.Column>
                <ui:FilterOperationArgument.Operand>
                  <InArgument x:TypeArguments="x:String">[in_strCountryName]</InArgument>
                </ui:FilterOperationArgument.Operand>
              </ui:FilterOperationArgument>
            </scg:List>
          </ui:FilterDataTable.Filters>
          <ui:FilterDataTable.SelectColumns>
            <scg:List x:TypeArguments="InArgument" Capacity="4">
              <x:Null />
            </scg:List>
          </ui:FilterDataTable.SelectColumns>
        </ui:FilterDataTable>
        <Assign DisplayName="Count countries returned" sap:VirtualizedContainerService.HintSize="518,114.4" sap2010:WorkflowViewState.IdRef="Assign_20">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Int32">[intCountriesFound]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Int32">[dtCountryID.RowCount]</InArgument>
          </Assign.Value>
        </Assign>
        <If Condition="[intCountriesFound = 1]" DisplayName="If country found" sap:VirtualizedContainerService.HintSize="518,1170" sap2010:WorkflowViewState.IdRef="If_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If.Then>
            <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="484,833.2" sap2010:WorkflowViewState.IdRef="Sequence_9">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="strCountryID" />
                <Variable x:TypeArguments="sd:DataTable" Name="dtCountryRegulations" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Assign Country ID" sap:VirtualizedContainerService.HintSize="450,114.4" sap2010:WorkflowViewState.IdRef="Assign_21">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[strCountryID]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[dtCountryID.Rows(0)("originid").ToString]</InArgument>
                </Assign.Value>
              </Assign>
              <ui:FilterDataTable DataTable="[dtOriginRegulation]" DisplayName="Filter Origin Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="450,196" sap2010:WorkflowViewState.IdRef="FilterDataTable_12" OutputDataTable="[dtCountryRegulations]" SelectColumnsMode="Remove">
                <ui:FilterDataTable.Filters>
                  <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                    <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                      <ui:FilterOperationArgument.Column>
                        <InArgument x:TypeArguments="x:String">["originid"]</InArgument>
                      </ui:FilterOperationArgument.Column>
                      <ui:FilterOperationArgument.Operand>
                        <InArgument x:TypeArguments="x:String">[strCountryID]</InArgument>
                      </ui:FilterOperationArgument.Operand>
                    </ui:FilterOperationArgument>
                  </scg:List>
                </ui:FilterDataTable.Filters>
                <ui:FilterDataTable.SelectColumns>
                  <scg:List x:TypeArguments="InArgument" Capacity="4">
                    <x:Null />
                  </scg:List>
                </ui:FilterDataTable.SelectColumns>
              </ui:FilterDataTable>
              <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dtCountryRegulations]" DisplayName="For Each Row in Country Regulations Data Table" sap:VirtualizedContainerService.HintSize="450,462.8" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
                <ui:ForEachRow.Body>
                  <ActivityAction x:TypeArguments="sd:DataRow">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="416,273.2" sap2010:WorkflowViewState.IdRef="Sequence_26">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{CurrentRow(&quot;itemid&quot;).ToString, &quot;OriginCountry&quot;}]" DataTable="[dtMatchedItems]" DisplayName="Add Data Row to Matched Items" sap:VirtualizedContainerService.HintSize="382,213.2" sap2010:WorkflowViewState.IdRef="AddDataRow_1" />
                    </Sequence>
                  </ActivityAction>
                </ui:ForEachRow.Body>
              </ui:ForEachRow>
            </Sequence>
          </If.Then>
          <If.Else>
            <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="484,174.4" sap2010:WorkflowViewState.IdRef="Sequence_27">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Throw DisplayName="Throw business exception - missing country of origin" Exception="[new BusinessRuleException(&quot;Country of origin not found: &quot; &amp; in_strCountryName)]" sap:VirtualizedContainerService.HintSize="382,114.4" sap2010:WorkflowViewState.IdRef="Throw_1" />
            </Sequence>
          </If.Else>
        </If>
      </Sequence>
      <Sequence sap2010:Annotation.AnnotationText="Join all host regulations to the regulation data&#xD;&#xA;Assign the list of Genuses to search (this should only ever be 1 genus - the code was converted where this could be a list, this functionality was replicated to allow for future expansion if needed)&#xD;&#xA;Filters dtHostRegulationsFull to include rows where the &quot;genus&quot; column matches any value in lisGenus or where &quot;genus&quot; is &quot;All&quot; with empty or null &quot;order_tax&quot; and &quot;family&quot; columns. Returns the filtered rows as the DataTable dtGenusFiltered&#xD;&#xA;&#xD;&#xA;---&#xD;&#xA;&#xD;&#xA;Create exclusion lists (for full genus or specific species of a genus) to filter out certain regulation items based on genus/species (as appropiate). The sequence creates two datatables: dtGenusExclusionList to exclude entire genera and dtSpeciesExclusionList to exclude specific species within a genus.&#xD;&#xA;&#xD;&#xA;---&#xD;&#xA;&#xD;&#xA;Filters dtGenusFiltered to return a distinct list of itemid values for regulation items that are not excluded and then adds these to dtMatchedItems as valid regulations that apply." DisplayName="Host Regulation" sap:VirtualizedContainerService.HintSize="468,474.4" sap2010:WorkflowViewState.IdRef="Sequence_10">
        <Sequence.Variables>
          <Variable x:TypeArguments="sd:DataTable" Name="dtHostRegulationsFull" />
          <Variable x:TypeArguments="sd:DataTable" Name="dtGenusFiltered" />
          <Variable x:TypeArguments="scg:List(x:String)" Name="lisGenus" />
          <Variable x:TypeArguments="sd:DataTable" Name="dtAllHostsItems" />
          <Variable x:TypeArguments="sd:DataTable" Name="dtExcludedSpecies" />
          <Variable x:TypeArguments="scg:List(x:String)" Name="lisExcludedGenusList" />
          <Variable x:TypeArguments="sd:DataTable" Name="dtSearchSharedExGenus" />
          <Variable x:TypeArguments="sd:DataTable" Name="dtGenusItems" />
          <Variable x:TypeArguments="sd:DataTable" Name="dtGenusExclusionList" />
          <Variable x:TypeArguments="sd:DataTable" Name="dtSpeciesExclusionList" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:JoinDataTables DataTable1="[dtHostRegulationJoin]" DataTable2="[dtRegulation]" DisplayName="Join Host Regulations to Regulations" sap:VirtualizedContainerService.HintSize="450,92" sap2010:WorkflowViewState.IdRef="JoinDataTables_4" JoinType="Inner" OutputDataTable="[dtHostRegulationsFull]">
          <ui:JoinDataTables.Arguments>
            <scg:List x:TypeArguments="ui:JoinOperationArgument" Capacity="4">
              <ui:JoinOperationArgument Operand="{x:Null}" BooleanOperator="And" Operator="EQ">
                <ui:JoinOperationArgument.Column1>
                  <InArgument x:TypeArguments="x:String">["itemid"]</InArgument>
                </ui:JoinOperationArgument.Column1>
                <ui:JoinOperationArgument.Column2>
                  <InArgument x:TypeArguments="x:String">["itemid"]</InArgument>
                </ui:JoinOperationArgument.Column2>
              </ui:JoinOperationArgument>
            </scg:List>
          </ui:JoinDataTables.Arguments>
        </ui:JoinDataTables>
        <Assign DisplayName="Assign all Genus from in argument to list" sap:VirtualizedContainerService.HintSize="450,114.4" sap2010:WorkflowViewState.IdRef="Assign_22">
          <Assign.To>
            <OutArgument x:TypeArguments="scg:List(x:String)">[lisGenus]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="scg:List(x:String)">[New List(Of String) From { strGenusPart }]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign DisplayName="Query Host Regs where genus matches the current item or where genus is ALL" sap:VirtualizedContainerService.HintSize="450,115.6" sap2010:WorkflowViewState.IdRef="Assign_47">
          <Assign.To>
            <OutArgument x:TypeArguments="sd:DataTable">[dtGenusFiltered]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="sd:DataTable" xml:space="preserve">[If((From row In dtHostRegulationsFull.AsEnumerable()
    Where lisGenus.Contains(row.Field(Of String)("genus")) OrElse
          (row.Field(Of String)("genus") = "All" AndAlso
           (String.IsNullOrEmpty(row.Field(Of String)("order_tax")) OrElse row.Field(Of String)("order_tax") = "") AndAlso
           (String.IsNullOrEmpty(row.Field(Of String)("family")) OrElse row.Field(Of String)("family") = ""))
    Select row).Any(),
   (From row In dtHostRegulationsFull.AsEnumerable()
    Where lisGenus.Contains(row.Field(Of String)("genus")) OrElse
          (row.Field(Of String)("genus") = "All" AndAlso
           (String.IsNullOrEmpty(row.Field(Of String)("order_tax")) OrElse row.Field(Of String)("order_tax") = "") AndAlso
           (String.IsNullOrEmpty(row.Field(Of String)("family")) OrElse row.Field(Of String)("family") = ""))
    Select row).CopyToDataTable(),
   dtHostRegulationsFull.Clone())]</InArgument>
          </Assign.Value>
        </Assign>
        <Sequence sap2010:Annotation.AnnotationText="Exclusions are for any genus (or a specific species within a genus) that are excluded from the regulations that are found. &#xD;&#xA;&#xD;&#xA;It starts by identifying regulations for &quot;All Hosts&quot; and then finds any excluded species or genera within those, narrowing the list further to the genus we are looking at." DisplayName="Identify Exclusions" sap:VirtualizedContainerService.HintSize="450,212" sap2010:WorkflowViewState.IdRef="Sequence_28">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign sap2010:Annotation.AnnotationText="Filters dtGenusFiltered to include rows where the &quot;genus&quot; column is &quot;All&quot; and the &quot;species&quot; column is &quot;Hosts&quot; (both trimmed to remove whitespace). Returns a new DataTable (dtAllHostsItems) containing the filtered rows or an empty DataTable with the same schema if no matches are found." DisplayName="Find items with genus = &quot;All&quot; and species = &quot;Hosts&quot;" sap:VirtualizedContainerService.HintSize="434,209.6" sap2010:WorkflowViewState.IdRef="Assign_25">
            <Assign.To>
              <OutArgument x:TypeArguments="sd:DataTable">[dtAllHostsItems]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="sd:DataTable" xml:space="preserve">[If((From row In dtGenusFiltered.AsEnumerable()
     Where row("genus").ToString.Trim = "All" And row("species").ToString.Trim = "Hosts"
     Select row).Any(),
    (From row In dtGenusFiltered.AsEnumerable()
     Where row("genus").ToString.Trim = "All" And row("species").ToString.Trim = "Hosts"
     Select row).CopyToDataTable(),
    dtGenusFiltered.Clone())]</InArgument>
            </Assign.Value>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </Assign>
          <Assign sap2010:Annotation.AnnotationText="Filters dtGenusFiltered to include rows where the &quot;genus&quot; column is not &quot;All&quot; (after trimming whitespace) and the &quot;itemid&quot; column matches any &quot;itemid&quot; value in dtAllHostsItems. Returns a new DataTable (dtExcludedSpecies) containing the filtered rows or an empty DataTable with the same schema if no matches are found." DisplayName="Find excluded species in excluded genus" sap:VirtualizedContainerService.HintSize="434,209.6" sap2010:WorkflowViewState.IdRef="Assign_48">
            <Assign.To>
              <OutArgument x:TypeArguments="sd:DataTable">[dtExcludedSpecies]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="sd:DataTable" xml:space="preserve">[If((From row In dtGenusFiltered.AsEnumerable()
    Where row("genus").ToString.Trim &lt;&gt; "All" And
          dtAllHostsItems.AsEnumerable().Any(Function(r) r("itemid").ToString = row("itemid").ToString)
    Select row).Any(),
   (From row In dtGenusFiltered.AsEnumerable()
    Where row("genus").ToString.Trim &lt;&gt; "All" And
          dtAllHostsItems.AsEnumerable().Any(Function(r) r("itemid").ToString = row("itemid").ToString)
    Select row).CopyToDataTable(),
   dtGenusFiltered.Clone())]</InArgument>
            </Assign.Value>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </Assign>
          <ui:FilterDataTable sap2010:Annotation.AnnotationText="Filters the Excluded Species DT to only return the rows for the current genus" DataTable="[dtExcludedSpecies]" DisplayName="Filter Excluded Species for this genus" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="434,232" sap2010:WorkflowViewState.IdRef="FilterDataTable_23" OutputDataTable="[dtSearchSharedExGenus]" SelectColumnsMode="Remove">
            <ui:FilterDataTable.Filters>
              <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                  <ui:FilterOperationArgument.Column>
                    <InArgument x:TypeArguments="x:String">["genus"]</InArgument>
                  </ui:FilterOperationArgument.Column>
                  <ui:FilterOperationArgument.Operand>
                    <InArgument x:TypeArguments="x:String">[strGenusPart]</InArgument>
                  </ui:FilterOperationArgument.Operand>
                </ui:FilterOperationArgument>
              </scg:List>
            </ui:FilterDataTable.Filters>
            <ui:FilterDataTable.SelectColumns>
              <scg:List x:TypeArguments="InArgument" Capacity="4">
                <x:Null />
              </scg:List>
            </ui:FilterDataTable.SelectColumns>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:FilterDataTable>
        </Sequence>
        <Sequence sap2010:Annotation.AnnotationText="Populate either the full genus, or the genus and species to the exclusion DTs" DisplayName="Build exclusion lists" sap:VirtualizedContainerService.HintSize="450,146.4" sap2010:WorkflowViewState.IdRef="Sequence_11">
          <Sequence.Variables>
            <Variable x:TypeArguments="s:String[]" Name="arrGenus" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:BuildDataTable DataTable="[dtGenusExclusionList]" DisplayName="Build Exclusion Genus Data Table" sap:VirtualizedContainerService.HintSize="434,92" sap2010:WorkflowViewState.IdRef="BuildDataTable_3" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;itemid&quot; msdata:Caption=&quot;&quot; type=&quot;xs:int&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Genus&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;species&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
          <ui:BuildDataTable DataTable="[dtSpeciesExclusionList]" DisplayName="Build Exclusion Species Data Table" sap:VirtualizedContainerService.HintSize="434,92" sap2010:WorkflowViewState.IdRef="BuildDataTable_4" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;ItemID&quot; msdata:Caption=&quot;&quot; type=&quot;xs:int&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;genus&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
          <Assign DisplayName="Extract distinct genera" sap:VirtualizedContainerService.HintSize="434,115.6" sap2010:WorkflowViewState.IdRef="Assign_30">
            <Assign.To>
              <OutArgument x:TypeArguments="s:String[]">[arrGenus]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="s:String[]" xml:space="preserve">[(From row In dtSearchSharedExGenus.AsEnumerable()
            Select row.Field(Of String)("Genus")
            Distinct).ToArray()]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each Distinct Genus" sap:VirtualizedContainerService.HintSize="434,48" sap2010:WorkflowViewState.IdRef="ForEach`1_4" Values="[arrGenus]">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="x:String">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="x:String" Name="currentGenus" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="552,1942.4" sap2010:WorkflowViewState.IdRef="Sequence_12">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="scg:List(x:String)" Name="lisExGenus" />
                    <Variable x:TypeArguments="scg:List(sd:DataRow)" Name="lisSearchGenus" />
                    <Variable x:TypeArguments="scg:List(sd:DataRow)" Name="lisItemIDs" />
                    <Variable x:TypeArguments="scg:List(sd:DataRow)" Name="lisAllExGenus" />
                    <Variable x:TypeArguments="x:Boolean" Name="boolHasNonExcludedSpecies" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign DisplayName="Assign list of excluded excluded species = &quot;All&quot; for this genus" sap:VirtualizedContainerService.HintSize="518,115.6" sap2010:WorkflowViewState.IdRef="Assign_34">
                    <Assign.To>
                      <OutArgument x:TypeArguments="scg:List(sd:DataRow)">[lisAllExGenus]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="scg:List(sd:DataRow)" xml:space="preserve">[(From row In dtExcludedSpecies.AsEnumerable()
              Where row.Field(Of String)("Genus") = currentGenus AndAlso
                    row.Field(Of String)("Species") = "All"
              Select row).ToList()]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign all excluded rows for this genus" sap:VirtualizedContainerService.HintSize="518,115.6" sap2010:WorkflowViewState.IdRef="Assign_33">
                    <Assign.To>
                      <OutArgument x:TypeArguments="scg:List(sd:DataRow)">[lisItemIDs]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="scg:List(sd:DataRow)" xml:space="preserve">[(From row In dtExcludedSpecies.AsEnumerable()
              Where row.Field(Of String)("Genus") = currentGenus
              Select row).ToList()]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap2010:Annotation.AnnotationText="Retrieve a list of species from dtExcludedSpecies where the genus matches currentGenus, used to identify excluded species for the current genus in regulation filtering." DisplayName="Assign list of excluded specific genus species" sap:VirtualizedContainerService.HintSize="518,176.8" sap2010:WorkflowViewState.IdRef="Assign_31">
                    <Assign.To>
                      <OutArgument x:TypeArguments="scg:List(x:String)">[lisExGenus]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="scg:List(x:String)" xml:space="preserve">[(From row In dtExcludedSpecies.AsEnumerable()
           Where row.Field(Of String)("Genus") = currentGenus
           Select row.Field(Of String)("Species")).ToList()]</InArgument>
                    </Assign.Value>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </Assign>
                  <Assign sap2010:Annotation.AnnotationText="Extracts rows from dtSearchSharedExGenus where the genus matches currentGenus, used to identify genus-species pairs in the exclusion list for further processing." DisplayName="Assign all matching genus rows in dtSearchSharedExGenus" sap:VirtualizedContainerService.HintSize="518,176.8" sap2010:WorkflowViewState.IdRef="Assign_32">
                    <Assign.To>
                      <OutArgument x:TypeArguments="scg:List(sd:DataRow)">[lisSearchGenus]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="scg:List(sd:DataRow)" xml:space="preserve">[(From row In dtSearchSharedExGenus.AsEnumerable()
               Where row.Field(Of String)("Genus") = currentGenus
               Select row).ToList()]</InArgument>
                    </Assign.Value>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </Assign>
                  <Assign sap2010:Annotation.AnnotationText="Check if any species in dtSearchSharedExGenus for currentGenus is not in dtExcludedSpecies' species list&#xA;Mimics Python's search_genus.difference(ex_genus) to identify non-excluded species" DisplayName="Assign if any non excluded species" sap:VirtualizedContainerService.HintSize="518,192" sap2010:WorkflowViewState.IdRef="Assign_53">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Boolean">[boolHasNonExcludedSpecies]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Boolean">[lisSearchGenus.Any(Function(row) Not lisExGenus.Contains(row.Field(Of String)("Species")))]</InArgument>
                    </Assign.Value>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </Assign>
                  <If Condition="[boolHasNonExcludedSpecies = True]" DisplayName="If there are non excluded species, add to species DT" sap:VirtualizedContainerService.HintSize="518,1105.6" sap2010:WorkflowViewState.IdRef="If_9">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="484,471.6" sap2010:WorkflowViewState.IdRef="Sequence_60">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:ForEach x:TypeArguments="sd:DataRow" CurrentIndex="{x:Null}" DisplayName="For Each Genus and Species for Exclusion" sap:VirtualizedContainerService.HintSize="450,411.6" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[lisItemIDs]">
                          <ui:ForEach.Body>
                            <ActivityAction x:TypeArguments="sd:DataRow">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="sd:DataRow" Name="currentItem" />
                              </ActivityAction.Argument>
                              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="416,273.2" sap2010:WorkflowViewState.IdRef="Sequence_31">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{currentItem(&quot;ItemId&quot;), currentItem(&quot;Genus&quot;), currentItem(&quot;Species&quot;)}]" DataTable="[dtSpeciesExclusionList]" DisplayName="Add Species Exclusion Data Row" sap:VirtualizedContainerService.HintSize="382,213.2" sap2010:WorkflowViewState.IdRef="AddDataRow_4" />
                              </Sequence>
                            </ActivityAction>
                          </ui:ForEach.Body>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:ForEach>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="484,471.6" sap2010:WorkflowViewState.IdRef="Sequence_61">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:ForEach x:TypeArguments="sd:DataRow" CurrentIndex="{x:Null}" DisplayName="For Each Genus for Exclusion" sap:VirtualizedContainerService.HintSize="450,411.6" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[lisItemIDs]">
                          <ui:ForEach.Body>
                            <ActivityAction x:TypeArguments="sd:DataRow">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="sd:DataRow" Name="currentItem" />
                              </ActivityAction.Argument>
                              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="416,273.2" sap2010:WorkflowViewState.IdRef="Sequence_33">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{currentItem(&quot;ItemId&quot;), currentItem(&quot;Genus&quot;)}]" DataTable="[dtGenusExclusionList]" DisplayName="Add Genus Exclusion Data Row" sap:VirtualizedContainerService.HintSize="382,213.2" sap2010:WorkflowViewState.IdRef="AddDataRow_5">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:AddDataRow>
                              </Sequence>
                            </ActivityAction>
                          </ui:ForEach.Body>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:ForEach>
                      </Sequence>
                    </If.Else>
                  </If>
                </Sequence>
              </ActivityAction>
            </ui:ForEach.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ForEach>
        </Sequence>
        <Assign sap2010:Annotation.AnnotationText="Filters dtGenusFiltered to return a distinct list of itemid values for regulation items that are not excluded.&#xA;Excludes items where itemid and genus match dtGenusExclusionList or where itemid, genus, and species match dtSpeciesExclusionList.&#xA;Returns unique itemid strings for valid regulations after applying exclusion rules." DisplayName="Create list of all genus items needed downstream" sap:VirtualizedContainerService.HintSize="450,226" sap2010:WorkflowViewState.IdRef="Assign_35">
          <Assign.To>
            <OutArgument x:TypeArguments="scg:List(x:String)">[lisAllGenusItems]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="scg:List(x:String)" xml:space="preserve">[dtGenusFiltered.AsEnumerable() _
    .Where(Function(gRow) Not dtGenusExclusionList.AsEnumerable() _
        .Any(Function(exRow) exRow("itemid").ToString = gRow("itemid").ToString AndAlso exRow("genus").ToString = gRow("genus").ToString) AndAlso _
        Not dtSpeciesExclusionList.AsEnumerable() _
        .Any(Function(spRow) spRow("itemid").ToString = gRow("itemid").ToString AndAlso spRow("genus").ToString = gRow("genus").ToString AndAlso spRow("species").ToString = gRow("species").ToString)) _
    .Select(Function(gRow) gRow("itemid").ToString) _
    .Distinct() _
    .ToList()]</InArgument>
          </Assign.Value>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </Assign>
        <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each itemid in lisAllGenusItems" sap:VirtualizedContainerService.HintSize="450,411.6" sap2010:WorkflowViewState.IdRef="ForEach`1_5" Values="[lisAllGenusItems]">
          <ui:ForEach.Body>
            <ActivityAction x:TypeArguments="x:String">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="x:String" Name="currentItemID" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="416,273.2" sap2010:WorkflowViewState.IdRef="Sequence_62">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{currentItemID, &quot;Genus&quot;}]" DataTable="[dtMatchedItems]" DisplayName="Add Data Row to Matched Items" sap:VirtualizedContainerService.HintSize="382,213.2" sap2010:WorkflowViewState.IdRef="AddDataRow_14" />
              </Sequence>
            </ActivityAction>
          </ui:ForEach.Body>
        </ui:ForEach>
      </Sequence>
      <Sequence DisplayName="Commodity Items" sap:VirtualizedContainerService.HintSize="468,101.6" sap2010:WorkflowViewState.IdRef="Sequence_13">
        <Sequence.Variables>
          <Variable x:TypeArguments="sd:DataTable" Name="dtCommodityTypes" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="518,175.6" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="[UiPath.Core.Activities.LogLevel.Warn]" Message="[&quot;Commodity Items are not yet filtered, so all are returned. This needs amending after Sally has defined process&quot;]" />
        <ui:FilterDataTable DataTable="[dtCommodity]" DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="518,196" sap2010:WorkflowViewState.IdRef="FilterDataTable_13" OutputDataTable="[dtCommodityTypes]" SelectColumnsMode="Remove">
          <ui:FilterDataTable.Filters>
            <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
              <ui:FilterOperationArgument Column="{x:Null}" Operand="{x:Null}" BooleanOperator="And" Operator="EQ" />
            </scg:List>
          </ui:FilterDataTable.Filters>
          <ui:FilterDataTable.SelectColumns>
            <scg:List x:TypeArguments="InArgument" Capacity="4">
              <x:Null />
            </scg:List>
          </ui:FilterDataTable.SelectColumns>
        </ui:FilterDataTable>
        <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dtCommodityTypes]" DisplayName="For Each Commodity Type Row in Data Table" sap:VirtualizedContainerService.HintSize="518,908.4" sap2010:WorkflowViewState.IdRef="ForEachRow_4">
          <ui:ForEachRow.Body>
            <ActivityAction x:TypeArguments="sd:DataRow">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentCommodityRow" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="484,718.8" sap2010:WorkflowViewState.IdRef="Sequence_14">
                <Sequence.Variables>
                  <Variable x:TypeArguments="sd:DataTable" Name="dtCommodityTypeItems" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:FilterDataTable DataTable="[dtCommodityRegulation]" DisplayName="Filter Commodity Items for this Commodity Type Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="450,196" sap2010:WorkflowViewState.IdRef="FilterDataTable_14" OutputDataTable="[dtCommodityTypeItems]" SelectColumnsMode="Remove">
                  <ui:FilterDataTable.Filters>
                    <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                      <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                        <ui:FilterOperationArgument.Column>
                          <InArgument x:TypeArguments="x:String">["commodityid"]</InArgument>
                        </ui:FilterOperationArgument.Column>
                        <ui:FilterOperationArgument.Operand>
                          <InArgument x:TypeArguments="x:Object">[CurrentCommodityRow("commodityid")]</InArgument>
                        </ui:FilterOperationArgument.Operand>
                      </ui:FilterOperationArgument>
                    </scg:List>
                  </ui:FilterDataTable.Filters>
                  <ui:FilterDataTable.SelectColumns>
                    <scg:List x:TypeArguments="InArgument" Capacity="4">
                      <x:Null />
                    </scg:List>
                  </ui:FilterDataTable.SelectColumns>
                </ui:FilterDataTable>
                <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dtCommodityTypeItems]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="450,462.8" sap2010:WorkflowViewState.IdRef="ForEachRow_3">
                  <ui:ForEachRow.Body>
                    <ActivityAction x:TypeArguments="sd:DataRow">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentCommodityTypeItemsRow" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="416,273.2" sap2010:WorkflowViewState.IdRef="Sequence_37">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{CurrentCommodityTypeItemsRow(&quot;itemid&quot;).ToString, &quot;Commodity&quot;}]" DataTable="[dtMatchedItems]" DisplayName="Add Data Row to Matched Items" sap:VirtualizedContainerService.HintSize="382,213.2" sap2010:WorkflowViewState.IdRef="AddDataRow_7" />
                      </Sequence>
                    </ActivityAction>
                  </ui:ForEachRow.Body>
                </ui:ForEachRow>
              </Sequence>
            </ActivityAction>
          </ui:ForEachRow.Body>
        </ui:ForEachRow>
      </Sequence>
      <Sequence sap2010:Annotation.AnnotationText="Filter taxon_group rows for the desired genus and process each row for relevant regulations" DisplayName="Process Data for Genus" sap:VirtualizedContainerService.HintSize="468,146.4" sap2010:WorkflowViewState.IdRef="Sequence_15">
        <Sequence.Variables>
          <Variable x:TypeArguments="sd:DataTable" Name="dtTaxonMatches" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:FilterDataTable DataTable="[dtTaxonGroup]" DisplayName="Filter Taxon Matches for this Genus" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="518,196" sap2010:WorkflowViewState.IdRef="FilterDataTable_15" OutputDataTable="[dtTaxonMatches]" SelectColumnsMode="Remove">
          <ui:FilterDataTable.Filters>
            <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
              <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                <ui:FilterOperationArgument.Column>
                  <InArgument x:TypeArguments="x:String">["genus"]</InArgument>
                </ui:FilterOperationArgument.Column>
                <ui:FilterOperationArgument.Operand>
                  <InArgument x:TypeArguments="x:String">[strGenusPart]</InArgument>
                </ui:FilterOperationArgument.Operand>
              </ui:FilterOperationArgument>
            </scg:List>
          </ui:FilterDataTable.Filters>
          <ui:FilterDataTable.SelectColumns>
            <scg:List x:TypeArguments="InArgument" Capacity="4">
              <x:Null />
            </scg:List>
          </ui:FilterDataTable.SelectColumns>
        </ui:FilterDataTable>
        <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dtTaxonMatches]" DisplayName="For Each Row in Taxon Matches Data Table" sap:VirtualizedContainerService.HintSize="518,581.6" sap2010:WorkflowViewState.IdRef="ForEachRow_11">
          <ui:ForEachRow.Body>
            <ActivityAction x:TypeArguments="sd:DataRow">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="484,392" sap2010:WorkflowViewState.IdRef="Sequence_16">
                <Sequence.Variables>
                  <Variable x:TypeArguments="sd:DataTable" Name="dtTaxOrderRows" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Sequence DisplayName="Order Regulation Items" sap:VirtualizedContainerService.HintSize="450,56.8" sap2010:WorkflowViewState.IdRef="Sequence_39">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:FilterDataTable DataTable="[dtOrderRegulationItems]" DisplayName="Filter Taxonomic Order Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="450,196" sap2010:WorkflowViewState.IdRef="FilterDataTable_16" OutputDataTable="[dtTaxOrderRows]" SelectColumnsMode="Remove">
                    <ui:FilterDataTable.Filters>
                      <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                        <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                          <ui:FilterOperationArgument.Column>
                            <InArgument x:TypeArguments="x:String">["order_tax"]</InArgument>
                          </ui:FilterOperationArgument.Column>
                          <ui:FilterOperationArgument.Operand>
                            <InArgument x:TypeArguments="x:Object">[CurrentRow("order_tax")]</InArgument>
                          </ui:FilterOperationArgument.Operand>
                        </ui:FilterOperationArgument>
                      </scg:List>
                    </ui:FilterDataTable.Filters>
                    <ui:FilterDataTable.SelectColumns>
                      <scg:List x:TypeArguments="InArgument" Capacity="4">
                        <x:Null />
                      </scg:List>
                    </ui:FilterDataTable.SelectColumns>
                  </ui:FilterDataTable>
                  <ui:RemoveDuplicateRows DataTable="[dtTaxOrderRows]" DisplayName="Remove Duplicate Taxonomic Order Rows" sap:VirtualizedContainerService.HintSize="450,113.2" sap2010:WorkflowViewState.IdRef="RemoveDuplicateRows_3" OutputDataTable="[dtTaxOrderRows]" />
                  <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dtTaxOrderRows]" DisplayName="For Each Row in TaxOrderRows" sap:VirtualizedContainerService.HintSize="450,462.8" sap2010:WorkflowViewState.IdRef="ForEachRow_5">
                    <ui:ForEachRow.Body>
                      <ActivityAction x:TypeArguments="sd:DataRow">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentTaxOrderRow" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="416,273.2" sap2010:WorkflowViewState.IdRef="Sequence_38">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{CurrentTaxOrderRow(&quot;itemid&quot;).ToString, &quot;Order&quot;}]" DataTable="[dtMatchedItems]" DisplayName="Add Order Row Data Row to Matched Items" sap:VirtualizedContainerService.HintSize="382,213.2" sap2010:WorkflowViewState.IdRef="AddDataRow_8">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:AddDataRow>
                        </Sequence>
                      </ActivityAction>
                    </ui:ForEachRow.Body>
                  </ui:ForEachRow>
                </Sequence>
                <Sequence DisplayName="Family Regulation Items" sap:VirtualizedContainerService.HintSize="450,56.8" sap2010:WorkflowViewState.IdRef="Sequence_17">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="sd:DataTable" Name="dtTaxFamilyRows" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:FilterDataTable DataTable="[dtFamilyRegulationItems]" DisplayName="Filter Family Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="450,196" sap2010:WorkflowViewState.IdRef="FilterDataTable_17" OutputDataTable="[dtTaxFamilyRows]" SelectColumnsMode="Remove">
                    <ui:FilterDataTable.Filters>
                      <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                        <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                          <ui:FilterOperationArgument.Column>
                            <InArgument x:TypeArguments="x:String">["family"]</InArgument>
                          </ui:FilterOperationArgument.Column>
                          <ui:FilterOperationArgument.Operand>
                            <InArgument x:TypeArguments="x:Object">[CurrentRow("family")]</InArgument>
                          </ui:FilterOperationArgument.Operand>
                        </ui:FilterOperationArgument>
                      </scg:List>
                    </ui:FilterDataTable.Filters>
                    <ui:FilterDataTable.SelectColumns>
                      <scg:List x:TypeArguments="InArgument" Capacity="4">
                        <x:Null />
                      </scg:List>
                    </ui:FilterDataTable.SelectColumns>
                  </ui:FilterDataTable>
                  <ui:RemoveDuplicateRows DataTable="[dtTaxFamilyRows]" DisplayName="Remove Duplicate Family Rows" sap:VirtualizedContainerService.HintSize="450,113.2" sap2010:WorkflowViewState.IdRef="RemoveDuplicateRows_4" OutputDataTable="[dtTaxFamilyRows]" />
                  <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dtTaxFamilyRows]" DisplayName="For Each Row in TaxFamilyRows" sap:VirtualizedContainerService.HintSize="450,462.8" sap2010:WorkflowViewState.IdRef="ForEachRow_6">
                    <ui:ForEachRow.Body>
                      <ActivityAction x:TypeArguments="sd:DataRow">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentTaxFamilyRow" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="416,273.2" sap2010:WorkflowViewState.IdRef="Sequence_40">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{CurrentTaxFamilyRow(&quot;itemid&quot;).ToString, &quot;Family&quot;}]" DataTable="[dtMatchedItems]" DisplayName="Add Family Row Data Row to Matched Items" sap:VirtualizedContainerService.HintSize="382,213.2" sap2010:WorkflowViewState.IdRef="AddDataRow_9">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:AddDataRow>
                        </Sequence>
                      </ActivityAction>
                    </ui:ForEachRow.Body>
                  </ui:ForEachRow>
                </Sequence>
                <Sequence DisplayName="XF Items" sap:VirtualizedContainerService.HintSize="450,56.8" sap2010:WorkflowViewState.IdRef="Sequence_18">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="sd:DataTable" Name="dtTaxFamilyRows" />
                    <Variable x:TypeArguments="sd:DataTable" Name="dtTaxXFGroupRows" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:FilterDataTable DataTable="[dtXFGroupSearch]" DisplayName="Filter XF Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="450,196" sap2010:WorkflowViewState.IdRef="FilterDataTable_18" OutputDataTable="[dtTaxXFGroupRows]" SelectColumnsMode="Remove">
                    <ui:FilterDataTable.Filters>
                      <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                        <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                          <ui:FilterOperationArgument.Column>
                            <InArgument x:TypeArguments="x:String">["genus"]</InArgument>
                          </ui:FilterOperationArgument.Column>
                          <ui:FilterOperationArgument.Operand>
                            <InArgument x:TypeArguments="x:Object">[CurrentRow("genus")]</InArgument>
                          </ui:FilterOperationArgument.Operand>
                        </ui:FilterOperationArgument>
                      </scg:List>
                    </ui:FilterDataTable.Filters>
                    <ui:FilterDataTable.SelectColumns>
                      <scg:List x:TypeArguments="InArgument" Capacity="4">
                        <x:Null />
                      </scg:List>
                    </ui:FilterDataTable.SelectColumns>
                  </ui:FilterDataTable>
                  <ui:RemoveDuplicateRows DataTable="[dtTaxXFGroupRows]" DisplayName="Remove Duplicate XF Rows" sap:VirtualizedContainerService.HintSize="450,113.2" sap2010:WorkflowViewState.IdRef="RemoveDuplicateRows_5" OutputDataTable="[dtTaxXFGroupRows]" />
                  <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dtTaxXFGroupRows]" DisplayName="For Each Row in TaxXFGroupRows" sap:VirtualizedContainerService.HintSize="450,462.8" sap2010:WorkflowViewState.IdRef="ForEachRow_7">
                    <ui:ForEachRow.Body>
                      <ActivityAction x:TypeArguments="sd:DataRow">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentTaxXFRow" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="416,273.2" sap2010:WorkflowViewState.IdRef="Sequence_41">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{CurrentTaxXFRow(&quot;itemid&quot;).ToString, &quot;XF&quot;}]" DataTable="[dtMatchedItems]" DisplayName="Add XF Row Data Row to Matched Items" sap:VirtualizedContainerService.HintSize="382,213.2" sap2010:WorkflowViewState.IdRef="AddDataRow_10">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:AddDataRow>
                        </Sequence>
                      </ActivityAction>
                    </ui:ForEachRow.Body>
                  </ui:ForEachRow>
                </Sequence>
                <Sequence DisplayName="Check Herb Items" sap:VirtualizedContainerService.HintSize="450,56.8" sap2010:WorkflowViewState.IdRef="Sequence_19">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="sd:DataTable" Name="dtTaxFamilyRows" />
                    <Variable x:TypeArguments="sd:DataTable" Name="dtTaxXFGroupRows" />
                    <Variable x:TypeArguments="sd:DataTable" Name="dtTaxHerbGroupRows" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:FilterDataTable DataTable="[dtHerbGroupSearch]" DisplayName="Filter Herbs Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="450,196" sap2010:WorkflowViewState.IdRef="FilterDataTable_19" OutputDataTable="[dtTaxHerbGroupRows]" SelectColumnsMode="Remove">
                    <ui:FilterDataTable.Filters>
                      <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                        <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                          <ui:FilterOperationArgument.Column>
                            <InArgument x:TypeArguments="x:String">["genus"]</InArgument>
                          </ui:FilterOperationArgument.Column>
                          <ui:FilterOperationArgument.Operand>
                            <InArgument x:TypeArguments="x:Object">[CurrentRow("genus")]</InArgument>
                          </ui:FilterOperationArgument.Operand>
                        </ui:FilterOperationArgument>
                      </scg:List>
                    </ui:FilterDataTable.Filters>
                    <ui:FilterDataTable.SelectColumns>
                      <scg:List x:TypeArguments="InArgument" Capacity="4">
                        <x:Null />
                      </scg:List>
                    </ui:FilterDataTable.SelectColumns>
                  </ui:FilterDataTable>
                  <ui:RemoveDuplicateRows DataTable="[dtTaxHerbGroupRows]" DisplayName="Remove Duplicate Herbs Rows" sap:VirtualizedContainerService.HintSize="450,113.2" sap2010:WorkflowViewState.IdRef="RemoveDuplicateRows_6" OutputDataTable="[dtTaxHerbGroupRows]" />
                  <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dtTaxHerbGroupRows]" DisplayName="For Each Row in dtTaxHerbGroupRows" sap:VirtualizedContainerService.HintSize="450,462.8" sap2010:WorkflowViewState.IdRef="ForEachRow_8">
                    <ui:ForEachRow.Body>
                      <ActivityAction x:TypeArguments="sd:DataRow">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentTaxHerbGroupRow" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="416,273.2" sap2010:WorkflowViewState.IdRef="Sequence_42">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{CurrentTaxHerbGroupRow(&quot;itemid&quot;).ToString, &quot;Herb&quot;}]" DataTable="[dtMatchedItems]" DisplayName="Add Herb Group Row Data Row to Matched Items" sap:VirtualizedContainerService.HintSize="382,213.2" sap2010:WorkflowViewState.IdRef="AddDataRow_11">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:AddDataRow>
                        </Sequence>
                      </ActivityAction>
                    </ui:ForEachRow.Body>
                  </ui:ForEachRow>
                </Sequence>
                <Sequence DisplayName="Check Invasive Species Items" sap:VirtualizedContainerService.HintSize="450,56.8" sap2010:WorkflowViewState.IdRef="Sequence_20">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="sd:DataTable" Name="dtTaxFamilyRows" />
                    <Variable x:TypeArguments="sd:DataTable" Name="dtTaxXFGroupRows" />
                    <Variable x:TypeArguments="sd:DataTable" Name="dtTaxHerbGroupRows" />
                    <Variable x:TypeArguments="sd:DataTable" Name="dtTaxInvasiveSpeciesRows" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:FilterDataTable DataTable="[dtInvasiveSearch]" DisplayName="Filter Invasive Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="450,196" sap2010:WorkflowViewState.IdRef="FilterDataTable_20" OutputDataTable="[dtTaxInvasiveSpeciesRows]" SelectColumnsMode="Remove">
                    <ui:FilterDataTable.Filters>
                      <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                        <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                          <ui:FilterOperationArgument.Column>
                            <InArgument x:TypeArguments="x:String">["genus"]</InArgument>
                          </ui:FilterOperationArgument.Column>
                          <ui:FilterOperationArgument.Operand>
                            <InArgument x:TypeArguments="x:Object">[CurrentRow("genus")]</InArgument>
                          </ui:FilterOperationArgument.Operand>
                        </ui:FilterOperationArgument>
                      </scg:List>
                    </ui:FilterDataTable.Filters>
                    <ui:FilterDataTable.SelectColumns>
                      <scg:List x:TypeArguments="InArgument" Capacity="4">
                        <x:Null />
                      </scg:List>
                    </ui:FilterDataTable.SelectColumns>
                  </ui:FilterDataTable>
                  <ui:RemoveDuplicateRows DataTable="[dtTaxInvasiveSpeciesRows]" DisplayName="Remove Invasive Duplicate Rows" sap:VirtualizedContainerService.HintSize="450,113.2" sap2010:WorkflowViewState.IdRef="RemoveDuplicateRows_7" OutputDataTable="[dtTaxInvasiveSpeciesRows]" />
                  <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dtTaxInvasiveSpeciesRows]" DisplayName="For Each Row in dtTaxInvasiveSpeciesRows" sap:VirtualizedContainerService.HintSize="450,462.8" sap2010:WorkflowViewState.IdRef="ForEachRow_9">
                    <ui:ForEachRow.Body>
                      <ActivityAction x:TypeArguments="sd:DataRow">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentTaxInvasiveSpeciesRow" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="416,273.2" sap2010:WorkflowViewState.IdRef="Sequence_43">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{CurrentTaxInvasiveSpeciesRow(&quot;itemid&quot;).ToString, &quot;Invasive&quot;}]" DataTable="[dtMatchedItems]" DisplayName="Add Invasive Species Row Data Row to Matched Items" sap:VirtualizedContainerService.HintSize="382,213.2" sap2010:WorkflowViewState.IdRef="AddDataRow_12">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:AddDataRow>
                        </Sequence>
                      </ActivityAction>
                    </ui:ForEachRow.Body>
                  </ui:ForEachRow>
                </Sequence>
                <Sequence DisplayName="Check CITES Items" sap:VirtualizedContainerService.HintSize="450,48" sap2010:WorkflowViewState.IdRef="Sequence_21">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="sd:DataTable" Name="dtTaxFamilyRows" />
                    <Variable x:TypeArguments="sd:DataTable" Name="dtTaxXFGroupRows" />
                    <Variable x:TypeArguments="sd:DataTable" Name="dtTaxHerbGroupRows" />
                    <Variable x:TypeArguments="sd:DataTable" Name="dtTaxInvasiveSpeciesRows" />
                    <Variable x:TypeArguments="sd:DataTable" Name="dtTaxCitesRows" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:FilterDataTable DataTable="[dtCitesSearch]" DisplayName="Filter Cites Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="450,196" sap2010:WorkflowViewState.IdRef="FilterDataTable_21" OutputDataTable="[dtTaxCitesRows]" SelectColumnsMode="Remove">
                    <ui:FilterDataTable.Filters>
                      <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                        <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                          <ui:FilterOperationArgument.Column>
                            <InArgument x:TypeArguments="x:String">["genus"]</InArgument>
                          </ui:FilterOperationArgument.Column>
                          <ui:FilterOperationArgument.Operand>
                            <InArgument x:TypeArguments="x:Object">[CurrentRow("genus")]</InArgument>
                          </ui:FilterOperationArgument.Operand>
                        </ui:FilterOperationArgument>
                      </scg:List>
                    </ui:FilterDataTable.Filters>
                    <ui:FilterDataTable.SelectColumns>
                      <scg:List x:TypeArguments="InArgument" Capacity="4">
                        <x:Null />
                      </scg:List>
                    </ui:FilterDataTable.SelectColumns>
                  </ui:FilterDataTable>
                  <ui:RemoveDuplicateRows DataTable="[dtTaxCitesRows]" DisplayName="Remove Duplicate Cites Rows" sap:VirtualizedContainerService.HintSize="450,113.2" sap2010:WorkflowViewState.IdRef="RemoveDuplicateRows_8" OutputDataTable="[dtTaxCitesRows]" />
                  <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dtTaxCitesRows]" DisplayName="For Each Row in dtTaxCitesRows" sap:VirtualizedContainerService.HintSize="450,462.8" sap2010:WorkflowViewState.IdRef="ForEachRow_10">
                    <ui:ForEachRow.Body>
                      <ActivityAction x:TypeArguments="sd:DataRow">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentTaxCitesRow" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="416,273.2" sap2010:WorkflowViewState.IdRef="Sequence_44">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{CurrentTaxCitesRow(&quot;itemid&quot;).ToString, &quot;Cites&quot;}]" DataTable="[dtMatchedItems]" DisplayName="Add CitesRow Data Row to Matched Items" sap:VirtualizedContainerService.HintSize="382,213.2" sap2010:WorkflowViewState.IdRef="AddDataRow_13">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:AddDataRow>
                        </Sequence>
                      </ActivityAction>
                    </ui:ForEachRow.Body>
                  </ui:ForEachRow>
                </Sequence>
              </Sequence>
            </ActivityAction>
          </ui:ForEachRow.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:ForEachRow>
      </Sequence>
      <Sequence sap2010:Annotation.AnnotationText="For every row in dtMatchedItems, get the full regulation information (EG annex, part, regulation text)" DisplayName="Get regulation data" sap:VirtualizedContainerService.HintSize="468,146.4" sap2010:WorkflowViewState.IdRef="Sequence_53">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dtMatchedItems]" DisplayName="For Each Row in MatchedItems Data Table" sap:VirtualizedContainerService.HintSize="547.6,1146.4" sap2010:WorkflowViewState.IdRef="ForEachRow_12">
          <ui:ForEachRow.Body>
            <ActivityAction x:TypeArguments="sd:DataRow">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentMatchedItemRow" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="513.6,956.8" sap2010:WorkflowViewState.IdRef="Sequence_22">
                <Sequence.Variables>
                  <Variable x:TypeArguments="sd:DataTable" Name="dtRegulationItemID" />
                  <Variable x:TypeArguments="x:String" Name="strConditions" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:FilterDataTable DataTable="[dtRegulation]" DisplayName="Filter Regulation to ItemID " FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="479.6,196" sap2010:WorkflowViewState.IdRef="FilterDataTable_22" OutputDataTable="[dtRegulationItemID]" SelectColumnsMode="Remove">
                  <ui:FilterDataTable.Filters>
                    <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                      <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                        <ui:FilterOperationArgument.Column>
                          <InArgument x:TypeArguments="x:String">["itemid"]</InArgument>
                        </ui:FilterOperationArgument.Column>
                        <ui:FilterOperationArgument.Operand>
                          <InArgument x:TypeArguments="x:String">[CurrentMatchedItemRow("itemid").Tostring]</InArgument>
                        </ui:FilterOperationArgument.Operand>
                      </ui:FilterOperationArgument>
                    </scg:List>
                  </ui:FilterDataTable.Filters>
                  <ui:FilterDataTable.SelectColumns>
                    <scg:List x:TypeArguments="InArgument" Capacity="4">
                      <x:Null />
                    </scg:List>
                  </ui:FilterDataTable.SelectColumns>
                </ui:FilterDataTable>
                <Assign DisplayName="Assign blank Conditions string" sap:VirtualizedContainerService.HintSize="479.6,114.4" sap2010:WorkflowViewState.IdRef="Assign_36">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[strConditions]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">
                      <Literal x:TypeArguments="x:String" Value="" />
                    </InArgument>
                  </Assign.Value>
                </Assign>
                <If Condition="[dtRegulationItemID.Rows(0)(&quot;statementreq&quot;).Tostring = &quot;0&quot;]" DisplayName="If statementreq = 0" sap:VirtualizedContainerService.HintSize="479.6,56.8" sap2010:WorkflowViewState.IdRef="If_4">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="468,165.6" sap2010:WorkflowViewState.IdRef="Sequence_45">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign DisplayName="Assign StatementReq to Conditions string" sap:VirtualizedContainerService.HintSize="434,105.6" sap2010:WorkflowViewState.IdRef="Assign_37">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strConditions]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[strConditions &amp; "|No Statement Required|"]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="468,90.4" sap2010:WorkflowViewState.IdRef="Sequence_46">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Sequence>
                  </If.Else>
                </If>
                <If Condition="[dtRegulationItemID.Rows(0)(&quot;specialreq&quot;).Tostring.Contains(&quot;PROHIBITED&quot;) = True]" DisplayName="If specialreq contains PROHIBITED" sap:VirtualizedContainerService.HintSize="479.6,56.8" sap2010:WorkflowViewState.IdRef="If_5">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="468,165.6" sap2010:WorkflowViewState.IdRef="Sequence_47">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign DisplayName="Assign Prohibited to Conditions string" sap:VirtualizedContainerService.HintSize="434,105.6" sap2010:WorkflowViewState.IdRef="Assign_38">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strConditions]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[strConditions &amp; "|Prohibited|"]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="468,90.4" sap2010:WorkflowViewState.IdRef="Sequence_48">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Sequence>
                  </If.Else>
                </If>
                <If Condition="[dtRegulationItemID.Rows(0)(&quot;conditional_host&quot;).Tostring = &quot;1&quot;]" DisplayName="If conditional host = 1" sap:VirtualizedContainerService.HintSize="479.6,56.8" sap2010:WorkflowViewState.IdRef="If_6">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="468,165.6" sap2010:WorkflowViewState.IdRef="Sequence_49">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign DisplayName="Assign Conditional Host to Conditions string" sap:VirtualizedContainerService.HintSize="434,105.6" sap2010:WorkflowViewState.IdRef="Assign_39">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strConditions]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[strConditions &amp; "|Conditional Host|"]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="468,90.4" sap2010:WorkflowViewState.IdRef="Sequence_50">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Sequence>
                  </If.Else>
                </If>
                <If Condition="[dtRegulationItemID.Rows(0)(&quot;conditional_origin&quot;).Tostring = &quot;1&quot;]" DisplayName="If conditional origin = 1" sap:VirtualizedContainerService.HintSize="479.6,56.8" sap2010:WorkflowViewState.IdRef="If_7">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="468,165.6" sap2010:WorkflowViewState.IdRef="Sequence_51">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign DisplayName="Assign Conditional Origin to Conditions string" sap:VirtualizedContainerService.HintSize="434,105.6" sap2010:WorkflowViewState.IdRef="Assign_40">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[strConditions]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[strConditions &amp; "|Conditional Origin|"]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="468,90.4" sap2010:WorkflowViewState.IdRef="Sequence_52">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Sequence>
                  </If.Else>
                </If>
                <ui:MultipleAssign DisplayName="Assign all Regulation metadata" sap:VirtualizedContainerService.HintSize="479.6,359.2" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
                  <ui:MultipleAssign.AssignOperations>
                    <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:Object">[CurrentMatchedItemRow("Annex")]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:Object">[dtRegulationItemID.Rows(0)("Annex").Tostring]</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:Object">[CurrentMatchedItemRow("Part")]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:Object">[dtRegulationItemID.Rows(0)("Part").Tostring]</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:Object">[CurrentMatchedItemRow("Item")]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:Object">[dtRegulationItemID.Rows(0)("Item").Tostring]</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:Object">[CurrentMatchedItemRow("origin")]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:Object">[dtRegulationItemID.Rows(0)("Origin").Tostring]</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:Object">[CurrentMatchedItemRow("Description")]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:Object">[dtRegulationItemID.Rows(0)("Description").Tostring]</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:Object">[CurrentMatchedItemRow("SpecialRequirements")]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:Object">[dtRegulationItemID.Rows(0)("specialreq").Tostring]</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_7">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:Object">[CurrentMatchedItemRow("notes")]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:Object">[dtRegulationItemID.Rows(0)("Notes").Tostring]</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_8">
                        <ui:AssignOperation.To>
                          <OutArgument x:TypeArguments="x:Object">[CurrentMatchedItemRow("Conditions")]</OutArgument>
                        </ui:AssignOperation.To>
                        <ui:AssignOperation.Value>
                          <InArgument x:TypeArguments="x:Object">[strConditions]</InArgument>
                        </ui:AssignOperation.Value>
                      </ui:AssignOperation>
                    </scg:List>
                  </ui:MultipleAssign.AssignOperations>
                </ui:MultipleAssign>
              </Sequence>
            </ActivityAction>
          </ui:ForEachRow.Body>
        </ui:ForEachRow>
      </Sequence>
      <Sequence sap2010:Annotation.AnnotationText="Query all relevant regulations for this genus, country of origin and commodity type, find the intersection (where the regulation appears in all 3) and save that to dtMatchedItems (which overwrites the previous dtMatchedItems as it is no longer relevant). Remove the category column (not required for the output) and removes duplicate rows to give only the regulations required" DisplayName="Intersection" sap:VirtualizedContainerService.HintSize="468,1318" sap2010:WorkflowViewState.IdRef="Sequence_23">
        <Sequence.Variables>
          <Variable x:TypeArguments="scg:List(x:String)" Name="listGenus" />
          <Variable x:TypeArguments="scg:List(x:String)" Name="listOrigin" />
          <Variable x:TypeArguments="scg:List(x:String)" Name="listCommodity" />
          <Variable x:TypeArguments="scg:List(x:String)" Name="listIntersection" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Assign DisplayName="Get all items for this Genus" sap:VirtualizedContainerService.HintSize="434,115.6" sap2010:WorkflowViewState.IdRef="Assign_41">
          <Assign.To>
            <OutArgument x:TypeArguments="scg:List(x:String)">[listGenus]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="scg:List(x:String)" xml:space="preserve">[dtMatchedItems.AsEnumerable().
    Where(Function(r) r("ItemCategory").ToString = "Genus").
    Select(Function(r) r("ItemId").ToString()).
    Distinct().
    ToList()]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign DisplayName="Get all items for this origin country" sap:VirtualizedContainerService.HintSize="434,115.6" sap2010:WorkflowViewState.IdRef="Assign_42">
          <Assign.To>
            <OutArgument x:TypeArguments="scg:List(x:String)">[listOrigin]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="scg:List(x:String)" xml:space="preserve">[dtMatchedItems.AsEnumerable().
    Where(Function(r) r("ItemCategory").ToString = "OriginCountry").
    Select(Function(r) r("ItemId").ToString()).
    Distinct().
    ToList()]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign DisplayName="Get all items for the relevant commoditys" sap:VirtualizedContainerService.HintSize="434,115.6" sap2010:WorkflowViewState.IdRef="Assign_43">
          <Assign.To>
            <OutArgument x:TypeArguments="scg:List(x:String)">[listCommodity]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="scg:List(x:String)" xml:space="preserve">[dtMatchedItems.AsEnumerable().
    Where(Function(r) r("ItemCategory").ToString = "Commodity").
    Select(Function(r) r("ItemId").ToString()).
    Distinct().
    ToList()]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign DisplayName="Find all items that appear in Genus, Origin Country and Commoditys item lists" sap:VirtualizedContainerService.HintSize="434,114.4" sap2010:WorkflowViewState.IdRef="Assign_44">
          <Assign.To>
            <OutArgument x:TypeArguments="scg:List(x:String)">[listIntersection]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="scg:List(x:String)">[listGenus.Intersect(listOrigin).Intersect(listCommodity).ToList()]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign sap2010:Annotation.AnnotationText="This overwrites the previous dtMatchedItems with only the relevant regulations" DisplayName="Save listintersection to datatable" sap:VirtualizedContainerService.HintSize="434,159.2" sap2010:WorkflowViewState.IdRef="Assign_45">
          <Assign.To>
            <OutArgument x:TypeArguments="sd:DataTable">[dtMatchedItems]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="sd:DataTable">[If(dtMatchedItems.AsEnumerable().Any(Function(r) listIntersection.Contains(r("ItemID").ToString)), dtMatchedItems.AsEnumerable().Where(Function(r) listIntersection.Contains(r("ItemID").ToString)).CopyToDataTable(), dtMatchedItems.Clone())]</InArgument>
          </Assign.Value>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </Assign>
        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,175.6" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Warn" Message="[&quot;When using commodities, enable the activity below &amp; review&quot;]" />
        <ui:CommentOut DisplayName="Comment Out - If not using commodity" sap:VirtualizedContainerService.HintSize="434,85.2" sap2010:WorkflowViewState.IdRef="CommentOut_1">
          <ui:CommentOut.Body>
            <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="468,165.6" sap2010:WorkflowViewState.IdRef="Sequence_54">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign sap:VirtualizedContainerService.HintSize="434,105.6" sap2010:WorkflowViewState.IdRef="Assign_46">
                <Assign.To>
                  <OutArgument x:TypeArguments="scg:List(x:String)">[listIntersection]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="scg:List(x:String)">[listGenus.Intersect(listOrigin).ToList()]</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
          </ui:CommentOut.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:CommentOut>
        <ui:RemoveDataColumn Column="{x:Null}" ColumnIndex="{x:Null}" sap2010:Annotation.AnnotationText="Remove the category column, not relevant for output" ColumnName="ItemCategory" DataTable="[dtMatchedItems]" DisplayName="Remove Item Category Data Column" sap:VirtualizedContainerService.HintSize="434,146.4" sap2010:WorkflowViewState.IdRef="RemoveDataColumn_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:RemoveDataColumn>
        <ui:RemoveDuplicateRows DataTable="[dtMatchedItems]" DisplayName="Remove Duplicate Matched Item Rows" sap:VirtualizedContainerService.HintSize="434,104.4" sap2010:WorkflowViewState.IdRef="RemoveDuplicateRows_9" OutputDataTable="[dtMatchedItems]">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:RemoveDuplicateRows>
      </Sequence>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="468,175.6" sap2010:WorkflowViewState.IdRef="LogMessage_4" Message="[&quot;Delete the write csv below after integration.&quot;]" />
      <ui:AppendWriteCsvFile PathResource="{x:Null}" AddHeaders="True" CsvAction="Write" DataTable="[dtMatchedItems]" Delimitator="Comma" DelimitatorForViewModel="Comma" DisplayName="Write CSV - For testing output only" FilePath="C:\Users\da000087\Downloads\Phyto\matcheditems.csv" sap:VirtualizedContainerService.HintSize="468,76.4" sap2010:WorkflowViewState.IdRef="AppendWriteCsvFile_1" ShouldQuote="True">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:AppendWriteCsvFile>
    </Sequence>
  </Sequence>
</Activity>